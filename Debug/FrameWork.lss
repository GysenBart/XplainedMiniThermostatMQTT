
FrameWork.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000166  00800100  00004914  000049a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004914  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000050e  00800266  00800266  00004b0e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00004b0e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004b6c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003d8  00000000  00000000  00004bac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003ae9  00000000  00000000  00004f84  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001677  00000000  00000000  00008a6d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00004498  00000000  00000000  0000a0e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d04  00000000  00000000  0000e57c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000c48a  00000000  00000000  0000f280  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a2c  00000000  00000000  0001b70a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002f8  00000000  00000000  0001d136  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00004e07  00000000  00000000  0001d42e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 8a 03 	jmp	0x714	; 0x714 <__ctors_end>
       4:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
       8:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
       c:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      10:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      14:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      18:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      1c:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      20:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      24:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      28:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      2c:	0c 94 85 07 	jmp	0xf0a	; 0xf0a <__vector_11>
      30:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      34:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      38:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      3c:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      40:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      44:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      48:	0c 94 60 08 	jmp	0x10c0	; 0x10c0 <__vector_18>
      4c:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      50:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      54:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      58:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      5c:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      60:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      64:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      68:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      6c:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      70:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      74:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      78:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      7c:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      80:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      84:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      88:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      8c:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      90:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      94:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      98:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      9c:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      a0:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      a4:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      a8:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      ac:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      b0:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__bad_interrupt>
      b4:	34 1c       	adc	r3, r4
      b6:	c5 1c       	adc	r12, r5
      b8:	3d 1c       	adc	r3, r13
      ba:	5c 1c       	adc	r5, r12
      bc:	86 1c       	adc	r8, r6
      be:	9a 1c       	adc	r9, r10
      c0:	ae 1c       	adc	r10, r14

000000c2 <__trampolines_end>:
      c2:	6e 61       	ori	r22, 0x1E	; 30
      c4:	6e 00       	.word	0x006e	; ????

000000c6 <__c.2332>:
      c6:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      d6:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      e6:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      f6:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     106:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     116:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     126:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     136:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     146:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     156:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     166:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     176:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     186:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     196:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1a6:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1b6:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001c4 <g_Font3>:
     1c4:	00 00 00 00 5c 00 0c 00 0c 7c 28 7c 7c 44 7c 24     ....\....|(||D|$
     1d4:	10 48 28 54 08 00 0c 00 38 44 00 44 38 00 20 10     .H(T....8D.D8. .
     1e4:	08 10 38 10 80 40 00 10 10 10 00 40 00 20 10 08     ..8..@.....@. ..
     1f4:	38 44 38 00 7c 00 64 54 48 44 54 28 1c 10 7c 4c     8D8.|.dTHDT(..|L
     204:	54 24 38 54 20 04 74 0c 28 54 28 08 54 38 00 50     T$8T .t.(T(.T8.P
     214:	00 80 50 00 10 28 44 28 28 28 44 28 10 04 54 08     ..P..(D(((D(..T.
     224:	38 4c 5c 78 14 78 7c 54 28 38 44 44 7c 44 38 7c     8L\x.x|T(8DD|D8|
     234:	54 44 7c 14 04 38 44 34 7c 10 7c 00 7c 00 20 40     TD|..8D4|.|.|. @
     244:	3c 7c 10 6c 7c 40 40 7c 08 7c 7c 04 7c 7c 44 7c     <|.l|@@|.||.||D|
     254:	7c 14 08 38 44 78 7c 14 68 48 54 24 04 7c 04 7c     |..8Dx|.hHT$.|.|
     264:	40 7c 3c 40 3c 7c 20 7c 6c 10 6c 1c 60 1c 64 54     @|<@<| |l.l.`.dT
     274:	4c 7c 44 00 08 10 20 44 7c 00 08 04 08 80 80 80     L|D... D|.......
     284:	04 08 00                                            ...

00000287 <g_Font5>:
     287:	00 00 00 00 00 00 00 4f 00 00 00 07 00 07 00 14     .......O........
     297:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
     2a7:	55 22 20 00 05 03 00 00 00 1c 22 41 00 00 41 22     U" ......."A..A"
     2b7:	1c 00 14 08 3e 08 14 08 08 3e 08 08 50 30 00 00     ....>....>..P0..
     2c7:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
     2d7:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     2e7:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     2f7:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     307:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
     317:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     327:	3e 41 5d 55 1e 7e 11 11 11 7e 7f 49 49 49 36 3e     >A]U.~...~.III6>
     337:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     347:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     357:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     367:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     377:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 26     .....>AQ!^...)F&
     387:	49 49 49 32 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III2.....?@@@?. 
     397:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     3a7:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     3b7:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     3c7:	00 00 03 05 00 20 54 54 54 78 7f 44 44 44 38 38     ..... TTTx.DDD88
     3d7:	44 44 44 44 38 44 44 44 7f 38 54 54 54 18 04 04     DDDD8DDD.8TTT...
     3e7:	7e 05 05 08 54 54 54 3c 7f 08 04 04 78 00 44 7d     ~...TTT<....x.D}
     3f7:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     407:	00 7c 04 7c 04 78 7c 08 04 04 78 38 44 44 44 38     .|.|.x|...x8DDD8
     417:	7c 14 14 14 08 08 14 14 14 7c 7c 08 04 04 00 48     |........||....H
     427:	54 54 54 24 04 04 3f 44 44 3c 40 40 20 7c 1c 20     TTT$..?DD<@@ |. 
     437:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     447:	50 3c 44 64 54 4c 44 08 36 41 41 00 00 00 77 00     P<DdTLD.6AA...w.
     457:	00 00 41 41 36 08 08 08 2a 1c 08 08 1c 2a 08 08     ..AA6...*....*..
     467:	ff ff ff ff ff                                      .....

0000046c <g_Font7>:
	...
     474:	06 5f 5f 06 00 00 00 07 07 00 07 07 00 14 7f 7f     .__.............
     484:	14 7f 7f 14 24 2e 6b 6b 3a 12 00 46 66 30 18 0c     ....$.kk:..Ff0..
     494:	66 62 30 7a 4f 5d 37 7a 48 04 07 03 00 00 00 00     fb0zO]7zH.......
     4a4:	00 1c 3e 63 41 00 00 00 41 63 3e 1c 00 00 08 2a     ..>cA...Ac>....*
     4b4:	3e 1c 1c 3e 2a 08 08 3e 3e 08 08 00 00 80 e0 60     >..>*..>>......`
     4c4:	00 00 00 08 08 08 08 08 08 00 00 00 60 60 00 00     ............``..
     4d4:	00 60 30 18 0c 06 03 01 3e 7f 71 59 4d 7f 3e 40     .`0.....>.qYM.>@
     4e4:	42 7f 7f 40 40 00 62 73 59 49 6f 66 00 22 63 49     B..@@.bsYIof."cI
     4f4:	49 7f 36 00 18 1c 16 53 7f 7f 50 27 67 45 45 7d     I.6....S..P'gEE}
     504:	39 00 3c 7e 4b 49 79 30 00 03 03 71 79 0f 07 00     9.<~KIy0...qy...
     514:	36 7f 49 49 7f 36 00 06 4f 49 69 3f 1e 00 00 00     6.II.6..OIi?....
     524:	66 66 00 00 00 00 80 e6 66 00 00 00 08 1c 36 63     ff......f.....6c
     534:	41 00 00 24 24 24 24 24 24 00 00 41 63 36 1c 08     A..$$$$$$..Ac6..
     544:	00 02 03 51 59 0f 06 00 3e 7f 41 5d 5d 1f 1e 7c     ...QY...>.A]]..|
     554:	7e 13 13 7e 7c 00 41 7f 7f 49 49 7f 36 1c 3e 63     ~..~|.A..II.6.>c
     564:	41 41 63 22 41 7f 7f 41 63 3e 1c 41 7f 7f 49 5d     AAc"A..Ac>.A..I]
     574:	41 63 41 7f 7f 49 1d 01 03 1c 3e 63 41 51 73 72     AcA..I....>cAQsr
     584:	7f 7f 08 08 7f 7f 00 00 41 7f 7f 41 00 00 30 70     ........A..A..0p
     594:	40 41 7f 3f 01 41 7f 7f 08 1c 77 63 41 7f 7f 41     @A.?.A....wcA..A
     5a4:	40 60 70 7f 7f 0e 1c 0e 7f 7f 7f 7f 06 0c 18 7f     @`p.............
     5b4:	7f 1c 3e 63 41 63 3e 1c 41 7f 7f 49 09 0f 06 1e     ..>cAc>.A..I....
     5c4:	3f 21 71 7f 5e 00 41 7f 7f 09 19 7f 66 26 6f 4d     ?!q.^.A.....f&oM
     5d4:	59 73 32 00 03 41 7f 7f 41 03 00 7f 7f 40 40 7f     Ys2..A..A....@@.
     5e4:	7f 00 1f 3f 60 60 3f 1f 00 7f 7f 30 18 30 7f 7f     ...?``?....0.0..
     5f4:	43 67 3c 18 3c 67 43 07 4f 78 78 4f 07 00 47 63     Cg<.<gC.OxxO..Gc
     604:	71 59 4d 67 73 00 7f 7f 41 41 00 00 01 03 06 0c     qYMgs...AA......
     614:	18 30 60 00 41 41 7f 7f 00 00 08 0c 06 03 06 0c     .0`.AA..........
     624:	08 80 80 80 80 80 80 80 00 00 03 07 04 00 00 20     ............... 
     634:	74 54 54 3c 78 40 41 7f 3f 48 48 78 30 38 7c 44     tTT<x@A.?HHx08|D
     644:	44 6c 28 00 30 78 48 49 3f 7f 40 38 7c 54 54 5c     Dl(.0xHI?.@8|TT\
     654:	18 00 48 7e 7f 49 03 02 00 38 bc a4 a4 fc 78 00     ..H~.I...8....x.
     664:	41 7f 7f 08 04 7c 78 00 44 7d 7d 40 00 00 60 e0     A....|x.D}}@..`.
     674:	80 80 fd 7d 00 41 7f 7f 10 38 6c 44 00 41 7f 7f     ...}.A...8lD.A..
     684:	40 00 00 78 7c 1c 38 1c 7c 78 7c 7c 04 04 7c 78     @..x|.8.|x||..|x
     694:	00 38 7c 44 44 7c 38 00 00 fc fc a4 24 3c 18 18     .8|DD|8.....$<..
     6a4:	3c 24 a4 f8 fc 84 44 7c 78 4c 04 1c 18 48 5c 54     <$....D|xL...H\T
     6b4:	54 74 24 00 00 04 3e 7f 44 24 00 3c 7c 40 40 3c     Tt$...>.D$.<|@@<
     6c4:	7c 40 1c 3c 60 60 3c 1c 00 3c 7c 70 38 70 7c 3c     |@.<``<..<|p8p|<
     6d4:	44 6c 38 10 38 6c 44 3c bc a0 a0 fc 7c 00 4c 64     Dl8.8lD<....|.Ld
     6e4:	74 5c 4c 64 00 08 08 3e 77 41 41 00 00 00 00 77     t\Ld...>wAA....w
     6f4:	77 00 00 41 41 77 3e 08 08 00 02 03 01 03 02 03     w..AAw>.........
     704:	01 ff 81 81 81 81 81 ff 0e 9f 91 b1 fb 4a 00 00     .............J..

00000714 <__ctors_end>:
     714:	11 24       	eor	r1, r1
     716:	1f be       	out	0x3f, r1	; 63
     718:	cf ef       	ldi	r28, 0xFF	; 255
     71a:	d8 e0       	ldi	r29, 0x08	; 8
     71c:	de bf       	out	0x3e, r29	; 62
     71e:	cd bf       	out	0x3d, r28	; 61

00000720 <__do_copy_data>:
     720:	12 e0       	ldi	r17, 0x02	; 2
     722:	a0 e0       	ldi	r26, 0x00	; 0
     724:	b1 e0       	ldi	r27, 0x01	; 1
     726:	e4 e1       	ldi	r30, 0x14	; 20
     728:	f9 e4       	ldi	r31, 0x49	; 73
     72a:	02 c0       	rjmp	.+4      	; 0x730 <__do_copy_data+0x10>
     72c:	05 90       	lpm	r0, Z+
     72e:	0d 92       	st	X+, r0
     730:	a6 36       	cpi	r26, 0x66	; 102
     732:	b1 07       	cpc	r27, r17
     734:	d9 f7       	brne	.-10     	; 0x72c <__do_copy_data+0xc>

00000736 <__do_clear_bss>:
     736:	27 e0       	ldi	r18, 0x07	; 7
     738:	a6 e6       	ldi	r26, 0x66	; 102
     73a:	b2 e0       	ldi	r27, 0x02	; 2
     73c:	01 c0       	rjmp	.+2      	; 0x740 <.do_clear_bss_start>

0000073e <.do_clear_bss_loop>:
     73e:	1d 92       	st	X+, r1

00000740 <.do_clear_bss_start>:
     740:	a4 37       	cpi	r26, 0x74	; 116
     742:	b2 07       	cpc	r27, r18
     744:	e1 f7       	brne	.-8      	; 0x73e <.do_clear_bss_loop>
     746:	0e 94 5a 1b 	call	0x36b4	; 0x36b4 <main>
     74a:	0c 94 88 24 	jmp	0x4910	; 0x4910 <_exit>

0000074e <__bad_interrupt>:
     74e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000752 <FindString>:
#include "Buffer.h"

struct _RxBuffer UART_RxBuffer;

signed int FindString(const uint8_t *l_String, struct _RxBuffer *l_UART_RxBuffer)
{
     752:	cf 93       	push	r28
     754:	df 93       	push	r29
     756:	cd b7       	in	r28, 0x3d	; 61
     758:	de b7       	in	r29, 0x3e	; 62
     75a:	27 97       	sbiw	r28, 0x07	; 7
     75c:	0f b6       	in	r0, 0x3f	; 63
     75e:	f8 94       	cli
     760:	de bf       	out	0x3e, r29	; 62
     762:	0f be       	out	0x3f, r0	; 63
     764:	cd bf       	out	0x3d, r28	; 61
     766:	9d 83       	std	Y+5, r25	; 0x05
     768:	8c 83       	std	Y+4, r24	; 0x04
     76a:	7f 83       	std	Y+7, r23	; 0x07
     76c:	6e 83       	std	Y+6, r22	; 0x06
	unsigned char l_BufferIndex = l_UART_RxBuffer->ReadIndex;
     76e:	8e 81       	ldd	r24, Y+6	; 0x06
     770:	9f 81       	ldd	r25, Y+7	; 0x07
     772:	89 59       	subi	r24, 0x99	; 153
     774:	9f 4f       	sbci	r25, 0xFF	; 255
     776:	fc 01       	movw	r30, r24
     778:	80 81       	ld	r24, Z
     77a:	89 83       	std	Y+1, r24	; 0x01
	unsigned char l_StringIndex = 1;
     77c:	81 e0       	ldi	r24, 0x01	; 1
     77e:	8a 83       	std	Y+2, r24	; 0x02
	unsigned char l_MatchFound = 0;
     780:	1b 82       	std	Y+3, r1	; 0x03
	
	while (l_BufferIndex <= l_UART_RxBuffer->WriteIndex)
     782:	46 c0       	rjmp	.+140    	; 0x810 <FindString+0xbe>
	{
		if (*l_String == l_UART_RxBuffer->Buffer[l_BufferIndex])
     784:	8c 81       	ldd	r24, Y+4	; 0x04
     786:	9d 81       	ldd	r25, Y+5	; 0x05
     788:	fc 01       	movw	r30, r24
     78a:	40 81       	ld	r20, Z
     78c:	89 81       	ldd	r24, Y+1	; 0x01
     78e:	88 2f       	mov	r24, r24
     790:	90 e0       	ldi	r25, 0x00	; 0
     792:	2e 81       	ldd	r18, Y+6	; 0x06
     794:	3f 81       	ldd	r19, Y+7	; 0x07
     796:	82 0f       	add	r24, r18
     798:	93 1f       	adc	r25, r19
     79a:	fc 01       	movw	r30, r24
     79c:	80 81       	ld	r24, Z
     79e:	48 17       	cp	r20, r24
     7a0:	a1 f5       	brne	.+104    	; 0x80a <FindString+0xb8>
		{
			l_MatchFound = 1;			// found a first match. Now loop through the string until you reach the 0 of the string
     7a2:	81 e0       	ldi	r24, 0x01	; 1
     7a4:	8b 83       	std	Y+3, r24	; 0x03
			l_StringIndex = 1;
     7a6:	81 e0       	ldi	r24, 0x01	; 1
     7a8:	8a 83       	std	Y+2, r24	; 0x02

			while(*(l_String + l_StringIndex))
     7aa:	1d c0       	rjmp	.+58     	; 0x7e6 <FindString+0x94>
			{
				if (*(l_String + l_StringIndex) != l_UART_RxBuffer->Buffer[l_BufferIndex + l_StringIndex])
     7ac:	8a 81       	ldd	r24, Y+2	; 0x02
     7ae:	88 2f       	mov	r24, r24
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	2c 81       	ldd	r18, Y+4	; 0x04
     7b4:	3d 81       	ldd	r19, Y+5	; 0x05
     7b6:	82 0f       	add	r24, r18
     7b8:	93 1f       	adc	r25, r19
     7ba:	fc 01       	movw	r30, r24
     7bc:	40 81       	ld	r20, Z
     7be:	89 81       	ldd	r24, Y+1	; 0x01
     7c0:	28 2f       	mov	r18, r24
     7c2:	30 e0       	ldi	r19, 0x00	; 0
     7c4:	8a 81       	ldd	r24, Y+2	; 0x02
     7c6:	88 2f       	mov	r24, r24
     7c8:	90 e0       	ldi	r25, 0x00	; 0
     7ca:	82 0f       	add	r24, r18
     7cc:	93 1f       	adc	r25, r19
     7ce:	2e 81       	ldd	r18, Y+6	; 0x06
     7d0:	3f 81       	ldd	r19, Y+7	; 0x07
     7d2:	82 0f       	add	r24, r18
     7d4:	93 1f       	adc	r25, r19
     7d6:	fc 01       	movw	r30, r24
     7d8:	80 81       	ld	r24, Z
     7da:	48 17       	cp	r20, r24
     7dc:	09 f0       	breq	.+2      	; 0x7e0 <FindString+0x8e>
				{
					l_MatchFound = 0;
     7de:	1b 82       	std	Y+3, r1	; 0x03
				}
				l_StringIndex++;
     7e0:	8a 81       	ldd	r24, Y+2	; 0x02
     7e2:	8f 5f       	subi	r24, 0xFF	; 255
     7e4:	8a 83       	std	Y+2, r24	; 0x02
		if (*l_String == l_UART_RxBuffer->Buffer[l_BufferIndex])
		{
			l_MatchFound = 1;			// found a first match. Now loop through the string until you reach the 0 of the string
			l_StringIndex = 1;

			while(*(l_String + l_StringIndex))
     7e6:	8a 81       	ldd	r24, Y+2	; 0x02
     7e8:	88 2f       	mov	r24, r24
     7ea:	90 e0       	ldi	r25, 0x00	; 0
     7ec:	2c 81       	ldd	r18, Y+4	; 0x04
     7ee:	3d 81       	ldd	r19, Y+5	; 0x05
     7f0:	82 0f       	add	r24, r18
     7f2:	93 1f       	adc	r25, r19
     7f4:	fc 01       	movw	r30, r24
     7f6:	80 81       	ld	r24, Z
     7f8:	88 23       	and	r24, r24
     7fa:	c1 f6       	brne	.-80     	; 0x7ac <FindString+0x5a>
					l_MatchFound = 0;
				}
				l_StringIndex++;
			}
			
			if (l_MatchFound)
     7fc:	8b 81       	ldd	r24, Y+3	; 0x03
     7fe:	88 23       	and	r24, r24
     800:	21 f0       	breq	.+8      	; 0x80a <FindString+0xb8>
			{
				return l_BufferIndex;
     802:	89 81       	ldd	r24, Y+1	; 0x01
     804:	88 2f       	mov	r24, r24
     806:	90 e0       	ldi	r25, 0x00	; 0
     808:	0f c0       	rjmp	.+30     	; 0x828 <FindString+0xd6>
			}
		}		
		l_BufferIndex++;
     80a:	89 81       	ldd	r24, Y+1	; 0x01
     80c:	8f 5f       	subi	r24, 0xFF	; 255
     80e:	89 83       	std	Y+1, r24	; 0x01
{
	unsigned char l_BufferIndex = l_UART_RxBuffer->ReadIndex;
	unsigned char l_StringIndex = 1;
	unsigned char l_MatchFound = 0;
	
	while (l_BufferIndex <= l_UART_RxBuffer->WriteIndex)
     810:	8e 81       	ldd	r24, Y+6	; 0x06
     812:	9f 81       	ldd	r25, Y+7	; 0x07
     814:	8c 59       	subi	r24, 0x9C	; 156
     816:	9f 4f       	sbci	r25, 0xFF	; 255
     818:	fc 01       	movw	r30, r24
     81a:	90 81       	ld	r25, Z
     81c:	89 81       	ldd	r24, Y+1	; 0x01
     81e:	98 17       	cp	r25, r24
     820:	08 f0       	brcs	.+2      	; 0x824 <FindString+0xd2>
     822:	b0 cf       	rjmp	.-160    	; 0x784 <FindString+0x32>
				return l_BufferIndex;
			}
		}		
		l_BufferIndex++;
	}
	return -1;
     824:	8f ef       	ldi	r24, 0xFF	; 255
     826:	9f ef       	ldi	r25, 0xFF	; 255
}
     828:	27 96       	adiw	r28, 0x07	; 7
     82a:	0f b6       	in	r0, 0x3f	; 63
     82c:	f8 94       	cli
     82e:	de bf       	out	0x3e, r29	; 62
     830:	0f be       	out	0x3f, r0	; 63
     832:	cd bf       	out	0x3d, r28	; 61
     834:	df 91       	pop	r29
     836:	cf 91       	pop	r28
     838:	08 95       	ret

0000083a <ClearBuffer>:


void ClearBuffer(struct _RxBuffer *l_UART_RxBuffer)
{
     83a:	cf 93       	push	r28
     83c:	df 93       	push	r29
     83e:	00 d0       	rcall	.+0      	; 0x840 <ClearBuffer+0x6>
     840:	00 d0       	rcall	.+0      	; 0x842 <ClearBuffer+0x8>
     842:	cd b7       	in	r28, 0x3d	; 61
     844:	de b7       	in	r29, 0x3e	; 62
     846:	9c 83       	std	Y+4, r25	; 0x04
     848:	8b 83       	std	Y+3, r24	; 0x03
	unsigned int l_index=0;
     84a:	1a 82       	std	Y+2, r1	; 0x02
     84c:	19 82       	std	Y+1, r1	; 0x01
	
	for(l_index = 0; l_index < RXBUFFERSIZE0; l_index++)
     84e:	1a 82       	std	Y+2, r1	; 0x02
     850:	19 82       	std	Y+1, r1	; 0x01
     852:	0d c0       	rjmp	.+26     	; 0x86e <ClearBuffer+0x34>
	{
		l_UART_RxBuffer->Buffer[l_index] = 0;
     854:	2b 81       	ldd	r18, Y+3	; 0x03
     856:	3c 81       	ldd	r19, Y+4	; 0x04
     858:	89 81       	ldd	r24, Y+1	; 0x01
     85a:	9a 81       	ldd	r25, Y+2	; 0x02
     85c:	82 0f       	add	r24, r18
     85e:	93 1f       	adc	r25, r19
     860:	fc 01       	movw	r30, r24
     862:	10 82       	st	Z, r1

void ClearBuffer(struct _RxBuffer *l_UART_RxBuffer)
{
	unsigned int l_index=0;
	
	for(l_index = 0; l_index < RXBUFFERSIZE0; l_index++)
     864:	89 81       	ldd	r24, Y+1	; 0x01
     866:	9a 81       	ldd	r25, Y+2	; 0x02
     868:	01 96       	adiw	r24, 0x01	; 1
     86a:	9a 83       	std	Y+2, r25	; 0x02
     86c:	89 83       	std	Y+1, r24	; 0x01
     86e:	89 81       	ldd	r24, Y+1	; 0x01
     870:	9a 81       	ldd	r25, Y+2	; 0x02
     872:	84 36       	cpi	r24, 0x64	; 100
     874:	91 05       	cpc	r25, r1
     876:	70 f3       	brcs	.-36     	; 0x854 <ClearBuffer+0x1a>
	{
		l_UART_RxBuffer->Buffer[l_index] = 0;
	}
	
	l_UART_RxBuffer->WriteIndex = 0;
     878:	8b 81       	ldd	r24, Y+3	; 0x03
     87a:	9c 81       	ldd	r25, Y+4	; 0x04
     87c:	8c 59       	subi	r24, 0x9C	; 156
     87e:	9f 4f       	sbci	r25, 0xFF	; 255
     880:	fc 01       	movw	r30, r24
     882:	10 82       	st	Z, r1
	l_UART_RxBuffer->BufferOverflow = 0;
     884:	8b 81       	ldd	r24, Y+3	; 0x03
     886:	9c 81       	ldd	r25, Y+4	; 0x04
     888:	8a 59       	subi	r24, 0x9A	; 154
     88a:	9f 4f       	sbci	r25, 0xFF	; 255
     88c:	fc 01       	movw	r30, r24
     88e:	10 82       	st	Z, r1
	l_UART_RxBuffer->IsDirty = 0;
     890:	8b 81       	ldd	r24, Y+3	; 0x03
     892:	9c 81       	ldd	r25, Y+4	; 0x04
     894:	8b 59       	subi	r24, 0x9B	; 155
     896:	9f 4f       	sbci	r25, 0xFF	; 255
     898:	fc 01       	movw	r30, r24
     89a:	10 82       	st	Z, r1
	l_UART_RxBuffer->ReadIndex=0;
     89c:	8b 81       	ldd	r24, Y+3	; 0x03
     89e:	9c 81       	ldd	r25, Y+4	; 0x04
     8a0:	89 59       	subi	r24, 0x99	; 153
     8a2:	9f 4f       	sbci	r25, 0xFF	; 255
     8a4:	fc 01       	movw	r30, r24
     8a6:	10 82       	st	Z, r1
}
     8a8:	00 00       	nop
     8aa:	0f 90       	pop	r0
     8ac:	0f 90       	pop	r0
     8ae:	0f 90       	pop	r0
     8b0:	0f 90       	pop	r0
     8b2:	df 91       	pop	r29
     8b4:	cf 91       	pop	r28
     8b6:	08 95       	ret

000008b8 <AT_check>:
extern struct bmp2_data comp_data;


// Check if the interaction is OK
void AT_check(void)
{
     8b8:	cf 93       	push	r28
     8ba:	df 93       	push	r29
     8bc:	cd b7       	in	r28, 0x3d	; 61
     8be:	de b7       	in	r29, 0x3e	; 62
	puts_UART("AT\r\n");
     8c0:	81 e0       	ldi	r24, 0x01	; 1
     8c2:	91 e0       	ldi	r25, 0x01	; 1
     8c4:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
}
     8c8:	00 00       	nop
     8ca:	df 91       	pop	r29
     8cc:	cf 91       	pop	r28
     8ce:	08 95       	ret

000008d0 <AT_wificonnect>:

// Connect to a wifi network
void AT_wificonnect(struct _wifi *SSID, struct _wifi *password)
{
     8d0:	cf 93       	push	r28
     8d2:	df 93       	push	r29
     8d4:	00 d0       	rcall	.+0      	; 0x8d6 <AT_wificonnect+0x6>
     8d6:	00 d0       	rcall	.+0      	; 0x8d8 <AT_wificonnect+0x8>
     8d8:	cd b7       	in	r28, 0x3d	; 61
     8da:	de b7       	in	r29, 0x3e	; 62
     8dc:	9a 83       	std	Y+2, r25	; 0x02
     8de:	89 83       	std	Y+1, r24	; 0x01
     8e0:	7c 83       	std	Y+4, r23	; 0x04
     8e2:	6b 83       	std	Y+3, r22	; 0x03
	puts_UART("AT+CWJAP=");
     8e4:	86 e0       	ldi	r24, 0x06	; 6
     8e6:	91 e0       	ldi	r25, 0x01	; 1
     8e8:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
	putc_UART(34);
     8ec:	82 e2       	ldi	r24, 0x22	; 34
     8ee:	0e 94 26 08 	call	0x104c	; 0x104c <putc_UART>
	puts_UART(SSID->WifiSSID);
     8f2:	89 81       	ldd	r24, Y+1	; 0x01
     8f4:	9a 81       	ldd	r25, Y+2	; 0x02
     8f6:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
	putc_UART(34);
     8fa:	82 e2       	ldi	r24, 0x22	; 34
     8fc:	0e 94 26 08 	call	0x104c	; 0x104c <putc_UART>
	puts_UART(",");
     900:	80 e1       	ldi	r24, 0x10	; 16
     902:	91 e0       	ldi	r25, 0x01	; 1
     904:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
	putc_UART(34);
     908:	82 e2       	ldi	r24, 0x22	; 34
     90a:	0e 94 26 08 	call	0x104c	; 0x104c <putc_UART>
	puts_UART(password->WifiPassword);
     90e:	8b 81       	ldd	r24, Y+3	; 0x03
     910:	9c 81       	ldd	r25, Y+4	; 0x04
     912:	0c 96       	adiw	r24, 0x0c	; 12
     914:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
	putc_UART(34);
     918:	82 e2       	ldi	r24, 0x22	; 34
     91a:	0e 94 26 08 	call	0x104c	; 0x104c <putc_UART>
	puts_UART("\r\n");
     91e:	82 e1       	ldi	r24, 0x12	; 18
     920:	91 e0       	ldi	r25, 0x01	; 1
     922:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
}
     926:	00 00       	nop
     928:	0f 90       	pop	r0
     92a:	0f 90       	pop	r0
     92c:	0f 90       	pop	r0
     92e:	0f 90       	pop	r0
     930:	df 91       	pop	r29
     932:	cf 91       	pop	r28
     934:	08 95       	ret

00000936 <AT_mqtt_userconf>:

// Set the user configuration
void AT_mqtt_userconf(struct _mqtt *user, struct _mqtt *password, struct _mqtt *id)
{
     936:	cf 93       	push	r28
     938:	df 93       	push	r29
     93a:	00 d0       	rcall	.+0      	; 0x93c <AT_mqtt_userconf+0x6>
     93c:	00 d0       	rcall	.+0      	; 0x93e <AT_mqtt_userconf+0x8>
     93e:	00 d0       	rcall	.+0      	; 0x940 <AT_mqtt_userconf+0xa>
     940:	cd b7       	in	r28, 0x3d	; 61
     942:	de b7       	in	r29, 0x3e	; 62
     944:	9a 83       	std	Y+2, r25	; 0x02
     946:	89 83       	std	Y+1, r24	; 0x01
     948:	7c 83       	std	Y+4, r23	; 0x04
     94a:	6b 83       	std	Y+3, r22	; 0x03
     94c:	5e 83       	std	Y+6, r21	; 0x06
     94e:	4d 83       	std	Y+5, r20	; 0x05
	puts_UART("AT+MQTTUSERCFG=0,1,");
     950:	85 e1       	ldi	r24, 0x15	; 21
     952:	91 e0       	ldi	r25, 0x01	; 1
     954:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
	putc_UART(34); // show ASCII "
     958:	82 e2       	ldi	r24, 0x22	; 34
     95a:	0e 94 26 08 	call	0x104c	; 0x104c <putc_UART>
	puts_UART(id->client_ID);
     95e:	8d 81       	ldd	r24, Y+5	; 0x05
     960:	9e 81       	ldd	r25, Y+6	; 0x06
     962:	4a 96       	adiw	r24, 0x1a	; 26
     964:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
	putc_UART(34);
     968:	82 e2       	ldi	r24, 0x22	; 34
     96a:	0e 94 26 08 	call	0x104c	; 0x104c <putc_UART>
	puts_UART(",");
     96e:	80 e1       	ldi	r24, 0x10	; 16
     970:	91 e0       	ldi	r25, 0x01	; 1
     972:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
	putc_UART(34);
     976:	82 e2       	ldi	r24, 0x22	; 34
     978:	0e 94 26 08 	call	0x104c	; 0x104c <putc_UART>
	puts_UART(user->username);
     97c:	89 81       	ldd	r24, Y+1	; 0x01
     97e:	9a 81       	ldd	r25, Y+2	; 0x02
     980:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
	putc_UART(34);
     984:	82 e2       	ldi	r24, 0x22	; 34
     986:	0e 94 26 08 	call	0x104c	; 0x104c <putc_UART>
	puts_UART(",");
     98a:	80 e1       	ldi	r24, 0x10	; 16
     98c:	91 e0       	ldi	r25, 0x01	; 1
     98e:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
	putc_UART(34);
     992:	82 e2       	ldi	r24, 0x22	; 34
     994:	0e 94 26 08 	call	0x104c	; 0x104c <putc_UART>
	puts_UART(password->password);
     998:	8b 81       	ldd	r24, Y+3	; 0x03
     99a:	9c 81       	ldd	r25, Y+4	; 0x04
     99c:	06 96       	adiw	r24, 0x06	; 6
     99e:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
	putc_UART(34);
     9a2:	82 e2       	ldi	r24, 0x22	; 34
     9a4:	0e 94 26 08 	call	0x104c	; 0x104c <putc_UART>
	puts_UART(",0,0,");
     9a8:	89 e2       	ldi	r24, 0x29	; 41
     9aa:	91 e0       	ldi	r25, 0x01	; 1
     9ac:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
	putc_UART(34);
     9b0:	82 e2       	ldi	r24, 0x22	; 34
     9b2:	0e 94 26 08 	call	0x104c	; 0x104c <putc_UART>
	putc_UART(34);
     9b6:	82 e2       	ldi	r24, 0x22	; 34
     9b8:	0e 94 26 08 	call	0x104c	; 0x104c <putc_UART>
	puts_UART("\r\n");
     9bc:	82 e1       	ldi	r24, 0x12	; 18
     9be:	91 e0       	ldi	r25, 0x01	; 1
     9c0:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
}
     9c4:	00 00       	nop
     9c6:	26 96       	adiw	r28, 0x06	; 6
     9c8:	0f b6       	in	r0, 0x3f	; 63
     9ca:	f8 94       	cli
     9cc:	de bf       	out	0x3e, r29	; 62
     9ce:	0f be       	out	0x3f, r0	; 63
     9d0:	cd bf       	out	0x3d, r28	; 61
     9d2:	df 91       	pop	r29
     9d4:	cf 91       	pop	r28
     9d6:	08 95       	ret

000009d8 <AT_mqtt_connection>:

// Connect to mqtt broker
void AT_mqtt_connection(struct _mqtt *ip)
{
     9d8:	cf 93       	push	r28
     9da:	df 93       	push	r29
     9dc:	00 d0       	rcall	.+0      	; 0x9de <AT_mqtt_connection+0x6>
     9de:	cd b7       	in	r28, 0x3d	; 61
     9e0:	de b7       	in	r29, 0x3e	; 62
     9e2:	9a 83       	std	Y+2, r25	; 0x02
     9e4:	89 83       	std	Y+1, r24	; 0x01
	puts_UART("AT+MQTTCONN=0,");
     9e6:	8f e2       	ldi	r24, 0x2F	; 47
     9e8:	91 e0       	ldi	r25, 0x01	; 1
     9ea:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
	putc_UART(34);
     9ee:	82 e2       	ldi	r24, 0x22	; 34
     9f0:	0e 94 26 08 	call	0x104c	; 0x104c <putc_UART>
	puts_UART(ip->broker_IP);
     9f4:	89 81       	ldd	r24, Y+1	; 0x01
     9f6:	9a 81       	ldd	r25, Y+2	; 0x02
     9f8:	0c 96       	adiw	r24, 0x0c	; 12
     9fa:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
	putc_UART(34);
     9fe:	82 e2       	ldi	r24, 0x22	; 34
     a00:	0e 94 26 08 	call	0x104c	; 0x104c <putc_UART>
	puts_UART(",1883,0\r\n");
     a04:	8e e3       	ldi	r24, 0x3E	; 62
     a06:	91 e0       	ldi	r25, 0x01	; 1
     a08:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
}
     a0c:	00 00       	nop
     a0e:	0f 90       	pop	r0
     a10:	0f 90       	pop	r0
     a12:	df 91       	pop	r29
     a14:	cf 91       	pop	r28
     a16:	08 95       	ret

00000a18 <AT_mqtt_publish>:

// Publish to mqtt topic
void AT_mqtt_publish(struct _mqtt *topic, struct _mqtt *data)
{
     a18:	cf 93       	push	r28
     a1a:	df 93       	push	r29
     a1c:	00 d0       	rcall	.+0      	; 0xa1e <AT_mqtt_publish+0x6>
     a1e:	00 d0       	rcall	.+0      	; 0xa20 <AT_mqtt_publish+0x8>
     a20:	cd b7       	in	r28, 0x3d	; 61
     a22:	de b7       	in	r29, 0x3e	; 62
     a24:	9a 83       	std	Y+2, r25	; 0x02
     a26:	89 83       	std	Y+1, r24	; 0x01
     a28:	7c 83       	std	Y+4, r23	; 0x04
     a2a:	6b 83       	std	Y+3, r22	; 0x03
	puts_UART("AT+MQTTPUB=0,");
     a2c:	88 e4       	ldi	r24, 0x48	; 72
     a2e:	91 e0       	ldi	r25, 0x01	; 1
     a30:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
	putc_UART(34);
     a34:	82 e2       	ldi	r24, 0x22	; 34
     a36:	0e 94 26 08 	call	0x104c	; 0x104c <putc_UART>
	puts_UART(topic->topic_pub);
     a3a:	89 81       	ldd	r24, Y+1	; 0x01
     a3c:	9a 81       	ldd	r25, Y+2	; 0x02
     a3e:	82 96       	adiw	r24, 0x22	; 34
     a40:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
	putc_UART(34);
     a44:	82 e2       	ldi	r24, 0x22	; 34
     a46:	0e 94 26 08 	call	0x104c	; 0x104c <putc_UART>
	puts_UART(",");
     a4a:	80 e1       	ldi	r24, 0x10	; 16
     a4c:	91 e0       	ldi	r25, 0x01	; 1
     a4e:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
	putc_UART(34);
     a52:	82 e2       	ldi	r24, 0x22	; 34
     a54:	0e 94 26 08 	call	0x104c	; 0x104c <putc_UART>
	puts_UART(data->data);
     a58:	8b 81       	ldd	r24, Y+3	; 0x03
     a5a:	9c 81       	ldd	r25, Y+4	; 0x04
     a5c:	c7 96       	adiw	r24, 0x37	; 55
     a5e:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
	putc_UART(34);
     a62:	82 e2       	ldi	r24, 0x22	; 34
     a64:	0e 94 26 08 	call	0x104c	; 0x104c <putc_UART>
	puts_UART(",1,0\r\n");
     a68:	86 e5       	ldi	r24, 0x56	; 86
     a6a:	91 e0       	ldi	r25, 0x01	; 1
     a6c:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
}
     a70:	00 00       	nop
     a72:	0f 90       	pop	r0
     a74:	0f 90       	pop	r0
     a76:	0f 90       	pop	r0
     a78:	0f 90       	pop	r0
     a7a:	df 91       	pop	r29
     a7c:	cf 91       	pop	r28
     a7e:	08 95       	ret

00000a80 <AT_mqtt_subscribe>:

// Subcribe to mqtt topic
void AT_mqtt_subscribe(struct _mqtt *topic)
{
     a80:	cf 93       	push	r28
     a82:	df 93       	push	r29
     a84:	00 d0       	rcall	.+0      	; 0xa86 <AT_mqtt_subscribe+0x6>
     a86:	cd b7       	in	r28, 0x3d	; 61
     a88:	de b7       	in	r29, 0x3e	; 62
     a8a:	9a 83       	std	Y+2, r25	; 0x02
     a8c:	89 83       	std	Y+1, r24	; 0x01
	puts_UART("AT+MQTTSUB=0,");
     a8e:	8d e5       	ldi	r24, 0x5D	; 93
     a90:	91 e0       	ldi	r25, 0x01	; 1
     a92:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
	putc_UART(34);
     a96:	82 e2       	ldi	r24, 0x22	; 34
     a98:	0e 94 26 08 	call	0x104c	; 0x104c <putc_UART>
	puts_UART(topic->topic_sub);
     a9c:	89 81       	ldd	r24, Y+1	; 0x01
     a9e:	9a 81       	ldd	r25, Y+2	; 0x02
     aa0:	8d 96       	adiw	r24, 0x2d	; 45
     aa2:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
	putc_UART(34);
     aa6:	82 e2       	ldi	r24, 0x22	; 34
     aa8:	0e 94 26 08 	call	0x104c	; 0x104c <putc_UART>
	puts_UART(",1\r\n");
     aac:	8b e6       	ldi	r24, 0x6B	; 107
     aae:	91 e0       	ldi	r25, 0x01	; 1
     ab0:	0e 94 41 08 	call	0x1082	; 0x1082 <puts_UART>
}
     ab4:	00 00       	nop
     ab6:	0f 90       	pop	r0
     ab8:	0f 90       	pop	r0
     aba:	df 91       	pop	r29
     abc:	cf 91       	pop	r28
     abe:	08 95       	ret

00000ac0 <i2c_init>:
     ac0:	cf 93       	push	r28
     ac2:	df 93       	push	r29
     ac4:	cd b7       	in	r28, 0x3d	; 61
     ac6:	de b7       	in	r29, 0x3e	; 62
     ac8:	88 eb       	ldi	r24, 0xB8	; 184
     aca:	90 e0       	ldi	r25, 0x00	; 0
     acc:	28 e9       	ldi	r18, 0x98	; 152
     ace:	fc 01       	movw	r30, r24
     ad0:	20 83       	st	Z, r18
     ad2:	00 00       	nop
     ad4:	df 91       	pop	r29
     ad6:	cf 91       	pop	r28
     ad8:	08 95       	ret

00000ada <i2c_start>:
     ada:	cf 93       	push	r28
     adc:	df 93       	push	r29
     ade:	00 d0       	rcall	.+0      	; 0xae0 <i2c_start+0x6>
     ae0:	cd b7       	in	r28, 0x3d	; 61
     ae2:	de b7       	in	r29, 0x3e	; 62
     ae4:	8a 83       	std	Y+2, r24	; 0x02
     ae6:	8c eb       	ldi	r24, 0xBC	; 188
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	fc 01       	movw	r30, r24
     aec:	10 82       	st	Z, r1
     aee:	8c eb       	ldi	r24, 0xBC	; 188
     af0:	90 e0       	ldi	r25, 0x00	; 0
     af2:	24 ea       	ldi	r18, 0xA4	; 164
     af4:	fc 01       	movw	r30, r24
     af6:	20 83       	st	Z, r18
     af8:	00 00       	nop
     afa:	8c eb       	ldi	r24, 0xBC	; 188
     afc:	90 e0       	ldi	r25, 0x00	; 0
     afe:	fc 01       	movw	r30, r24
     b00:	80 81       	ld	r24, Z
     b02:	88 23       	and	r24, r24
     b04:	d4 f7       	brge	.-12     	; 0xafa <i2c_start+0x20>
     b06:	89 eb       	ldi	r24, 0xB9	; 185
     b08:	90 e0       	ldi	r25, 0x00	; 0
     b0a:	fc 01       	movw	r30, r24
     b0c:	80 81       	ld	r24, Z
     b0e:	88 2f       	mov	r24, r24
     b10:	90 e0       	ldi	r25, 0x00	; 0
     b12:	88 7f       	andi	r24, 0xF8	; 248
     b14:	99 27       	eor	r25, r25
     b16:	08 97       	sbiw	r24, 0x08	; 8
     b18:	11 f0       	breq	.+4      	; 0xb1e <i2c_start+0x44>
     b1a:	81 e0       	ldi	r24, 0x01	; 1
     b1c:	20 c0       	rjmp	.+64     	; 0xb5e <i2c_start+0x84>
     b1e:	8b eb       	ldi	r24, 0xBB	; 187
     b20:	90 e0       	ldi	r25, 0x00	; 0
     b22:	2a 81       	ldd	r18, Y+2	; 0x02
     b24:	fc 01       	movw	r30, r24
     b26:	20 83       	st	Z, r18
     b28:	8c eb       	ldi	r24, 0xBC	; 188
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	24 e8       	ldi	r18, 0x84	; 132
     b2e:	fc 01       	movw	r30, r24
     b30:	20 83       	st	Z, r18
     b32:	00 00       	nop
     b34:	8c eb       	ldi	r24, 0xBC	; 188
     b36:	90 e0       	ldi	r25, 0x00	; 0
     b38:	fc 01       	movw	r30, r24
     b3a:	80 81       	ld	r24, Z
     b3c:	88 23       	and	r24, r24
     b3e:	d4 f7       	brge	.-12     	; 0xb34 <i2c_start+0x5a>
     b40:	89 eb       	ldi	r24, 0xB9	; 185
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	fc 01       	movw	r30, r24
     b46:	80 81       	ld	r24, Z
     b48:	88 7f       	andi	r24, 0xF8	; 248
     b4a:	89 83       	std	Y+1, r24	; 0x01
     b4c:	89 81       	ldd	r24, Y+1	; 0x01
     b4e:	88 31       	cpi	r24, 0x18	; 24
     b50:	29 f0       	breq	.+10     	; 0xb5c <i2c_start+0x82>
     b52:	89 81       	ldd	r24, Y+1	; 0x01
     b54:	80 34       	cpi	r24, 0x40	; 64
     b56:	11 f0       	breq	.+4      	; 0xb5c <i2c_start+0x82>
     b58:	81 e0       	ldi	r24, 0x01	; 1
     b5a:	01 c0       	rjmp	.+2      	; 0xb5e <i2c_start+0x84>
     b5c:	80 e0       	ldi	r24, 0x00	; 0
     b5e:	0f 90       	pop	r0
     b60:	0f 90       	pop	r0
     b62:	df 91       	pop	r29
     b64:	cf 91       	pop	r28
     b66:	08 95       	ret

00000b68 <i2c_write>:
     b68:	cf 93       	push	r28
     b6a:	df 93       	push	r29
     b6c:	1f 92       	push	r1
     b6e:	cd b7       	in	r28, 0x3d	; 61
     b70:	de b7       	in	r29, 0x3e	; 62
     b72:	89 83       	std	Y+1, r24	; 0x01
     b74:	8b eb       	ldi	r24, 0xBB	; 187
     b76:	90 e0       	ldi	r25, 0x00	; 0
     b78:	29 81       	ldd	r18, Y+1	; 0x01
     b7a:	fc 01       	movw	r30, r24
     b7c:	20 83       	st	Z, r18
     b7e:	8c eb       	ldi	r24, 0xBC	; 188
     b80:	90 e0       	ldi	r25, 0x00	; 0
     b82:	24 e8       	ldi	r18, 0x84	; 132
     b84:	fc 01       	movw	r30, r24
     b86:	20 83       	st	Z, r18
     b88:	00 00       	nop
     b8a:	8c eb       	ldi	r24, 0xBC	; 188
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	fc 01       	movw	r30, r24
     b90:	80 81       	ld	r24, Z
     b92:	88 23       	and	r24, r24
     b94:	d4 f7       	brge	.-12     	; 0xb8a <i2c_write+0x22>
     b96:	89 eb       	ldi	r24, 0xB9	; 185
     b98:	90 e0       	ldi	r25, 0x00	; 0
     b9a:	fc 01       	movw	r30, r24
     b9c:	80 81       	ld	r24, Z
     b9e:	88 2f       	mov	r24, r24
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	88 7f       	andi	r24, 0xF8	; 248
     ba4:	99 27       	eor	r25, r25
     ba6:	88 97       	sbiw	r24, 0x28	; 40
     ba8:	11 f0       	breq	.+4      	; 0xbae <i2c_write+0x46>
     baa:	81 e0       	ldi	r24, 0x01	; 1
     bac:	01 c0       	rjmp	.+2      	; 0xbb0 <i2c_write+0x48>
     bae:	80 e0       	ldi	r24, 0x00	; 0
     bb0:	0f 90       	pop	r0
     bb2:	df 91       	pop	r29
     bb4:	cf 91       	pop	r28
     bb6:	08 95       	ret

00000bb8 <i2c_read_ack>:
     bb8:	cf 93       	push	r28
     bba:	df 93       	push	r29
     bbc:	cd b7       	in	r28, 0x3d	; 61
     bbe:	de b7       	in	r29, 0x3e	; 62
     bc0:	8c eb       	ldi	r24, 0xBC	; 188
     bc2:	90 e0       	ldi	r25, 0x00	; 0
     bc4:	24 ec       	ldi	r18, 0xC4	; 196
     bc6:	fc 01       	movw	r30, r24
     bc8:	20 83       	st	Z, r18
     bca:	00 00       	nop
     bcc:	8c eb       	ldi	r24, 0xBC	; 188
     bce:	90 e0       	ldi	r25, 0x00	; 0
     bd0:	fc 01       	movw	r30, r24
     bd2:	80 81       	ld	r24, Z
     bd4:	88 23       	and	r24, r24
     bd6:	d4 f7       	brge	.-12     	; 0xbcc <i2c_read_ack+0x14>
     bd8:	8b eb       	ldi	r24, 0xBB	; 187
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	fc 01       	movw	r30, r24
     bde:	80 81       	ld	r24, Z
     be0:	df 91       	pop	r29
     be2:	cf 91       	pop	r28
     be4:	08 95       	ret

00000be6 <i2c_read_nack>:
     be6:	cf 93       	push	r28
     be8:	df 93       	push	r29
     bea:	cd b7       	in	r28, 0x3d	; 61
     bec:	de b7       	in	r29, 0x3e	; 62
     bee:	8c eb       	ldi	r24, 0xBC	; 188
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	24 e8       	ldi	r18, 0x84	; 132
     bf4:	fc 01       	movw	r30, r24
     bf6:	20 83       	st	Z, r18
     bf8:	00 00       	nop
     bfa:	8c eb       	ldi	r24, 0xBC	; 188
     bfc:	90 e0       	ldi	r25, 0x00	; 0
     bfe:	fc 01       	movw	r30, r24
     c00:	80 81       	ld	r24, Z
     c02:	88 23       	and	r24, r24
     c04:	d4 f7       	brge	.-12     	; 0xbfa <i2c_read_nack+0x14>
     c06:	8b eb       	ldi	r24, 0xBB	; 187
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	fc 01       	movw	r30, r24
     c0c:	80 81       	ld	r24, Z
     c0e:	df 91       	pop	r29
     c10:	cf 91       	pop	r28
     c12:	08 95       	ret

00000c14 <i2c_writeReg>:
     c14:	cf 93       	push	r28
     c16:	df 93       	push	r29
     c18:	cd b7       	in	r28, 0x3d	; 61
     c1a:	de b7       	in	r29, 0x3e	; 62
     c1c:	28 97       	sbiw	r28, 0x08	; 8
     c1e:	0f b6       	in	r0, 0x3f	; 63
     c20:	f8 94       	cli
     c22:	de bf       	out	0x3e, r29	; 62
     c24:	0f be       	out	0x3f, r0	; 63
     c26:	cd bf       	out	0x3d, r28	; 61
     c28:	8b 83       	std	Y+3, r24	; 0x03
     c2a:	6c 83       	std	Y+4, r22	; 0x04
     c2c:	5e 83       	std	Y+6, r21	; 0x06
     c2e:	4d 83       	std	Y+5, r20	; 0x05
     c30:	38 87       	std	Y+8, r19	; 0x08
     c32:	2f 83       	std	Y+7, r18	; 0x07
     c34:	8b 81       	ldd	r24, Y+3	; 0x03
     c36:	0e 94 6d 05 	call	0xada	; 0xada <i2c_start>
     c3a:	88 23       	and	r24, r24
     c3c:	11 f0       	breq	.+4      	; 0xc42 <i2c_writeReg+0x2e>
     c3e:	81 e0       	ldi	r24, 0x01	; 1
     c40:	23 c0       	rjmp	.+70     	; 0xc88 <i2c_writeReg+0x74>
     c42:	8c 81       	ldd	r24, Y+4	; 0x04
     c44:	0e 94 b4 05 	call	0xb68	; 0xb68 <i2c_write>
     c48:	1a 82       	std	Y+2, r1	; 0x02
     c4a:	19 82       	std	Y+1, r1	; 0x01
     c4c:	13 c0       	rjmp	.+38     	; 0xc74 <i2c_writeReg+0x60>
     c4e:	2d 81       	ldd	r18, Y+5	; 0x05
     c50:	3e 81       	ldd	r19, Y+6	; 0x06
     c52:	89 81       	ldd	r24, Y+1	; 0x01
     c54:	9a 81       	ldd	r25, Y+2	; 0x02
     c56:	82 0f       	add	r24, r18
     c58:	93 1f       	adc	r25, r19
     c5a:	fc 01       	movw	r30, r24
     c5c:	80 81       	ld	r24, Z
     c5e:	0e 94 b4 05 	call	0xb68	; 0xb68 <i2c_write>
     c62:	88 23       	and	r24, r24
     c64:	11 f0       	breq	.+4      	; 0xc6a <i2c_writeReg+0x56>
     c66:	81 e0       	ldi	r24, 0x01	; 1
     c68:	0f c0       	rjmp	.+30     	; 0xc88 <i2c_writeReg+0x74>
     c6a:	89 81       	ldd	r24, Y+1	; 0x01
     c6c:	9a 81       	ldd	r25, Y+2	; 0x02
     c6e:	01 96       	adiw	r24, 0x01	; 1
     c70:	9a 83       	std	Y+2, r25	; 0x02
     c72:	89 83       	std	Y+1, r24	; 0x01
     c74:	29 81       	ldd	r18, Y+1	; 0x01
     c76:	3a 81       	ldd	r19, Y+2	; 0x02
     c78:	8f 81       	ldd	r24, Y+7	; 0x07
     c7a:	98 85       	ldd	r25, Y+8	; 0x08
     c7c:	28 17       	cp	r18, r24
     c7e:	39 07       	cpc	r19, r25
     c80:	30 f3       	brcs	.-52     	; 0xc4e <i2c_writeReg+0x3a>
     c82:	0e 94 a8 06 	call	0xd50	; 0xd50 <i2c_stop>
     c86:	80 e0       	ldi	r24, 0x00	; 0
     c88:	28 96       	adiw	r28, 0x08	; 8
     c8a:	0f b6       	in	r0, 0x3f	; 63
     c8c:	f8 94       	cli
     c8e:	de bf       	out	0x3e, r29	; 62
     c90:	0f be       	out	0x3f, r0	; 63
     c92:	cd bf       	out	0x3d, r28	; 61
     c94:	df 91       	pop	r29
     c96:	cf 91       	pop	r28
     c98:	08 95       	ret

00000c9a <i2c_readReg>:
     c9a:	0f 93       	push	r16
     c9c:	1f 93       	push	r17
     c9e:	cf 93       	push	r28
     ca0:	df 93       	push	r29
     ca2:	cd b7       	in	r28, 0x3d	; 61
     ca4:	de b7       	in	r29, 0x3e	; 62
     ca6:	28 97       	sbiw	r28, 0x08	; 8
     ca8:	0f b6       	in	r0, 0x3f	; 63
     caa:	f8 94       	cli
     cac:	de bf       	out	0x3e, r29	; 62
     cae:	0f be       	out	0x3f, r0	; 63
     cb0:	cd bf       	out	0x3d, r28	; 61
     cb2:	8b 83       	std	Y+3, r24	; 0x03
     cb4:	6c 83       	std	Y+4, r22	; 0x04
     cb6:	5e 83       	std	Y+6, r21	; 0x06
     cb8:	4d 83       	std	Y+5, r20	; 0x05
     cba:	38 87       	std	Y+8, r19	; 0x08
     cbc:	2f 83       	std	Y+7, r18	; 0x07
     cbe:	8b 81       	ldd	r24, Y+3	; 0x03
     cc0:	0e 94 6d 05 	call	0xada	; 0xada <i2c_start>
     cc4:	88 23       	and	r24, r24
     cc6:	11 f0       	breq	.+4      	; 0xccc <i2c_readReg+0x32>
     cc8:	81 e0       	ldi	r24, 0x01	; 1
     cca:	37 c0       	rjmp	.+110    	; 0xd3a <i2c_readReg+0xa0>
     ccc:	8c 81       	ldd	r24, Y+4	; 0x04
     cce:	0e 94 b4 05 	call	0xb68	; 0xb68 <i2c_write>
     cd2:	8b 81       	ldd	r24, Y+3	; 0x03
     cd4:	81 60       	ori	r24, 0x01	; 1
     cd6:	0e 94 6d 05 	call	0xada	; 0xada <i2c_start>
     cda:	88 23       	and	r24, r24
     cdc:	11 f0       	breq	.+4      	; 0xce2 <i2c_readReg+0x48>
     cde:	81 e0       	ldi	r24, 0x01	; 1
     ce0:	2c c0       	rjmp	.+88     	; 0xd3a <i2c_readReg+0xa0>
     ce2:	1a 82       	std	Y+2, r1	; 0x02
     ce4:	19 82       	std	Y+1, r1	; 0x01
     ce6:	10 c0       	rjmp	.+32     	; 0xd08 <i2c_readReg+0x6e>
     ce8:	2d 81       	ldd	r18, Y+5	; 0x05
     cea:	3e 81       	ldd	r19, Y+6	; 0x06
     cec:	89 81       	ldd	r24, Y+1	; 0x01
     cee:	9a 81       	ldd	r25, Y+2	; 0x02
     cf0:	89 01       	movw	r16, r18
     cf2:	08 0f       	add	r16, r24
     cf4:	19 1f       	adc	r17, r25
     cf6:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <i2c_read_ack>
     cfa:	f8 01       	movw	r30, r16
     cfc:	80 83       	st	Z, r24
     cfe:	89 81       	ldd	r24, Y+1	; 0x01
     d00:	9a 81       	ldd	r25, Y+2	; 0x02
     d02:	01 96       	adiw	r24, 0x01	; 1
     d04:	9a 83       	std	Y+2, r25	; 0x02
     d06:	89 83       	std	Y+1, r24	; 0x01
     d08:	8f 81       	ldd	r24, Y+7	; 0x07
     d0a:	98 85       	ldd	r25, Y+8	; 0x08
     d0c:	9c 01       	movw	r18, r24
     d0e:	21 50       	subi	r18, 0x01	; 1
     d10:	31 09       	sbc	r19, r1
     d12:	89 81       	ldd	r24, Y+1	; 0x01
     d14:	9a 81       	ldd	r25, Y+2	; 0x02
     d16:	82 17       	cp	r24, r18
     d18:	93 07       	cpc	r25, r19
     d1a:	30 f3       	brcs	.-52     	; 0xce8 <i2c_readReg+0x4e>
     d1c:	8f 81       	ldd	r24, Y+7	; 0x07
     d1e:	98 85       	ldd	r25, Y+8	; 0x08
     d20:	01 97       	sbiw	r24, 0x01	; 1
     d22:	2d 81       	ldd	r18, Y+5	; 0x05
     d24:	3e 81       	ldd	r19, Y+6	; 0x06
     d26:	89 01       	movw	r16, r18
     d28:	08 0f       	add	r16, r24
     d2a:	19 1f       	adc	r17, r25
     d2c:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <i2c_read_nack>
     d30:	f8 01       	movw	r30, r16
     d32:	80 83       	st	Z, r24
     d34:	0e 94 a8 06 	call	0xd50	; 0xd50 <i2c_stop>
     d38:	80 e0       	ldi	r24, 0x00	; 0
     d3a:	28 96       	adiw	r28, 0x08	; 8
     d3c:	0f b6       	in	r0, 0x3f	; 63
     d3e:	f8 94       	cli
     d40:	de bf       	out	0x3e, r29	; 62
     d42:	0f be       	out	0x3f, r0	; 63
     d44:	cd bf       	out	0x3d, r28	; 61
     d46:	df 91       	pop	r29
     d48:	cf 91       	pop	r28
     d4a:	1f 91       	pop	r17
     d4c:	0f 91       	pop	r16
     d4e:	08 95       	ret

00000d50 <i2c_stop>:
     d50:	cf 93       	push	r28
     d52:	df 93       	push	r29
     d54:	cd b7       	in	r28, 0x3d	; 61
     d56:	de b7       	in	r29, 0x3e	; 62
     d58:	8c eb       	ldi	r24, 0xBC	; 188
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	24 e9       	ldi	r18, 0x94	; 148
     d5e:	fc 01       	movw	r30, r24
     d60:	20 83       	st	Z, r18
     d62:	00 00       	nop
     d64:	df 91       	pop	r29
     d66:	cf 91       	pop	r28
     d68:	08 95       	ret

00000d6a <spi_init>:
     d6a:	0f 93       	push	r16
     d6c:	cf 93       	push	r28
     d6e:	df 93       	push	r29
     d70:	00 d0       	rcall	.+0      	; 0xd72 <spi_init+0x8>
     d72:	00 d0       	rcall	.+0      	; 0xd74 <spi_init+0xa>
     d74:	1f 92       	push	r1
     d76:	cd b7       	in	r28, 0x3d	; 61
     d78:	de b7       	in	r29, 0x3e	; 62
     d7a:	89 83       	std	Y+1, r24	; 0x01
     d7c:	6a 83       	std	Y+2, r22	; 0x02
     d7e:	4b 83       	std	Y+3, r20	; 0x03
     d80:	2c 83       	std	Y+4, r18	; 0x04
     d82:	0d 83       	std	Y+5, r16	; 0x05
     d84:	84 e2       	ldi	r24, 0x24	; 36
     d86:	90 e0       	ldi	r25, 0x00	; 0
     d88:	24 e2       	ldi	r18, 0x24	; 36
     d8a:	30 e0       	ldi	r19, 0x00	; 0
     d8c:	f9 01       	movw	r30, r18
     d8e:	20 81       	ld	r18, Z
     d90:	62 2f       	mov	r22, r18
     d92:	23 e0       	ldi	r18, 0x03	; 3
     d94:	42 2f       	mov	r20, r18
     d96:	50 e0       	ldi	r21, 0x00	; 0
     d98:	21 e0       	ldi	r18, 0x01	; 1
     d9a:	30 e0       	ldi	r19, 0x00	; 0
     d9c:	02 c0       	rjmp	.+4      	; 0xda2 <spi_init+0x38>
     d9e:	22 0f       	add	r18, r18
     da0:	33 1f       	adc	r19, r19
     da2:	4a 95       	dec	r20
     da4:	e2 f7       	brpl	.-8      	; 0xd9e <spi_init+0x34>
     da6:	72 2f       	mov	r23, r18
     da8:	25 e0       	ldi	r18, 0x05	; 5
     daa:	42 2f       	mov	r20, r18
     dac:	50 e0       	ldi	r21, 0x00	; 0
     dae:	21 e0       	ldi	r18, 0x01	; 1
     db0:	30 e0       	ldi	r19, 0x00	; 0
     db2:	02 c0       	rjmp	.+4      	; 0xdb8 <spi_init+0x4e>
     db4:	22 0f       	add	r18, r18
     db6:	33 1f       	adc	r19, r19
     db8:	4a 95       	dec	r20
     dba:	e2 f7       	brpl	.-8      	; 0xdb4 <spi_init+0x4a>
     dbc:	27 2b       	or	r18, r23
     dbe:	26 2b       	or	r18, r22
     dc0:	fc 01       	movw	r30, r24
     dc2:	20 83       	st	Z, r18
     dc4:	84 e2       	ldi	r24, 0x24	; 36
     dc6:	90 e0       	ldi	r25, 0x00	; 0
     dc8:	24 e2       	ldi	r18, 0x24	; 36
     dca:	30 e0       	ldi	r19, 0x00	; 0
     dcc:	f9 01       	movw	r30, r18
     dce:	20 81       	ld	r18, Z
     dd0:	62 2f       	mov	r22, r18
     dd2:	24 e0       	ldi	r18, 0x04	; 4
     dd4:	42 2f       	mov	r20, r18
     dd6:	50 e0       	ldi	r21, 0x00	; 0
     dd8:	21 e0       	ldi	r18, 0x01	; 1
     dda:	30 e0       	ldi	r19, 0x00	; 0
     ddc:	02 c0       	rjmp	.+4      	; 0xde2 <spi_init+0x78>
     dde:	22 0f       	add	r18, r18
     de0:	33 1f       	adc	r19, r19
     de2:	4a 95       	dec	r20
     de4:	e2 f7       	brpl	.-8      	; 0xdde <spi_init+0x74>
     de6:	20 95       	com	r18
     de8:	26 23       	and	r18, r22
     dea:	fc 01       	movw	r30, r24
     dec:	20 83       	st	Z, r18
     dee:	85 e2       	ldi	r24, 0x25	; 37
     df0:	90 e0       	ldi	r25, 0x00	; 0
     df2:	25 e2       	ldi	r18, 0x25	; 37
     df4:	30 e0       	ldi	r19, 0x00	; 0
     df6:	f9 01       	movw	r30, r18
     df8:	20 81       	ld	r18, Z
     dfa:	62 2f       	mov	r22, r18
     dfc:	24 e0       	ldi	r18, 0x04	; 4
     dfe:	42 2f       	mov	r20, r18
     e00:	50 e0       	ldi	r21, 0x00	; 0
     e02:	21 e0       	ldi	r18, 0x01	; 1
     e04:	30 e0       	ldi	r19, 0x00	; 0
     e06:	02 c0       	rjmp	.+4      	; 0xe0c <spi_init+0xa2>
     e08:	22 0f       	add	r18, r18
     e0a:	33 1f       	adc	r19, r19
     e0c:	4a 95       	dec	r20
     e0e:	e2 f7       	brpl	.-8      	; 0xe08 <spi_init+0x9e>
     e10:	26 2b       	or	r18, r22
     e12:	fc 01       	movw	r30, r24
     e14:	20 83       	st	Z, r18
     e16:	8c e4       	ldi	r24, 0x4C	; 76
     e18:	90 e0       	ldi	r25, 0x00	; 0
     e1a:	31 e0       	ldi	r19, 0x01	; 1
     e1c:	29 81       	ldd	r18, Y+1	; 0x01
     e1e:	23 23       	and	r18, r19
     e20:	22 2f       	mov	r18, r18
     e22:	30 e0       	ldi	r19, 0x00	; 0
     e24:	22 0f       	add	r18, r18
     e26:	33 1f       	adc	r19, r19
     e28:	22 95       	swap	r18
     e2a:	32 95       	swap	r19
     e2c:	30 7f       	andi	r19, 0xF0	; 240
     e2e:	32 27       	eor	r19, r18
     e30:	20 7f       	andi	r18, 0xF0	; 240
     e32:	32 27       	eor	r19, r18
     e34:	42 2f       	mov	r20, r18
     e36:	40 64       	ori	r20, 0x40	; 64
     e38:	31 e0       	ldi	r19, 0x01	; 1
     e3a:	2a 81       	ldd	r18, Y+2	; 0x02
     e3c:	23 23       	and	r18, r19
     e3e:	22 2f       	mov	r18, r18
     e40:	30 e0       	ldi	r19, 0x00	; 0
     e42:	22 95       	swap	r18
     e44:	32 95       	swap	r19
     e46:	30 7f       	andi	r19, 0xF0	; 240
     e48:	32 27       	eor	r19, r18
     e4a:	20 7f       	andi	r18, 0xF0	; 240
     e4c:	32 27       	eor	r19, r18
     e4e:	42 2b       	or	r20, r18
     e50:	33 e0       	ldi	r19, 0x03	; 3
     e52:	2b 81       	ldd	r18, Y+3	; 0x03
     e54:	23 23       	and	r18, r19
     e56:	22 2f       	mov	r18, r18
     e58:	30 e0       	ldi	r19, 0x00	; 0
     e5a:	22 0f       	add	r18, r18
     e5c:	33 1f       	adc	r19, r19
     e5e:	22 0f       	add	r18, r18
     e60:	33 1f       	adc	r19, r19
     e62:	24 2b       	or	r18, r20
     e64:	43 e0       	ldi	r20, 0x03	; 3
     e66:	3c 81       	ldd	r19, Y+4	; 0x04
     e68:	34 23       	and	r19, r20
     e6a:	23 2b       	or	r18, r19
     e6c:	fc 01       	movw	r30, r24
     e6e:	20 83       	st	Z, r18
     e70:	8d e4       	ldi	r24, 0x4D	; 77
     e72:	90 e0       	ldi	r25, 0x00	; 0
     e74:	31 e0       	ldi	r19, 0x01	; 1
     e76:	2d 81       	ldd	r18, Y+5	; 0x05
     e78:	23 23       	and	r18, r19
     e7a:	fc 01       	movw	r30, r24
     e7c:	20 83       	st	Z, r18
     e7e:	00 00       	nop
     e80:	0f 90       	pop	r0
     e82:	0f 90       	pop	r0
     e84:	0f 90       	pop	r0
     e86:	0f 90       	pop	r0
     e88:	0f 90       	pop	r0
     e8a:	df 91       	pop	r29
     e8c:	cf 91       	pop	r28
     e8e:	0f 91       	pop	r16
     e90:	08 95       	ret

00000e92 <spi_send>:
     e92:	cf 93       	push	r28
     e94:	df 93       	push	r29
     e96:	00 d0       	rcall	.+0      	; 0xe98 <spi_send+0x6>
     e98:	cd b7       	in	r28, 0x3d	; 61
     e9a:	de b7       	in	r29, 0x3e	; 62
     e9c:	8a 83       	std	Y+2, r24	; 0x02
     e9e:	8e e4       	ldi	r24, 0x4E	; 78
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	2a 81       	ldd	r18, Y+2	; 0x02
     ea4:	fc 01       	movw	r30, r24
     ea6:	20 83       	st	Z, r18
     ea8:	00 00       	nop
     eaa:	8d e4       	ldi	r24, 0x4D	; 77
     eac:	90 e0       	ldi	r25, 0x00	; 0
     eae:	fc 01       	movw	r30, r24
     eb0:	80 81       	ld	r24, Z
     eb2:	88 23       	and	r24, r24
     eb4:	d4 f7       	brge	.-12     	; 0xeaa <spi_send+0x18>
     eb6:	8e e4       	ldi	r24, 0x4E	; 78
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	fc 01       	movw	r30, r24
     ebc:	80 81       	ld	r24, Z
     ebe:	89 83       	std	Y+1, r24	; 0x01
     ec0:	89 81       	ldd	r24, Y+1	; 0x01
     ec2:	0f 90       	pop	r0
     ec4:	0f 90       	pop	r0
     ec6:	df 91       	pop	r29
     ec8:	cf 91       	pop	r28
     eca:	08 95       	ret

00000ecc <init_TC1>:
     ecc:	cf 93       	push	r28
     ece:	df 93       	push	r29
     ed0:	00 d0       	rcall	.+0      	; 0xed2 <init_TC1+0x6>
     ed2:	cd b7       	in	r28, 0x3d	; 61
     ed4:	de b7       	in	r29, 0x3e	; 62
     ed6:	9a 83       	std	Y+2, r25	; 0x02
     ed8:	89 83       	std	Y+1, r24	; 0x01
     eda:	81 e8       	ldi	r24, 0x81	; 129
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	22 e0       	ldi	r18, 0x02	; 2
     ee0:	fc 01       	movw	r30, r24
     ee2:	20 83       	st	Z, r18
     ee4:	88 e8       	ldi	r24, 0x88	; 136
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	29 81       	ldd	r18, Y+1	; 0x01
     eea:	3a 81       	ldd	r19, Y+2	; 0x02
     eec:	fc 01       	movw	r30, r24
     eee:	31 83       	std	Z+1, r19	; 0x01
     ef0:	20 83       	st	Z, r18
     ef2:	8f e6       	ldi	r24, 0x6F	; 111
     ef4:	90 e0       	ldi	r25, 0x00	; 0
     ef6:	22 e0       	ldi	r18, 0x02	; 2
     ef8:	fc 01       	movw	r30, r24
     efa:	20 83       	st	Z, r18
     efc:	78 94       	sei
     efe:	00 00       	nop
     f00:	0f 90       	pop	r0
     f02:	0f 90       	pop	r0
     f04:	df 91       	pop	r29
     f06:	cf 91       	pop	r28
     f08:	08 95       	ret

00000f0a <__vector_11>:
     f0a:	1f 92       	push	r1
     f0c:	0f 92       	push	r0
     f0e:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     f12:	0f 92       	push	r0
     f14:	11 24       	eor	r1, r1
     f16:	8f 93       	push	r24
     f18:	9f 93       	push	r25
     f1a:	ef 93       	push	r30
     f1c:	ff 93       	push	r31
     f1e:	cf 93       	push	r28
     f20:	df 93       	push	r29
     f22:	cd b7       	in	r28, 0x3d	; 61
     f24:	de b7       	in	r29, 0x3e	; 62
     f26:	84 e8       	ldi	r24, 0x84	; 132
     f28:	90 e0       	ldi	r25, 0x00	; 0
     f2a:	fc 01       	movw	r30, r24
     f2c:	11 82       	std	Z+1, r1	; 0x01
     f2e:	10 82       	st	Z, r1
     f30:	80 91 66 02 	lds	r24, 0x0266	; 0x800266 <__data_end>
     f34:	8f 5f       	subi	r24, 0xFF	; 255
     f36:	80 93 66 02 	sts	0x0266, r24	; 0x800266 <__data_end>
     f3a:	80 91 67 02 	lds	r24, 0x0267	; 0x800267 <g_TickSetpoint>
     f3e:	8f 5f       	subi	r24, 0xFF	; 255
     f40:	80 93 67 02 	sts	0x0267, r24	; 0x800267 <g_TickSetpoint>
     f44:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <g_TickStatemachine>
     f48:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <g_TickStatemachine+0x1>
     f4c:	01 96       	adiw	r24, 0x01	; 1
     f4e:	90 93 69 02 	sts	0x0269, r25	; 0x800269 <g_TickStatemachine+0x1>
     f52:	80 93 68 02 	sts	0x0268, r24	; 0x800268 <g_TickStatemachine>
     f56:	80 91 6d 02 	lds	r24, 0x026D	; 0x80026d <g_CheckSubRecv>
     f5a:	8f 5f       	subi	r24, 0xFF	; 255
     f5c:	80 93 6d 02 	sts	0x026D, r24	; 0x80026d <g_CheckSubRecv>
     f60:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <g_LcdUpdateTimer>
     f64:	8f 5f       	subi	r24, 0xFF	; 255
     f66:	80 93 6a 02 	sts	0x026A, r24	; 0x80026a <g_LcdUpdateTimer>
     f6a:	80 91 6b 02 	lds	r24, 0x026B	; 0x80026b <g_DemoTimer>
     f6e:	90 91 6c 02 	lds	r25, 0x026C	; 0x80026c <g_DemoTimer+0x1>
     f72:	01 96       	adiw	r24, 0x01	; 1
     f74:	90 93 6c 02 	sts	0x026C, r25	; 0x80026c <g_DemoTimer+0x1>
     f78:	80 93 6b 02 	sts	0x026B, r24	; 0x80026b <g_DemoTimer>
     f7c:	00 00       	nop
     f7e:	df 91       	pop	r29
     f80:	cf 91       	pop	r28
     f82:	ff 91       	pop	r31
     f84:	ef 91       	pop	r30
     f86:	9f 91       	pop	r25
     f88:	8f 91       	pop	r24
     f8a:	0f 90       	pop	r0
     f8c:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     f90:	0f 90       	pop	r0
     f92:	1f 90       	pop	r1
     f94:	18 95       	reti

00000f96 <init_UART>:
	while(*s)
	{
		putc_UART(*s);
		s++;
	}
}
     f96:	cf 93       	push	r28
     f98:	df 93       	push	r29
     f9a:	00 d0       	rcall	.+0      	; 0xf9c <init_UART+0x6>
     f9c:	1f 92       	push	r1
     f9e:	cd b7       	in	r28, 0x3d	; 61
     fa0:	de b7       	in	r29, 0x3e	; 62
     fa2:	9a 83       	std	Y+2, r25	; 0x02
     fa4:	89 83       	std	Y+1, r24	; 0x01
     fa6:	6b 83       	std	Y+3, r22	; 0x03
     fa8:	8b 81       	ldd	r24, Y+3	; 0x03
     faa:	88 23       	and	r24, r24
     fac:	49 f1       	breq	.+82     	; 0x1000 <init_UART+0x6a>
     fae:	85 ec       	ldi	r24, 0xC5	; 197
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	29 81       	ldd	r18, Y+1	; 0x01
     fb4:	3a 81       	ldd	r19, Y+2	; 0x02
     fb6:	23 2f       	mov	r18, r19
     fb8:	33 27       	eor	r19, r19
     fba:	fc 01       	movw	r30, r24
     fbc:	20 83       	st	Z, r18
     fbe:	84 ec       	ldi	r24, 0xC4	; 196
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	29 81       	ldd	r18, Y+1	; 0x01
     fc4:	fc 01       	movw	r30, r24
     fc6:	20 83       	st	Z, r18
     fc8:	80 ec       	ldi	r24, 0xC0	; 192
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	20 ec       	ldi	r18, 0xC0	; 192
     fce:	30 e0       	ldi	r19, 0x00	; 0
     fd0:	f9 01       	movw	r30, r18
     fd2:	20 81       	ld	r18, Z
     fd4:	22 60       	ori	r18, 0x02	; 2
     fd6:	fc 01       	movw	r30, r24
     fd8:	20 83       	st	Z, r18
     fda:	81 ec       	ldi	r24, 0xC1	; 193
     fdc:	90 e0       	ldi	r25, 0x00	; 0
     fde:	21 ec       	ldi	r18, 0xC1	; 193
     fe0:	30 e0       	ldi	r19, 0x00	; 0
     fe2:	f9 01       	movw	r30, r18
     fe4:	20 81       	ld	r18, Z
     fe6:	28 69       	ori	r18, 0x98	; 152
     fe8:	fc 01       	movw	r30, r24
     fea:	20 83       	st	Z, r18
     fec:	82 ec       	ldi	r24, 0xC2	; 194
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	22 ec       	ldi	r18, 0xC2	; 194
     ff2:	30 e0       	ldi	r19, 0x00	; 0
     ff4:	f9 01       	movw	r30, r18
     ff6:	20 81       	ld	r18, Z
     ff8:	26 60       	ori	r18, 0x06	; 6
     ffa:	fc 01       	movw	r30, r24
     ffc:	20 83       	st	Z, r18
     ffe:	1f c0       	rjmp	.+62     	; 0x103e <init_UART+0xa8>
    1000:	85 ec       	ldi	r24, 0xC5	; 197
    1002:	90 e0       	ldi	r25, 0x00	; 0
    1004:	29 81       	ldd	r18, Y+1	; 0x01
    1006:	3a 81       	ldd	r19, Y+2	; 0x02
    1008:	23 2f       	mov	r18, r19
    100a:	33 27       	eor	r19, r19
    100c:	fc 01       	movw	r30, r24
    100e:	20 83       	st	Z, r18
    1010:	84 ec       	ldi	r24, 0xC4	; 196
    1012:	90 e0       	ldi	r25, 0x00	; 0
    1014:	29 81       	ldd	r18, Y+1	; 0x01
    1016:	fc 01       	movw	r30, r24
    1018:	20 83       	st	Z, r18
    101a:	81 ec       	ldi	r24, 0xC1	; 193
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	21 ec       	ldi	r18, 0xC1	; 193
    1020:	30 e0       	ldi	r19, 0x00	; 0
    1022:	f9 01       	movw	r30, r18
    1024:	20 81       	ld	r18, Z
    1026:	28 69       	ori	r18, 0x98	; 152
    1028:	fc 01       	movw	r30, r24
    102a:	20 83       	st	Z, r18
    102c:	82 ec       	ldi	r24, 0xC2	; 194
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	22 ec       	ldi	r18, 0xC2	; 194
    1032:	30 e0       	ldi	r19, 0x00	; 0
    1034:	f9 01       	movw	r30, r18
    1036:	20 81       	ld	r18, Z
    1038:	26 60       	ori	r18, 0x06	; 6
    103a:	fc 01       	movw	r30, r24
    103c:	20 83       	st	Z, r18
    103e:	00 00       	nop
    1040:	0f 90       	pop	r0
    1042:	0f 90       	pop	r0
    1044:	0f 90       	pop	r0
    1046:	df 91       	pop	r29
    1048:	cf 91       	pop	r28
    104a:	08 95       	ret

0000104c <putc_UART>:
    104c:	cf 93       	push	r28
    104e:	df 93       	push	r29
    1050:	1f 92       	push	r1
    1052:	cd b7       	in	r28, 0x3d	; 61
    1054:	de b7       	in	r29, 0x3e	; 62
    1056:	89 83       	std	Y+1, r24	; 0x01
    1058:	00 00       	nop
    105a:	80 ec       	ldi	r24, 0xC0	; 192
    105c:	90 e0       	ldi	r25, 0x00	; 0
    105e:	fc 01       	movw	r30, r24
    1060:	80 81       	ld	r24, Z
    1062:	88 2f       	mov	r24, r24
    1064:	90 e0       	ldi	r25, 0x00	; 0
    1066:	80 72       	andi	r24, 0x20	; 32
    1068:	99 27       	eor	r25, r25
    106a:	89 2b       	or	r24, r25
    106c:	b1 f3       	breq	.-20     	; 0x105a <putc_UART+0xe>
    106e:	86 ec       	ldi	r24, 0xC6	; 198
    1070:	90 e0       	ldi	r25, 0x00	; 0
    1072:	29 81       	ldd	r18, Y+1	; 0x01
    1074:	fc 01       	movw	r30, r24
    1076:	20 83       	st	Z, r18
    1078:	00 00       	nop
    107a:	0f 90       	pop	r0
    107c:	df 91       	pop	r29
    107e:	cf 91       	pop	r28
    1080:	08 95       	ret

00001082 <puts_UART>:
    1082:	cf 93       	push	r28
    1084:	df 93       	push	r29
    1086:	00 d0       	rcall	.+0      	; 0x1088 <puts_UART+0x6>
    1088:	cd b7       	in	r28, 0x3d	; 61
    108a:	de b7       	in	r29, 0x3e	; 62
    108c:	9a 83       	std	Y+2, r25	; 0x02
    108e:	89 83       	std	Y+1, r24	; 0x01
    1090:	0b c0       	rjmp	.+22     	; 0x10a8 <puts_UART+0x26>
    1092:	89 81       	ldd	r24, Y+1	; 0x01
    1094:	9a 81       	ldd	r25, Y+2	; 0x02
    1096:	fc 01       	movw	r30, r24
    1098:	80 81       	ld	r24, Z
    109a:	0e 94 26 08 	call	0x104c	; 0x104c <putc_UART>
    109e:	89 81       	ldd	r24, Y+1	; 0x01
    10a0:	9a 81       	ldd	r25, Y+2	; 0x02
    10a2:	01 96       	adiw	r24, 0x01	; 1
    10a4:	9a 83       	std	Y+2, r25	; 0x02
    10a6:	89 83       	std	Y+1, r24	; 0x01
    10a8:	89 81       	ldd	r24, Y+1	; 0x01
    10aa:	9a 81       	ldd	r25, Y+2	; 0x02
    10ac:	fc 01       	movw	r30, r24
    10ae:	80 81       	ld	r24, Z
    10b0:	88 23       	and	r24, r24
    10b2:	79 f7       	brne	.-34     	; 0x1092 <puts_UART+0x10>
    10b4:	00 00       	nop
    10b6:	0f 90       	pop	r0
    10b8:	0f 90       	pop	r0
    10ba:	df 91       	pop	r29
    10bc:	cf 91       	pop	r28
    10be:	08 95       	ret

000010c0 <__vector_18>:

ISR (USART0_RX_vect)
{
    10c0:	1f 92       	push	r1
    10c2:	0f 92       	push	r0
    10c4:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    10c8:	0f 92       	push	r0
    10ca:	11 24       	eor	r1, r1
    10cc:	2f 93       	push	r18
    10ce:	3f 93       	push	r19
    10d0:	8f 93       	push	r24
    10d2:	9f 93       	push	r25
    10d4:	ef 93       	push	r30
    10d6:	ff 93       	push	r31
    10d8:	cf 93       	push	r28
    10da:	df 93       	push	r29
    10dc:	cd b7       	in	r28, 0x3d	; 61
    10de:	de b7       	in	r29, 0x3e	; 62
	UART_RxBuffer.Buffer[UART_RxBuffer.WriteIndex] = UDR0;
    10e0:	80 91 d4 02 	lds	r24, 0x02D4	; 0x8002d4 <UART_RxBuffer+0x64>
    10e4:	88 2f       	mov	r24, r24
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	26 ec       	ldi	r18, 0xC6	; 198
    10ea:	30 e0       	ldi	r19, 0x00	; 0
    10ec:	f9 01       	movw	r30, r18
    10ee:	20 81       	ld	r18, Z
    10f0:	80 59       	subi	r24, 0x90	; 144
    10f2:	9d 4f       	sbci	r25, 0xFD	; 253
    10f4:	fc 01       	movw	r30, r24
    10f6:	20 83       	st	Z, r18
	
	if (UART_RxBuffer.WriteIndex >= RXBUFFERSIZE0)
    10f8:	80 91 d4 02 	lds	r24, 0x02D4	; 0x8002d4 <UART_RxBuffer+0x64>
    10fc:	84 36       	cpi	r24, 0x64	; 100
    10fe:	28 f0       	brcs	.+10     	; 0x110a <__vector_18+0x4a>
	{
		UART_RxBuffer.WriteIndex = 0;
    1100:	10 92 d4 02 	sts	0x02D4, r1	; 0x8002d4 <UART_RxBuffer+0x64>
		UART_RxBuffer.BufferOverflow = 1;
    1104:	81 e0       	ldi	r24, 0x01	; 1
    1106:	80 93 d6 02 	sts	0x02D6, r24	; 0x8002d6 <UART_RxBuffer+0x66>
	}
	
	if (UART_RxBuffer.Buffer[UART_RxBuffer.WriteIndex] == 0x0A)
    110a:	80 91 d4 02 	lds	r24, 0x02D4	; 0x8002d4 <UART_RxBuffer+0x64>
    110e:	88 2f       	mov	r24, r24
    1110:	90 e0       	ldi	r25, 0x00	; 0
    1112:	80 59       	subi	r24, 0x90	; 144
    1114:	9d 4f       	sbci	r25, 0xFD	; 253
    1116:	fc 01       	movw	r30, r24
    1118:	80 81       	ld	r24, Z
    111a:	8a 30       	cpi	r24, 0x0A	; 10
    111c:	71 f4       	brne	.+28     	; 0x113a <__vector_18+0x7a>
	{
		
		if (UART_RxBuffer.Buffer[UART_RxBuffer.WriteIndex-1] == 0x0D)
    111e:	80 91 d4 02 	lds	r24, 0x02D4	; 0x8002d4 <UART_RxBuffer+0x64>
    1122:	88 2f       	mov	r24, r24
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	01 97       	sbiw	r24, 0x01	; 1
    1128:	80 59       	subi	r24, 0x90	; 144
    112a:	9d 4f       	sbci	r25, 0xFD	; 253
    112c:	fc 01       	movw	r30, r24
    112e:	80 81       	ld	r24, Z
    1130:	8d 30       	cpi	r24, 0x0D	; 13
    1132:	19 f4       	brne	.+6      	; 0x113a <__vector_18+0x7a>
		{
			UART_RxBuffer.CrLn = 1;
    1134:	81 e0       	ldi	r24, 0x01	; 1
    1136:	80 93 d9 02 	sts	0x02D9, r24	; 0x8002d9 <UART_RxBuffer+0x69>
		}
		
	}
	
	UART_RxBuffer.IsDirty=1;
    113a:	81 e0       	ldi	r24, 0x01	; 1
    113c:	80 93 d5 02 	sts	0x02D5, r24	; 0x8002d5 <UART_RxBuffer+0x65>
	UART_RxBuffer.WriteIndex++;
    1140:	80 91 d4 02 	lds	r24, 0x02D4	; 0x8002d4 <UART_RxBuffer+0x64>
    1144:	8f 5f       	subi	r24, 0xFF	; 255
    1146:	80 93 d4 02 	sts	0x02D4, r24	; 0x8002d4 <UART_RxBuffer+0x64>
}
    114a:	00 00       	nop
    114c:	df 91       	pop	r29
    114e:	cf 91       	pop	r28
    1150:	ff 91       	pop	r31
    1152:	ef 91       	pop	r30
    1154:	9f 91       	pop	r25
    1156:	8f 91       	pop	r24
    1158:	3f 91       	pop	r19
    115a:	2f 91       	pop	r18
    115c:	0f 90       	pop	r0
    115e:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1162:	0f 90       	pop	r0
    1164:	1f 90       	pop	r1
    1166:	18 95       	reti

00001168 <showsetpoint>:
extern struct bmp2_config conf;
extern struct bmp2_data comp_data;


void showsetpoint(struct bmp2_data *l_setpoint)
{
    1168:	0f 93       	push	r16
    116a:	1f 93       	push	r17
    116c:	cf 93       	push	r28
    116e:	df 93       	push	r29
    1170:	cd b7       	in	r28, 0x3d	; 61
    1172:	de b7       	in	r29, 0x3e	; 62
    1174:	27 97       	sbiw	r28, 0x07	; 7
    1176:	0f b6       	in	r0, 0x3f	; 63
    1178:	f8 94       	cli
    117a:	de bf       	out	0x3e, r29	; 62
    117c:	0f be       	out	0x3f, r0	; 63
    117e:	cd bf       	out	0x3d, r28	; 61
    1180:	9f 83       	std	Y+7, r25	; 0x07
    1182:	8e 83       	std	Y+6, r24	; 0x06
	uint8_t l_setpointstring[5];
	
	sprintf(l_setpointstring, "%d", l_setpoint->setpoint);
    1184:	8e 81       	ldd	r24, Y+6	; 0x06
    1186:	9f 81       	ldd	r25, Y+7	; 0x07
    1188:	fc 01       	movw	r30, r24
    118a:	80 85       	ldd	r24, Z+8	; 0x08
    118c:	91 85       	ldd	r25, Z+9	; 0x09
    118e:	29 2f       	mov	r18, r25
    1190:	2f 93       	push	r18
    1192:	8f 93       	push	r24
    1194:	80 e7       	ldi	r24, 0x70	; 112
    1196:	91 e0       	ldi	r25, 0x01	; 1
    1198:	89 2f       	mov	r24, r25
    119a:	8f 93       	push	r24
    119c:	80 e7       	ldi	r24, 0x70	; 112
    119e:	91 e0       	ldi	r25, 0x01	; 1
    11a0:	8f 93       	push	r24
    11a2:	ce 01       	movw	r24, r28
    11a4:	01 96       	adiw	r24, 0x01	; 1
    11a6:	9f 93       	push	r25
    11a8:	8f 93       	push	r24
    11aa:	0e 94 08 24 	call	0x4810	; 0x4810 <sprintf>
    11ae:	0f 90       	pop	r0
    11b0:	0f 90       	pop	r0
    11b2:	0f 90       	pop	r0
    11b4:	0f 90       	pop	r0
    11b6:	0f 90       	pop	r0
    11b8:	0f 90       	pop	r0
	
	SSD1306_puts(0,3,"Setpoint:", FONTMEDIUM,&SSD1306FrameBuffer1);
    11ba:	00 e7       	ldi	r16, 0x70	; 112
    11bc:	13 e0       	ldi	r17, 0x03	; 3
    11be:	25 e0       	ldi	r18, 0x05	; 5
    11c0:	43 e7       	ldi	r20, 0x73	; 115
    11c2:	51 e0       	ldi	r21, 0x01	; 1
    11c4:	63 e0       	ldi	r22, 0x03	; 3
    11c6:	80 e0       	ldi	r24, 0x00	; 0
    11c8:	0e 94 e9 19 	call	0x33d2	; 0x33d2 <SSD1306_puts>
	SSD1306_puts(0,4,l_setpointstring, FONTMEDIUM,&SSD1306FrameBuffer1);
    11cc:	00 e7       	ldi	r16, 0x70	; 112
    11ce:	13 e0       	ldi	r17, 0x03	; 3
    11d0:	25 e0       	ldi	r18, 0x05	; 5
    11d2:	ce 01       	movw	r24, r28
    11d4:	01 96       	adiw	r24, 0x01	; 1
    11d6:	ac 01       	movw	r20, r24
    11d8:	64 e0       	ldi	r22, 0x04	; 4
    11da:	80 e0       	ldi	r24, 0x00	; 0
    11dc:	0e 94 e9 19 	call	0x33d2	; 0x33d2 <SSD1306_puts>
}
    11e0:	00 00       	nop
    11e2:	27 96       	adiw	r28, 0x07	; 7
    11e4:	0f b6       	in	r0, 0x3f	; 63
    11e6:	f8 94       	cli
    11e8:	de bf       	out	0x3e, r29	; 62
    11ea:	0f be       	out	0x3f, r0	; 63
    11ec:	cd bf       	out	0x3d, r28	; 61
    11ee:	df 91       	pop	r29
    11f0:	cf 91       	pop	r28
    11f2:	1f 91       	pop	r17
    11f4:	0f 91       	pop	r16
    11f6:	08 95       	ret

000011f8 <showtemperature>:

void showtemperature(struct bmp2_data *p_temp)
{
    11f8:	0f 93       	push	r16
    11fa:	1f 93       	push	r17
    11fc:	cf 93       	push	r28
    11fe:	df 93       	push	r29
    1200:	cd b7       	in	r28, 0x3d	; 61
    1202:	de b7       	in	r29, 0x3e	; 62
    1204:	62 97       	sbiw	r28, 0x12	; 18
    1206:	0f b6       	in	r0, 0x3f	; 63
    1208:	f8 94       	cli
    120a:	de bf       	out	0x3e, r29	; 62
    120c:	0f be       	out	0x3f, r0	; 63
    120e:	cd bf       	out	0x3d, r28	; 61
    1210:	9a 8b       	std	Y+18, r25	; 0x12
    1212:	89 8b       	std	Y+17, r24	; 0x11
	uint8_t l_temperaturestring[16];

	// Convert the temperature and pressure from double to array of bytes
	sprintf(l_temperaturestring, "%.5f", p_temp->temperature);
    1214:	89 89       	ldd	r24, Y+17	; 0x11
    1216:	9a 89       	ldd	r25, Y+18	; 0x12
    1218:	fc 01       	movw	r30, r24
    121a:	84 81       	ldd	r24, Z+4	; 0x04
    121c:	95 81       	ldd	r25, Z+5	; 0x05
    121e:	a6 81       	ldd	r26, Z+6	; 0x06
    1220:	b7 81       	ldd	r27, Z+7	; 0x07
    1222:	2b 2f       	mov	r18, r27
    1224:	2f 93       	push	r18
    1226:	2a 2f       	mov	r18, r26
    1228:	2f 93       	push	r18
    122a:	29 2f       	mov	r18, r25
    122c:	2f 93       	push	r18
    122e:	8f 93       	push	r24
    1230:	8d e7       	ldi	r24, 0x7D	; 125
    1232:	91 e0       	ldi	r25, 0x01	; 1
    1234:	89 2f       	mov	r24, r25
    1236:	8f 93       	push	r24
    1238:	8d e7       	ldi	r24, 0x7D	; 125
    123a:	91 e0       	ldi	r25, 0x01	; 1
    123c:	8f 93       	push	r24
    123e:	ce 01       	movw	r24, r28
    1240:	01 96       	adiw	r24, 0x01	; 1
    1242:	9f 93       	push	r25
    1244:	8f 93       	push	r24
    1246:	0e 94 08 24 	call	0x4810	; 0x4810 <sprintf>
    124a:	8d b7       	in	r24, 0x3d	; 61
    124c:	9e b7       	in	r25, 0x3e	; 62
    124e:	08 96       	adiw	r24, 0x08	; 8
    1250:	0f b6       	in	r0, 0x3f	; 63
    1252:	f8 94       	cli
    1254:	de bf       	out	0x3e, r29	; 62
    1256:	0f be       	out	0x3f, r0	; 63
    1258:	cd bf       	out	0x3d, r28	; 61
	
	SSD1306_puts(0,0,"Temperature (degC):", FONTMEDIUM,&SSD1306FrameBuffer1);
    125a:	00 e7       	ldi	r16, 0x70	; 112
    125c:	13 e0       	ldi	r17, 0x03	; 3
    125e:	25 e0       	ldi	r18, 0x05	; 5
    1260:	42 e8       	ldi	r20, 0x82	; 130
    1262:	51 e0       	ldi	r21, 0x01	; 1
    1264:	60 e0       	ldi	r22, 0x00	; 0
    1266:	80 e0       	ldi	r24, 0x00	; 0
    1268:	0e 94 e9 19 	call	0x33d2	; 0x33d2 <SSD1306_puts>
	SSD1306_puts(0,1,l_temperaturestring, FONTMEDIUM,&SSD1306FrameBuffer1);
    126c:	00 e7       	ldi	r16, 0x70	; 112
    126e:	13 e0       	ldi	r17, 0x03	; 3
    1270:	25 e0       	ldi	r18, 0x05	; 5
    1272:	ce 01       	movw	r24, r28
    1274:	01 96       	adiw	r24, 0x01	; 1
    1276:	ac 01       	movw	r20, r24
    1278:	61 e0       	ldi	r22, 0x01	; 1
    127a:	80 e0       	ldi	r24, 0x00	; 0
    127c:	0e 94 e9 19 	call	0x33d2	; 0x33d2 <SSD1306_puts>
}
    1280:	00 00       	nop
    1282:	62 96       	adiw	r28, 0x12	; 18
    1284:	0f b6       	in	r0, 0x3f	; 63
    1286:	f8 94       	cli
    1288:	de bf       	out	0x3e, r29	; 62
    128a:	0f be       	out	0x3f, r0	; 63
    128c:	cd bf       	out	0x3d, r28	; 61
    128e:	df 91       	pop	r29
    1290:	cf 91       	pop	r28
    1292:	1f 91       	pop	r17
    1294:	0f 91       	pop	r16
    1296:	08 95       	ret

00001298 <showsensorerror>:

void showsensorerror(void)
{
    1298:	0f 93       	push	r16
    129a:	1f 93       	push	r17
    129c:	cf 93       	push	r28
    129e:	df 93       	push	r29
    12a0:	cd b7       	in	r28, 0x3d	; 61
    12a2:	de b7       	in	r29, 0x3e	; 62
	SSD1306_clear(&SSD1306FrameBuffer1);
    12a4:	80 e7       	ldi	r24, 0x70	; 112
    12a6:	93 e0       	ldi	r25, 0x03	; 3
    12a8:	0e 94 cb 18 	call	0x3196	; 0x3196 <SSD1306_clear>
	SSD1306_puts(0,0,"Sensor error.     ", FONTMEDIUM,&SSD1306FrameBuffer1);
    12ac:	00 e7       	ldi	r16, 0x70	; 112
    12ae:	13 e0       	ldi	r17, 0x03	; 3
    12b0:	25 e0       	ldi	r18, 0x05	; 5
    12b2:	46 e9       	ldi	r20, 0x96	; 150
    12b4:	51 e0       	ldi	r21, 0x01	; 1
    12b6:	60 e0       	ldi	r22, 0x00	; 0
    12b8:	80 e0       	ldi	r24, 0x00	; 0
    12ba:	0e 94 e9 19 	call	0x33d2	; 0x33d2 <SSD1306_puts>
}
    12be:	00 00       	nop
    12c0:	df 91       	pop	r29
    12c2:	cf 91       	pop	r28
    12c4:	1f 91       	pop	r17
    12c6:	0f 91       	pop	r16
    12c8:	08 95       	ret

000012ca <comparetemperature>:


uint8_t comparetemperature(struct bmp2_data *p_data)
{
    12ca:	cf 92       	push	r12
    12cc:	df 92       	push	r13
    12ce:	ef 92       	push	r14
    12d0:	ff 92       	push	r15
    12d2:	0f 93       	push	r16
    12d4:	1f 93       	push	r17
    12d6:	cf 93       	push	r28
    12d8:	df 93       	push	r29
    12da:	00 d0       	rcall	.+0      	; 0x12dc <comparetemperature+0x12>
    12dc:	1f 92       	push	r1
    12de:	cd b7       	in	r28, 0x3d	; 61
    12e0:	de b7       	in	r29, 0x3e	; 62
    12e2:	9b 83       	std	Y+3, r25	; 0x03
    12e4:	8a 83       	std	Y+2, r24	; 0x02
	uint8_t l_result;
	
	if(p_data->temperature < p_data->setpoint)
    12e6:	8a 81       	ldd	r24, Y+2	; 0x02
    12e8:	9b 81       	ldd	r25, Y+3	; 0x03
    12ea:	fc 01       	movw	r30, r24
    12ec:	c4 80       	ldd	r12, Z+4	; 0x04
    12ee:	d5 80       	ldd	r13, Z+5	; 0x05
    12f0:	e6 80       	ldd	r14, Z+6	; 0x06
    12f2:	f7 80       	ldd	r15, Z+7	; 0x07
    12f4:	8a 81       	ldd	r24, Y+2	; 0x02
    12f6:	9b 81       	ldd	r25, Y+3	; 0x03
    12f8:	fc 01       	movw	r30, r24
    12fa:	80 85       	ldd	r24, Z+8	; 0x08
    12fc:	91 85       	ldd	r25, Z+9	; 0x09
    12fe:	cc 01       	movw	r24, r24
    1300:	a0 e0       	ldi	r26, 0x00	; 0
    1302:	b0 e0       	ldi	r27, 0x00	; 0
    1304:	bc 01       	movw	r22, r24
    1306:	cd 01       	movw	r24, r26
    1308:	0e 94 00 1e 	call	0x3c00	; 0x3c00 <__floatunsisf>
    130c:	dc 01       	movw	r26, r24
    130e:	cb 01       	movw	r24, r22
    1310:	9c 01       	movw	r18, r24
    1312:	ad 01       	movw	r20, r26
    1314:	c7 01       	movw	r24, r14
    1316:	b6 01       	movw	r22, r12
    1318:	0e 94 53 1d 	call	0x3aa6	; 0x3aa6 <__cmpsf2>
    131c:	88 23       	and	r24, r24
    131e:	ac f4       	brge	.+42     	; 0x134a <comparetemperature+0x80>
	{
		l_result = 1;
    1320:	81 e0       	ldi	r24, 0x01	; 1
    1322:	89 83       	std	Y+1, r24	; 0x01
		SSD1306_puts(63,6,"                              ", FONTMEDIUM,&SSD1306FrameBuffer1);
    1324:	00 e7       	ldi	r16, 0x70	; 112
    1326:	13 e0       	ldi	r17, 0x03	; 3
    1328:	25 e0       	ldi	r18, 0x05	; 5
    132a:	49 ea       	ldi	r20, 0xA9	; 169
    132c:	51 e0       	ldi	r21, 0x01	; 1
    132e:	66 e0       	ldi	r22, 0x06	; 6
    1330:	8f e3       	ldi	r24, 0x3F	; 63
    1332:	0e 94 e9 19 	call	0x33d2	; 0x33d2 <SSD1306_puts>
		SSD1306_puts(63,6,"ON", FONTMEDIUM,&SSD1306FrameBuffer1);
    1336:	00 e7       	ldi	r16, 0x70	; 112
    1338:	13 e0       	ldi	r17, 0x03	; 3
    133a:	25 e0       	ldi	r18, 0x05	; 5
    133c:	48 ec       	ldi	r20, 0xC8	; 200
    133e:	51 e0       	ldi	r21, 0x01	; 1
    1340:	66 e0       	ldi	r22, 0x06	; 6
    1342:	8f e3       	ldi	r24, 0x3F	; 63
    1344:	0e 94 e9 19 	call	0x33d2	; 0x33d2 <SSD1306_puts>
    1348:	13 c0       	rjmp	.+38     	; 0x1370 <comparetemperature+0xa6>
	}
	else
	{
		l_result = 0;
    134a:	19 82       	std	Y+1, r1	; 0x01
		SSD1306_puts(63,6,"                              ", FONTMEDIUM,&SSD1306FrameBuffer1);
    134c:	00 e7       	ldi	r16, 0x70	; 112
    134e:	13 e0       	ldi	r17, 0x03	; 3
    1350:	25 e0       	ldi	r18, 0x05	; 5
    1352:	49 ea       	ldi	r20, 0xA9	; 169
    1354:	51 e0       	ldi	r21, 0x01	; 1
    1356:	66 e0       	ldi	r22, 0x06	; 6
    1358:	8f e3       	ldi	r24, 0x3F	; 63
    135a:	0e 94 e9 19 	call	0x33d2	; 0x33d2 <SSD1306_puts>
		SSD1306_puts(63,6,"OFF", FONTMEDIUM,&SSD1306FrameBuffer1);
    135e:	00 e7       	ldi	r16, 0x70	; 112
    1360:	13 e0       	ldi	r17, 0x03	; 3
    1362:	25 e0       	ldi	r18, 0x05	; 5
    1364:	4b ec       	ldi	r20, 0xCB	; 203
    1366:	51 e0       	ldi	r21, 0x01	; 1
    1368:	66 e0       	ldi	r22, 0x06	; 6
    136a:	8f e3       	ldi	r24, 0x3F	; 63
    136c:	0e 94 e9 19 	call	0x33d2	; 0x33d2 <SSD1306_puts>
	}
	return l_result;
    1370:	89 81       	ldd	r24, Y+1	; 0x01
}
    1372:	0f 90       	pop	r0
    1374:	0f 90       	pop	r0
    1376:	0f 90       	pop	r0
    1378:	df 91       	pop	r29
    137a:	cf 91       	pop	r28
    137c:	1f 91       	pop	r17
    137e:	0f 91       	pop	r16
    1380:	ff 90       	pop	r15
    1382:	ef 90       	pop	r14
    1384:	df 90       	pop	r13
    1386:	cf 90       	pop	r12
    1388:	08 95       	ret

0000138a <readsensor>:
uint8_t readsensor()
{
    138a:	0f 93       	push	r16
    138c:	1f 93       	push	r17
    138e:	cf 93       	push	r28
    1390:	df 93       	push	r29
    1392:	1f 92       	push	r1
    1394:	cd b7       	in	r28, 0x3d	; 61
    1396:	de b7       	in	r29, 0x3e	; 62
	uint8_t l_result;
	
	l_result = get_data(meas_time, &conf, &dev, &comp_data);
    1398:	80 91 6c 03 	lds	r24, 0x036C	; 0x80036c <meas_time>
    139c:	90 91 6d 03 	lds	r25, 0x036D	; 0x80036d <meas_time+0x1>
    13a0:	a0 91 6e 03 	lds	r26, 0x036E	; 0x80036e <meas_time+0x2>
    13a4:	b0 91 6f 03 	lds	r27, 0x036F	; 0x80036f <meas_time+0x3>
    13a8:	02 e6       	ldi	r16, 0x62	; 98
    13aa:	13 e0       	ldi	r17, 0x03	; 3
    13ac:	28 e3       	ldi	r18, 0x38	; 56
    13ae:	33 e0       	ldi	r19, 0x03	; 3
    13b0:	42 e3       	ldi	r20, 0x32	; 50
    13b2:	53 e0       	ldi	r21, 0x03	; 3
    13b4:	bc 01       	movw	r22, r24
    13b6:	cd 01       	movw	r24, r26
    13b8:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <get_data>
    13bc:	89 83       	std	Y+1, r24	; 0x01
	return l_result;
    13be:	89 81       	ldd	r24, Y+1	; 0x01
    13c0:	0f 90       	pop	r0
    13c2:	df 91       	pop	r29
    13c4:	cf 91       	pop	r28
    13c6:	1f 91       	pop	r17
    13c8:	0f 91       	pop	r16
    13ca:	08 95       	ret

000013cc <bmp2_init>:
    13cc:	0f 93       	push	r16
    13ce:	1f 93       	push	r17
    13d0:	cf 93       	push	r28
    13d2:	df 93       	push	r29
    13d4:	00 d0       	rcall	.+0      	; 0x13d6 <bmp2_init+0xa>
    13d6:	1f 92       	push	r1
    13d8:	cd b7       	in	r28, 0x3d	; 61
    13da:	de b7       	in	r29, 0x3e	; 62
    13dc:	9b 83       	std	Y+3, r25	; 0x03
    13de:	8a 83       	std	Y+2, r24	; 0x02
    13e0:	8a 81       	ldd	r24, Y+2	; 0x02
    13e2:	9b 81       	ldd	r25, Y+3	; 0x03
    13e4:	0e 94 bf 0d 	call	0x1b7e	; 0x1b7e <null_ptr_check>
    13e8:	89 83       	std	Y+1, r24	; 0x01
    13ea:	89 81       	ldd	r24, Y+1	; 0x01
    13ec:	88 23       	and	r24, r24
    13ee:	f9 f4       	brne	.+62     	; 0x142e <bmp2_init+0x62>
    13f0:	8a 81       	ldd	r24, Y+2	; 0x02
    13f2:	9b 81       	ldd	r25, Y+3	; 0x03
    13f4:	2a 81       	ldd	r18, Y+2	; 0x02
    13f6:	3b 81       	ldd	r19, Y+3	; 0x03
    13f8:	89 01       	movw	r16, r18
    13fa:	21 e0       	ldi	r18, 0x01	; 1
    13fc:	30 e0       	ldi	r19, 0x00	; 0
    13fe:	40 e0       	ldi	r20, 0x00	; 0
    1400:	50 e0       	ldi	r21, 0x00	; 0
    1402:	bc 01       	movw	r22, r24
    1404:	80 ed       	ldi	r24, 0xD0	; 208
    1406:	0e 94 20 0a 	call	0x1440	; 0x1440 <bmp2_get_regs>
    140a:	89 83       	std	Y+1, r24	; 0x01
    140c:	89 81       	ldd	r24, Y+1	; 0x01
    140e:	88 23       	and	r24, r24
    1410:	71 f4       	brne	.+28     	; 0x142e <bmp2_init+0x62>
    1412:	8a 81       	ldd	r24, Y+2	; 0x02
    1414:	9b 81       	ldd	r25, Y+3	; 0x03
    1416:	fc 01       	movw	r30, r24
    1418:	80 81       	ld	r24, Z
    141a:	88 35       	cpi	r24, 0x58	; 88
    141c:	31 f4       	brne	.+12     	; 0x142a <bmp2_init+0x5e>
    141e:	8a 81       	ldd	r24, Y+2	; 0x02
    1420:	9b 81       	ldd	r25, Y+3	; 0x03
    1422:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <get_calib_param>
    1426:	89 83       	std	Y+1, r24	; 0x01
    1428:	02 c0       	rjmp	.+4      	; 0x142e <bmp2_init+0x62>
    142a:	8c ef       	ldi	r24, 0xFC	; 252
    142c:	89 83       	std	Y+1, r24	; 0x01
    142e:	89 81       	ldd	r24, Y+1	; 0x01
    1430:	0f 90       	pop	r0
    1432:	0f 90       	pop	r0
    1434:	0f 90       	pop	r0
    1436:	df 91       	pop	r29
    1438:	cf 91       	pop	r28
    143a:	1f 91       	pop	r17
    143c:	0f 91       	pop	r16
    143e:	08 95       	ret

00001440 <bmp2_get_regs>:
    1440:	0f 93       	push	r16
    1442:	1f 93       	push	r17
    1444:	cf 93       	push	r28
    1446:	df 93       	push	r29
    1448:	cd b7       	in	r28, 0x3d	; 61
    144a:	de b7       	in	r29, 0x3e	; 62
    144c:	2a 97       	sbiw	r28, 0x0a	; 10
    144e:	0f b6       	in	r0, 0x3f	; 63
    1450:	f8 94       	cli
    1452:	de bf       	out	0x3e, r29	; 62
    1454:	0f be       	out	0x3f, r0	; 63
    1456:	cd bf       	out	0x3d, r28	; 61
    1458:	8a 83       	std	Y+2, r24	; 0x02
    145a:	7c 83       	std	Y+4, r23	; 0x04
    145c:	6b 83       	std	Y+3, r22	; 0x03
    145e:	2d 83       	std	Y+5, r18	; 0x05
    1460:	3e 83       	std	Y+6, r19	; 0x06
    1462:	4f 83       	std	Y+7, r20	; 0x07
    1464:	58 87       	std	Y+8, r21	; 0x08
    1466:	1a 87       	std	Y+10, r17	; 0x0a
    1468:	09 87       	std	Y+9, r16	; 0x09
    146a:	89 85       	ldd	r24, Y+9	; 0x09
    146c:	9a 85       	ldd	r25, Y+10	; 0x0a
    146e:	0e 94 bf 0d 	call	0x1b7e	; 0x1b7e <null_ptr_check>
    1472:	89 83       	std	Y+1, r24	; 0x01
    1474:	89 81       	ldd	r24, Y+1	; 0x01
    1476:	88 23       	and	r24, r24
    1478:	b1 f5       	brne	.+108    	; 0x14e6 <bmp2_get_regs+0xa6>
    147a:	8b 81       	ldd	r24, Y+3	; 0x03
    147c:	9c 81       	ldd	r25, Y+4	; 0x04
    147e:	89 2b       	or	r24, r25
    1480:	91 f1       	breq	.+100    	; 0x14e6 <bmp2_get_regs+0xa6>
    1482:	89 85       	ldd	r24, Y+9	; 0x09
    1484:	9a 85       	ldd	r25, Y+10	; 0x0a
    1486:	dc 01       	movw	r26, r24
    1488:	11 96       	adiw	r26, 0x01	; 1
    148a:	8c 91       	ld	r24, X
    148c:	88 23       	and	r24, r24
    148e:	19 f4       	brne	.+6      	; 0x1496 <bmp2_get_regs+0x56>
    1490:	8a 81       	ldd	r24, Y+2	; 0x02
    1492:	80 68       	ori	r24, 0x80	; 128
    1494:	8a 83       	std	Y+2, r24	; 0x02
    1496:	89 85       	ldd	r24, Y+9	; 0x09
    1498:	9a 85       	ldd	r25, Y+10	; 0x0a
    149a:	dc 01       	movw	r26, r24
    149c:	15 96       	adiw	r26, 0x05	; 5
    149e:	ed 91       	ld	r30, X+
    14a0:	fc 91       	ld	r31, X
    14a2:	16 97       	sbiw	r26, 0x06	; 6
    14a4:	89 85       	ldd	r24, Y+9	; 0x09
    14a6:	9a 85       	ldd	r25, Y+10	; 0x0a
    14a8:	dc 01       	movw	r26, r24
    14aa:	12 96       	adiw	r26, 0x02	; 2
    14ac:	2d 91       	ld	r18, X+
    14ae:	3c 91       	ld	r19, X
    14b0:	13 97       	sbiw	r26, 0x03	; 3
    14b2:	8d 81       	ldd	r24, Y+5	; 0x05
    14b4:	9e 81       	ldd	r25, Y+6	; 0x06
    14b6:	af 81       	ldd	r26, Y+7	; 0x07
    14b8:	b8 85       	ldd	r27, Y+8	; 0x08
    14ba:	6b 81       	ldd	r22, Y+3	; 0x03
    14bc:	7c 81       	ldd	r23, Y+4	; 0x04
    14be:	89 01       	movw	r16, r18
    14c0:	9c 01       	movw	r18, r24
    14c2:	ad 01       	movw	r20, r26
    14c4:	8a 81       	ldd	r24, Y+2	; 0x02
    14c6:	09 95       	icall
    14c8:	28 2f       	mov	r18, r24
    14ca:	89 85       	ldd	r24, Y+9	; 0x09
    14cc:	9a 85       	ldd	r25, Y+10	; 0x0a
    14ce:	fc 01       	movw	r30, r24
    14d0:	24 83       	std	Z+4, r18	; 0x04
    14d2:	89 85       	ldd	r24, Y+9	; 0x09
    14d4:	9a 85       	ldd	r25, Y+10	; 0x0a
    14d6:	dc 01       	movw	r26, r24
    14d8:	14 96       	adiw	r26, 0x04	; 4
    14da:	8c 91       	ld	r24, X
    14dc:	88 23       	and	r24, r24
    14de:	29 f0       	breq	.+10     	; 0x14ea <bmp2_get_regs+0xaa>
    14e0:	8e ef       	ldi	r24, 0xFE	; 254
    14e2:	89 83       	std	Y+1, r24	; 0x01
    14e4:	02 c0       	rjmp	.+4      	; 0x14ea <bmp2_get_regs+0xaa>
    14e6:	8f ef       	ldi	r24, 0xFF	; 255
    14e8:	89 83       	std	Y+1, r24	; 0x01
    14ea:	89 81       	ldd	r24, Y+1	; 0x01
    14ec:	2a 96       	adiw	r28, 0x0a	; 10
    14ee:	0f b6       	in	r0, 0x3f	; 63
    14f0:	f8 94       	cli
    14f2:	de bf       	out	0x3e, r29	; 62
    14f4:	0f be       	out	0x3f, r0	; 63
    14f6:	cd bf       	out	0x3d, r28	; 61
    14f8:	df 91       	pop	r29
    14fa:	cf 91       	pop	r28
    14fc:	1f 91       	pop	r17
    14fe:	0f 91       	pop	r16
    1500:	08 95       	ret

00001502 <bmp2_set_regs>:
    1502:	ff 92       	push	r15
    1504:	0f 93       	push	r16
    1506:	1f 93       	push	r17
    1508:	cf 93       	push	r28
    150a:	df 93       	push	r29
    150c:	cd b7       	in	r28, 0x3d	; 61
    150e:	de b7       	in	r29, 0x3e	; 62
    1510:	68 97       	sbiw	r28, 0x18	; 24
    1512:	0f b6       	in	r0, 0x3f	; 63
    1514:	f8 94       	cli
    1516:	de bf       	out	0x3e, r29	; 62
    1518:	0f be       	out	0x3f, r0	; 63
    151a:	cd bf       	out	0x3d, r28	; 61
    151c:	98 8b       	std	Y+16, r25	; 0x10
    151e:	8f 87       	std	Y+15, r24	; 0x0f
    1520:	7a 8b       	std	Y+18, r23	; 0x12
    1522:	69 8b       	std	Y+17, r22	; 0x11
    1524:	2b 8b       	std	Y+19, r18	; 0x13
    1526:	3c 8b       	std	Y+20, r19	; 0x14
    1528:	4d 8b       	std	Y+21, r20	; 0x15
    152a:	5e 8b       	std	Y+22, r21	; 0x16
    152c:	18 8f       	std	Y+24, r17	; 0x18
    152e:	0f 8b       	std	Y+23, r16	; 0x17
    1530:	8b 89       	ldd	r24, Y+19	; 0x13
    1532:	9c 89       	ldd	r25, Y+20	; 0x14
    1534:	ad 89       	ldd	r26, Y+21	; 0x15
    1536:	be 89       	ldd	r27, Y+22	; 0x16
    1538:	05 97       	sbiw	r24, 0x05	; 5
    153a:	a1 05       	cpc	r26, r1
    153c:	b1 05       	cpc	r27, r1
    153e:	40 f0       	brcs	.+16     	; 0x1550 <bmp2_set_regs+0x4e>
    1540:	84 e0       	ldi	r24, 0x04	; 4
    1542:	90 e0       	ldi	r25, 0x00	; 0
    1544:	a0 e0       	ldi	r26, 0x00	; 0
    1546:	b0 e0       	ldi	r27, 0x00	; 0
    1548:	8b 8b       	std	Y+19, r24	; 0x13
    154a:	9c 8b       	std	Y+20, r25	; 0x14
    154c:	ad 8b       	std	Y+21, r26	; 0x15
    154e:	be 8b       	std	Y+22, r27	; 0x16
    1550:	8f 89       	ldd	r24, Y+23	; 0x17
    1552:	98 8d       	ldd	r25, Y+24	; 0x18
    1554:	0e 94 bf 0d 	call	0x1b7e	; 0x1b7e <null_ptr_check>
    1558:	89 83       	std	Y+1, r24	; 0x01
    155a:	89 81       	ldd	r24, Y+1	; 0x01
    155c:	88 23       	and	r24, r24
    155e:	09 f0       	breq	.+2      	; 0x1562 <bmp2_set_regs+0x60>
    1560:	a4 c0       	rjmp	.+328    	; 0x16aa <bmp2_set_regs+0x1a8>
    1562:	8f 85       	ldd	r24, Y+15	; 0x0f
    1564:	98 89       	ldd	r25, Y+16	; 0x10
    1566:	89 2b       	or	r24, r25
    1568:	09 f4       	brne	.+2      	; 0x156c <bmp2_set_regs+0x6a>
    156a:	9f c0       	rjmp	.+318    	; 0x16aa <bmp2_set_regs+0x1a8>
    156c:	89 89       	ldd	r24, Y+17	; 0x11
    156e:	9a 89       	ldd	r25, Y+18	; 0x12
    1570:	89 2b       	or	r24, r25
    1572:	09 f4       	brne	.+2      	; 0x1576 <bmp2_set_regs+0x74>
    1574:	9a c0       	rjmp	.+308    	; 0x16aa <bmp2_set_regs+0x1a8>
    1576:	8b 89       	ldd	r24, Y+19	; 0x13
    1578:	9c 89       	ldd	r25, Y+20	; 0x14
    157a:	ad 89       	ldd	r26, Y+21	; 0x15
    157c:	be 89       	ldd	r27, Y+22	; 0x16
    157e:	89 2b       	or	r24, r25
    1580:	8a 2b       	or	r24, r26
    1582:	8b 2b       	or	r24, r27
    1584:	09 f4       	brne	.+2      	; 0x1588 <bmp2_set_regs+0x86>
    1586:	8e c0       	rjmp	.+284    	; 0x16a4 <bmp2_set_regs+0x1a2>
    1588:	89 89       	ldd	r24, Y+17	; 0x11
    158a:	9a 89       	ldd	r25, Y+18	; 0x12
    158c:	dc 01       	movw	r26, r24
    158e:	8c 91       	ld	r24, X
    1590:	8f 83       	std	Y+7, r24	; 0x07
    1592:	8f 89       	ldd	r24, Y+23	; 0x17
    1594:	98 8d       	ldd	r25, Y+24	; 0x18
    1596:	fc 01       	movw	r30, r24
    1598:	81 81       	ldd	r24, Z+1	; 0x01
    159a:	88 23       	and	r24, r24
    159c:	31 f5       	brne	.+76     	; 0x15ea <bmp2_set_regs+0xe8>
    159e:	1e 82       	std	Y+6, r1	; 0x06
    15a0:	16 c0       	rjmp	.+44     	; 0x15ce <bmp2_set_regs+0xcc>
    15a2:	8e 81       	ldd	r24, Y+6	; 0x06
    15a4:	88 2f       	mov	r24, r24
    15a6:	90 e0       	ldi	r25, 0x00	; 0
    15a8:	2f 85       	ldd	r18, Y+15	; 0x0f
    15aa:	38 89       	ldd	r19, Y+16	; 0x10
    15ac:	82 0f       	add	r24, r18
    15ae:	93 1f       	adc	r25, r19
    15b0:	2e 81       	ldd	r18, Y+6	; 0x06
    15b2:	22 2f       	mov	r18, r18
    15b4:	30 e0       	ldi	r19, 0x00	; 0
    15b6:	4f 85       	ldd	r20, Y+15	; 0x0f
    15b8:	58 89       	ldd	r21, Y+16	; 0x10
    15ba:	24 0f       	add	r18, r20
    15bc:	35 1f       	adc	r19, r21
    15be:	d9 01       	movw	r26, r18
    15c0:	2c 91       	ld	r18, X
    15c2:	2f 77       	andi	r18, 0x7F	; 127
    15c4:	fc 01       	movw	r30, r24
    15c6:	20 83       	st	Z, r18
    15c8:	8e 81       	ldd	r24, Y+6	; 0x06
    15ca:	8f 5f       	subi	r24, 0xFF	; 255
    15cc:	8e 83       	std	Y+6, r24	; 0x06
    15ce:	8e 81       	ldd	r24, Y+6	; 0x06
    15d0:	28 2f       	mov	r18, r24
    15d2:	30 e0       	ldi	r19, 0x00	; 0
    15d4:	40 e0       	ldi	r20, 0x00	; 0
    15d6:	50 e0       	ldi	r21, 0x00	; 0
    15d8:	8b 89       	ldd	r24, Y+19	; 0x13
    15da:	9c 89       	ldd	r25, Y+20	; 0x14
    15dc:	ad 89       	ldd	r26, Y+21	; 0x15
    15de:	be 89       	ldd	r27, Y+22	; 0x16
    15e0:	28 17       	cp	r18, r24
    15e2:	39 07       	cpc	r19, r25
    15e4:	4a 07       	cpc	r20, r26
    15e6:	5b 07       	cpc	r21, r27
    15e8:	e0 f2       	brcs	.-72     	; 0x15a2 <bmp2_set_regs+0xa0>
    15ea:	8b 89       	ldd	r24, Y+19	; 0x13
    15ec:	9c 89       	ldd	r25, Y+20	; 0x14
    15ee:	ad 89       	ldd	r26, Y+21	; 0x15
    15f0:	be 89       	ldd	r27, Y+22	; 0x16
    15f2:	02 97       	sbiw	r24, 0x02	; 2
    15f4:	a1 05       	cpc	r26, r1
    15f6:	b1 05       	cpc	r27, r1
    15f8:	00 f1       	brcs	.+64     	; 0x163a <bmp2_set_regs+0x138>
    15fa:	8b 89       	ldd	r24, Y+19	; 0x13
    15fc:	9c 89       	ldd	r25, Y+20	; 0x14
    15fe:	ad 89       	ldd	r26, Y+21	; 0x15
    1600:	be 89       	ldd	r27, Y+22	; 0x16
    1602:	49 89       	ldd	r20, Y+17	; 0x11
    1604:	5a 89       	ldd	r21, Y+18	; 0x12
    1606:	be 01       	movw	r22, r28
    1608:	69 5f       	subi	r22, 0xF9	; 249
    160a:	7f 4f       	sbci	r23, 0xFF	; 255
    160c:	ef 85       	ldd	r30, Y+15	; 0x0f
    160e:	f8 89       	ldd	r31, Y+16	; 0x10
    1610:	8c 01       	movw	r16, r24
    1612:	9d 01       	movw	r18, r26
    1614:	cf 01       	movw	r24, r30
    1616:	0e 94 eb 0d 	call	0x1bd6	; 0x1bd6 <interleave_data>
    161a:	8b 89       	ldd	r24, Y+19	; 0x13
    161c:	9c 89       	ldd	r25, Y+20	; 0x14
    161e:	ad 89       	ldd	r26, Y+21	; 0x15
    1620:	be 89       	ldd	r27, Y+22	; 0x16
    1622:	88 0f       	add	r24, r24
    1624:	99 1f       	adc	r25, r25
    1626:	aa 1f       	adc	r26, r26
    1628:	bb 1f       	adc	r27, r27
    162a:	01 97       	sbiw	r24, 0x01	; 1
    162c:	a1 09       	sbc	r26, r1
    162e:	b1 09       	sbc	r27, r1
    1630:	8a 83       	std	Y+2, r24	; 0x02
    1632:	9b 83       	std	Y+3, r25	; 0x03
    1634:	ac 83       	std	Y+4, r26	; 0x04
    1636:	bd 83       	std	Y+5, r27	; 0x05
    1638:	08 c0       	rjmp	.+16     	; 0x164a <bmp2_set_regs+0x148>
    163a:	8b 89       	ldd	r24, Y+19	; 0x13
    163c:	9c 89       	ldd	r25, Y+20	; 0x14
    163e:	ad 89       	ldd	r26, Y+21	; 0x15
    1640:	be 89       	ldd	r27, Y+22	; 0x16
    1642:	8a 83       	std	Y+2, r24	; 0x02
    1644:	9b 83       	std	Y+3, r25	; 0x03
    1646:	ac 83       	std	Y+4, r26	; 0x04
    1648:	bd 83       	std	Y+5, r27	; 0x05
    164a:	8f 89       	ldd	r24, Y+23	; 0x17
    164c:	98 8d       	ldd	r25, Y+24	; 0x18
    164e:	dc 01       	movw	r26, r24
    1650:	17 96       	adiw	r26, 0x07	; 7
    1652:	ed 91       	ld	r30, X+
    1654:	fc 91       	ld	r31, X
    1656:	18 97       	sbiw	r26, 0x08	; 8
    1658:	8f 89       	ldd	r24, Y+23	; 0x17
    165a:	98 8d       	ldd	r25, Y+24	; 0x18
    165c:	dc 01       	movw	r26, r24
    165e:	12 96       	adiw	r26, 0x02	; 2
    1660:	2d 91       	ld	r18, X+
    1662:	3c 91       	ld	r19, X
    1664:	13 97       	sbiw	r26, 0x03	; 3
    1666:	8f 85       	ldd	r24, Y+15	; 0x0f
    1668:	98 89       	ldd	r25, Y+16	; 0x10
    166a:	dc 01       	movw	r26, r24
    166c:	fc 90       	ld	r15, X
    166e:	8a 81       	ldd	r24, Y+2	; 0x02
    1670:	9b 81       	ldd	r25, Y+3	; 0x03
    1672:	ac 81       	ldd	r26, Y+4	; 0x04
    1674:	bd 81       	ldd	r27, Y+5	; 0x05
    1676:	be 01       	movw	r22, r28
    1678:	69 5f       	subi	r22, 0xF9	; 249
    167a:	7f 4f       	sbci	r23, 0xFF	; 255
    167c:	89 01       	movw	r16, r18
    167e:	9c 01       	movw	r18, r24
    1680:	ad 01       	movw	r20, r26
    1682:	8f 2d       	mov	r24, r15
    1684:	09 95       	icall
    1686:	28 2f       	mov	r18, r24
    1688:	8f 89       	ldd	r24, Y+23	; 0x17
    168a:	98 8d       	ldd	r25, Y+24	; 0x18
    168c:	fc 01       	movw	r30, r24
    168e:	24 83       	std	Z+4, r18	; 0x04
    1690:	8f 89       	ldd	r24, Y+23	; 0x17
    1692:	98 8d       	ldd	r25, Y+24	; 0x18
    1694:	dc 01       	movw	r26, r24
    1696:	14 96       	adiw	r26, 0x04	; 4
    1698:	8c 91       	ld	r24, X
    169a:	88 23       	and	r24, r24
    169c:	49 f0       	breq	.+18     	; 0x16b0 <bmp2_set_regs+0x1ae>
    169e:	8e ef       	ldi	r24, 0xFE	; 254
    16a0:	89 83       	std	Y+1, r24	; 0x01
    16a2:	06 c0       	rjmp	.+12     	; 0x16b0 <bmp2_set_regs+0x1ae>
    16a4:	8d ef       	ldi	r24, 0xFD	; 253
    16a6:	89 83       	std	Y+1, r24	; 0x01
    16a8:	03 c0       	rjmp	.+6      	; 0x16b0 <bmp2_set_regs+0x1ae>
    16aa:	8f ef       	ldi	r24, 0xFF	; 255
    16ac:	89 83       	std	Y+1, r24	; 0x01
    16ae:	01 c0       	rjmp	.+2      	; 0x16b2 <bmp2_set_regs+0x1b0>
    16b0:	00 00       	nop
    16b2:	89 81       	ldd	r24, Y+1	; 0x01
    16b4:	68 96       	adiw	r28, 0x18	; 24
    16b6:	0f b6       	in	r0, 0x3f	; 63
    16b8:	f8 94       	cli
    16ba:	de bf       	out	0x3e, r29	; 62
    16bc:	0f be       	out	0x3f, r0	; 63
    16be:	cd bf       	out	0x3d, r28	; 61
    16c0:	df 91       	pop	r29
    16c2:	cf 91       	pop	r28
    16c4:	1f 91       	pop	r17
    16c6:	0f 91       	pop	r16
    16c8:	ff 90       	pop	r15
    16ca:	08 95       	ret

000016cc <bmp2_soft_reset>:
    16cc:	0f 93       	push	r16
    16ce:	1f 93       	push	r17
    16d0:	cf 93       	push	r28
    16d2:	df 93       	push	r29
    16d4:	00 d0       	rcall	.+0      	; 0x16d6 <bmp2_soft_reset+0xa>
    16d6:	00 d0       	rcall	.+0      	; 0x16d8 <bmp2_soft_reset+0xc>
    16d8:	1f 92       	push	r1
    16da:	cd b7       	in	r28, 0x3d	; 61
    16dc:	de b7       	in	r29, 0x3e	; 62
    16de:	9d 83       	std	Y+5, r25	; 0x05
    16e0:	8c 83       	std	Y+4, r24	; 0x04
    16e2:	80 ee       	ldi	r24, 0xE0	; 224
    16e4:	8a 83       	std	Y+2, r24	; 0x02
    16e6:	86 eb       	ldi	r24, 0xB6	; 182
    16e8:	8b 83       	std	Y+3, r24	; 0x03
    16ea:	2c 81       	ldd	r18, Y+4	; 0x04
    16ec:	3d 81       	ldd	r19, Y+5	; 0x05
    16ee:	be 01       	movw	r22, r28
    16f0:	6d 5f       	subi	r22, 0xFD	; 253
    16f2:	7f 4f       	sbci	r23, 0xFF	; 255
    16f4:	ce 01       	movw	r24, r28
    16f6:	02 96       	adiw	r24, 0x02	; 2
    16f8:	89 01       	movw	r16, r18
    16fa:	21 e0       	ldi	r18, 0x01	; 1
    16fc:	30 e0       	ldi	r19, 0x00	; 0
    16fe:	40 e0       	ldi	r20, 0x00	; 0
    1700:	50 e0       	ldi	r21, 0x00	; 0
    1702:	0e 94 81 0a 	call	0x1502	; 0x1502 <bmp2_set_regs>
    1706:	89 83       	std	Y+1, r24	; 0x01
    1708:	89 81       	ldd	r24, Y+1	; 0x01
    170a:	0f 90       	pop	r0
    170c:	0f 90       	pop	r0
    170e:	0f 90       	pop	r0
    1710:	0f 90       	pop	r0
    1712:	0f 90       	pop	r0
    1714:	df 91       	pop	r29
    1716:	cf 91       	pop	r28
    1718:	1f 91       	pop	r17
    171a:	0f 91       	pop	r16
    171c:	08 95       	ret

0000171e <bmp2_get_config>:
    171e:	0f 93       	push	r16
    1720:	1f 93       	push	r17
    1722:	cf 93       	push	r28
    1724:	df 93       	push	r29
    1726:	cd b7       	in	r28, 0x3d	; 61
    1728:	de b7       	in	r29, 0x3e	; 62
    172a:	27 97       	sbiw	r28, 0x07	; 7
    172c:	0f b6       	in	r0, 0x3f	; 63
    172e:	f8 94       	cli
    1730:	de bf       	out	0x3e, r29	; 62
    1732:	0f be       	out	0x3f, r0	; 63
    1734:	cd bf       	out	0x3d, r28	; 61
    1736:	9d 83       	std	Y+5, r25	; 0x05
    1738:	8c 83       	std	Y+4, r24	; 0x04
    173a:	7f 83       	std	Y+7, r23	; 0x07
    173c:	6e 83       	std	Y+6, r22	; 0x06
    173e:	1a 82       	std	Y+2, r1	; 0x02
    1740:	1b 82       	std	Y+3, r1	; 0x03
    1742:	8c 81       	ldd	r24, Y+4	; 0x04
    1744:	9d 81       	ldd	r25, Y+5	; 0x05
    1746:	89 2b       	or	r24, r25
    1748:	09 f4       	brne	.+2      	; 0x174c <bmp2_get_config+0x2e>
    174a:	47 c0       	rjmp	.+142    	; 0x17da <bmp2_get_config+0xbc>
    174c:	2e 81       	ldd	r18, Y+6	; 0x06
    174e:	3f 81       	ldd	r19, Y+7	; 0x07
    1750:	ce 01       	movw	r24, r28
    1752:	02 96       	adiw	r24, 0x02	; 2
    1754:	89 01       	movw	r16, r18
    1756:	22 e0       	ldi	r18, 0x02	; 2
    1758:	30 e0       	ldi	r19, 0x00	; 0
    175a:	40 e0       	ldi	r20, 0x00	; 0
    175c:	50 e0       	ldi	r21, 0x00	; 0
    175e:	bc 01       	movw	r22, r24
    1760:	84 ef       	ldi	r24, 0xF4	; 244
    1762:	0e 94 20 0a 	call	0x1440	; 0x1440 <bmp2_get_regs>
    1766:	89 83       	std	Y+1, r24	; 0x01
    1768:	89 81       	ldd	r24, Y+1	; 0x01
    176a:	88 23       	and	r24, r24
    176c:	c1 f5       	brne	.+112    	; 0x17de <bmp2_get_config+0xc0>
    176e:	8a 81       	ldd	r24, Y+2	; 0x02
    1770:	28 2f       	mov	r18, r24
    1772:	22 95       	swap	r18
    1774:	26 95       	lsr	r18
    1776:	27 70       	andi	r18, 0x07	; 7
    1778:	8c 81       	ldd	r24, Y+4	; 0x04
    177a:	9d 81       	ldd	r25, Y+5	; 0x05
    177c:	fc 01       	movw	r30, r24
    177e:	20 83       	st	Z, r18
    1780:	8a 81       	ldd	r24, Y+2	; 0x02
    1782:	88 2f       	mov	r24, r24
    1784:	90 e0       	ldi	r25, 0x00	; 0
    1786:	8c 71       	andi	r24, 0x1C	; 28
    1788:	99 27       	eor	r25, r25
    178a:	95 95       	asr	r25
    178c:	87 95       	ror	r24
    178e:	95 95       	asr	r25
    1790:	87 95       	ror	r24
    1792:	28 2f       	mov	r18, r24
    1794:	8c 81       	ldd	r24, Y+4	; 0x04
    1796:	9d 81       	ldd	r25, Y+5	; 0x05
    1798:	fc 01       	movw	r30, r24
    179a:	21 83       	std	Z+1, r18	; 0x01
    179c:	8b 81       	ldd	r24, Y+3	; 0x03
    179e:	28 2f       	mov	r18, r24
    17a0:	22 95       	swap	r18
    17a2:	26 95       	lsr	r18
    17a4:	27 70       	andi	r18, 0x07	; 7
    17a6:	8c 81       	ldd	r24, Y+4	; 0x04
    17a8:	9d 81       	ldd	r25, Y+5	; 0x05
    17aa:	fc 01       	movw	r30, r24
    17ac:	22 83       	std	Z+2, r18	; 0x02
    17ae:	8b 81       	ldd	r24, Y+3	; 0x03
    17b0:	88 2f       	mov	r24, r24
    17b2:	90 e0       	ldi	r25, 0x00	; 0
    17b4:	8c 71       	andi	r24, 0x1C	; 28
    17b6:	99 27       	eor	r25, r25
    17b8:	95 95       	asr	r25
    17ba:	87 95       	ror	r24
    17bc:	95 95       	asr	r25
    17be:	87 95       	ror	r24
    17c0:	28 2f       	mov	r18, r24
    17c2:	8c 81       	ldd	r24, Y+4	; 0x04
    17c4:	9d 81       	ldd	r25, Y+5	; 0x05
    17c6:	fc 01       	movw	r30, r24
    17c8:	24 83       	std	Z+4, r18	; 0x04
    17ca:	8b 81       	ldd	r24, Y+3	; 0x03
    17cc:	28 2f       	mov	r18, r24
    17ce:	21 70       	andi	r18, 0x01	; 1
    17d0:	8c 81       	ldd	r24, Y+4	; 0x04
    17d2:	9d 81       	ldd	r25, Y+5	; 0x05
    17d4:	fc 01       	movw	r30, r24
    17d6:	25 83       	std	Z+5, r18	; 0x05
    17d8:	02 c0       	rjmp	.+4      	; 0x17de <bmp2_get_config+0xc0>
    17da:	8f ef       	ldi	r24, 0xFF	; 255
    17dc:	89 83       	std	Y+1, r24	; 0x01
    17de:	89 81       	ldd	r24, Y+1	; 0x01
    17e0:	27 96       	adiw	r28, 0x07	; 7
    17e2:	0f b6       	in	r0, 0x3f	; 63
    17e4:	f8 94       	cli
    17e6:	de bf       	out	0x3e, r29	; 62
    17e8:	0f be       	out	0x3f, r0	; 63
    17ea:	cd bf       	out	0x3d, r28	; 61
    17ec:	df 91       	pop	r29
    17ee:	cf 91       	pop	r28
    17f0:	1f 91       	pop	r17
    17f2:	0f 91       	pop	r16
    17f4:	08 95       	ret

000017f6 <bmp2_set_config>:
    17f6:	cf 93       	push	r28
    17f8:	df 93       	push	r29
    17fa:	00 d0       	rcall	.+0      	; 0x17fc <bmp2_set_config+0x6>
    17fc:	00 d0       	rcall	.+0      	; 0x17fe <bmp2_set_config+0x8>
    17fe:	cd b7       	in	r28, 0x3d	; 61
    1800:	de b7       	in	r29, 0x3e	; 62
    1802:	9a 83       	std	Y+2, r25	; 0x02
    1804:	89 83       	std	Y+1, r24	; 0x01
    1806:	7c 83       	std	Y+4, r23	; 0x04
    1808:	6b 83       	std	Y+3, r22	; 0x03
    180a:	2b 81       	ldd	r18, Y+3	; 0x03
    180c:	3c 81       	ldd	r19, Y+4	; 0x04
    180e:	89 81       	ldd	r24, Y+1	; 0x01
    1810:	9a 81       	ldd	r25, Y+2	; 0x02
    1812:	a9 01       	movw	r20, r18
    1814:	bc 01       	movw	r22, r24
    1816:	80 e0       	ldi	r24, 0x00	; 0
    1818:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <conf_sensor>
    181c:	0f 90       	pop	r0
    181e:	0f 90       	pop	r0
    1820:	0f 90       	pop	r0
    1822:	0f 90       	pop	r0
    1824:	df 91       	pop	r29
    1826:	cf 91       	pop	r28
    1828:	08 95       	ret

0000182a <bmp2_get_status>:
    182a:	0f 93       	push	r16
    182c:	1f 93       	push	r17
    182e:	cf 93       	push	r28
    1830:	df 93       	push	r29
    1832:	00 d0       	rcall	.+0      	; 0x1834 <bmp2_get_status+0xa>
    1834:	00 d0       	rcall	.+0      	; 0x1836 <bmp2_get_status+0xc>
    1836:	00 d0       	rcall	.+0      	; 0x1838 <bmp2_get_status+0xe>
    1838:	cd b7       	in	r28, 0x3d	; 61
    183a:	de b7       	in	r29, 0x3e	; 62
    183c:	9c 83       	std	Y+4, r25	; 0x04
    183e:	8b 83       	std	Y+3, r24	; 0x03
    1840:	7e 83       	std	Y+6, r23	; 0x06
    1842:	6d 83       	std	Y+5, r22	; 0x05
    1844:	8b 81       	ldd	r24, Y+3	; 0x03
    1846:	9c 81       	ldd	r25, Y+4	; 0x04
    1848:	89 2b       	or	r24, r25
    184a:	49 f1       	breq	.+82     	; 0x189e <bmp2_get_status+0x74>
    184c:	2d 81       	ldd	r18, Y+5	; 0x05
    184e:	3e 81       	ldd	r19, Y+6	; 0x06
    1850:	ce 01       	movw	r24, r28
    1852:	02 96       	adiw	r24, 0x02	; 2
    1854:	89 01       	movw	r16, r18
    1856:	21 e0       	ldi	r18, 0x01	; 1
    1858:	30 e0       	ldi	r19, 0x00	; 0
    185a:	40 e0       	ldi	r20, 0x00	; 0
    185c:	50 e0       	ldi	r21, 0x00	; 0
    185e:	bc 01       	movw	r22, r24
    1860:	83 ef       	ldi	r24, 0xF3	; 243
    1862:	0e 94 20 0a 	call	0x1440	; 0x1440 <bmp2_get_regs>
    1866:	89 83       	std	Y+1, r24	; 0x01
    1868:	89 81       	ldd	r24, Y+1	; 0x01
    186a:	88 23       	and	r24, r24
    186c:	d1 f4       	brne	.+52     	; 0x18a2 <bmp2_get_status+0x78>
    186e:	8a 81       	ldd	r24, Y+2	; 0x02
    1870:	88 2f       	mov	r24, r24
    1872:	90 e0       	ldi	r25, 0x00	; 0
    1874:	88 70       	andi	r24, 0x08	; 8
    1876:	99 27       	eor	r25, r25
    1878:	95 95       	asr	r25
    187a:	87 95       	ror	r24
    187c:	95 95       	asr	r25
    187e:	87 95       	ror	r24
    1880:	95 95       	asr	r25
    1882:	87 95       	ror	r24
    1884:	28 2f       	mov	r18, r24
    1886:	8b 81       	ldd	r24, Y+3	; 0x03
    1888:	9c 81       	ldd	r25, Y+4	; 0x04
    188a:	fc 01       	movw	r30, r24
    188c:	20 83       	st	Z, r18
    188e:	8a 81       	ldd	r24, Y+2	; 0x02
    1890:	28 2f       	mov	r18, r24
    1892:	21 70       	andi	r18, 0x01	; 1
    1894:	8b 81       	ldd	r24, Y+3	; 0x03
    1896:	9c 81       	ldd	r25, Y+4	; 0x04
    1898:	fc 01       	movw	r30, r24
    189a:	21 83       	std	Z+1, r18	; 0x01
    189c:	02 c0       	rjmp	.+4      	; 0x18a2 <bmp2_get_status+0x78>
    189e:	8f ef       	ldi	r24, 0xFF	; 255
    18a0:	89 83       	std	Y+1, r24	; 0x01
    18a2:	89 81       	ldd	r24, Y+1	; 0x01
    18a4:	26 96       	adiw	r28, 0x06	; 6
    18a6:	0f b6       	in	r0, 0x3f	; 63
    18a8:	f8 94       	cli
    18aa:	de bf       	out	0x3e, r29	; 62
    18ac:	0f be       	out	0x3f, r0	; 63
    18ae:	cd bf       	out	0x3d, r28	; 61
    18b0:	df 91       	pop	r29
    18b2:	cf 91       	pop	r28
    18b4:	1f 91       	pop	r17
    18b6:	0f 91       	pop	r16
    18b8:	08 95       	ret

000018ba <bmp2_set_power_mode>:
    18ba:	cf 93       	push	r28
    18bc:	df 93       	push	r29
    18be:	00 d0       	rcall	.+0      	; 0x18c0 <bmp2_set_power_mode+0x6>
    18c0:	00 d0       	rcall	.+0      	; 0x18c2 <bmp2_set_power_mode+0x8>
    18c2:	00 d0       	rcall	.+0      	; 0x18c4 <bmp2_set_power_mode+0xa>
    18c4:	cd b7       	in	r28, 0x3d	; 61
    18c6:	de b7       	in	r29, 0x3e	; 62
    18c8:	8a 83       	std	Y+2, r24	; 0x02
    18ca:	7c 83       	std	Y+4, r23	; 0x04
    18cc:	6b 83       	std	Y+3, r22	; 0x03
    18ce:	5e 83       	std	Y+6, r21	; 0x06
    18d0:	4d 83       	std	Y+5, r20	; 0x05
    18d2:	2d 81       	ldd	r18, Y+5	; 0x05
    18d4:	3e 81       	ldd	r19, Y+6	; 0x06
    18d6:	8b 81       	ldd	r24, Y+3	; 0x03
    18d8:	9c 81       	ldd	r25, Y+4	; 0x04
    18da:	a9 01       	movw	r20, r18
    18dc:	bc 01       	movw	r22, r24
    18de:	8a 81       	ldd	r24, Y+2	; 0x02
    18e0:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <conf_sensor>
    18e4:	89 83       	std	Y+1, r24	; 0x01
    18e6:	89 81       	ldd	r24, Y+1	; 0x01
    18e8:	26 96       	adiw	r28, 0x06	; 6
    18ea:	0f b6       	in	r0, 0x3f	; 63
    18ec:	f8 94       	cli
    18ee:	de bf       	out	0x3e, r29	; 62
    18f0:	0f be       	out	0x3f, r0	; 63
    18f2:	cd bf       	out	0x3d, r28	; 61
    18f4:	df 91       	pop	r29
    18f6:	cf 91       	pop	r28
    18f8:	08 95       	ret

000018fa <bmp2_get_sensor_data>:
    18fa:	0f 93       	push	r16
    18fc:	1f 93       	push	r17
    18fe:	cf 93       	push	r28
    1900:	df 93       	push	r29
    1902:	cd b7       	in	r28, 0x3d	; 61
    1904:	de b7       	in	r29, 0x3e	; 62
    1906:	63 97       	sbiw	r28, 0x13	; 19
    1908:	0f b6       	in	r0, 0x3f	; 63
    190a:	f8 94       	cli
    190c:	de bf       	out	0x3e, r29	; 62
    190e:	0f be       	out	0x3f, r0	; 63
    1910:	cd bf       	out	0x3d, r28	; 61
    1912:	99 8b       	std	Y+17, r25	; 0x11
    1914:	88 8b       	std	Y+16, r24	; 0x10
    1916:	7b 8b       	std	Y+19, r23	; 0x13
    1918:	6a 8b       	std	Y+18, r22	; 0x12
    191a:	26 e0       	ldi	r18, 0x06	; 6
    191c:	ce 01       	movw	r24, r28
    191e:	02 96       	adiw	r24, 0x02	; 2
    1920:	fc 01       	movw	r30, r24
    1922:	32 2f       	mov	r19, r18
    1924:	11 92       	st	Z+, r1
    1926:	3a 95       	dec	r19
    1928:	e9 f7       	brne	.-6      	; 0x1924 <bmp2_get_sensor_data+0x2a>
    192a:	28 e0       	ldi	r18, 0x08	; 8
    192c:	ce 01       	movw	r24, r28
    192e:	08 96       	adiw	r24, 0x08	; 8
    1930:	fc 01       	movw	r30, r24
    1932:	32 2f       	mov	r19, r18
    1934:	11 92       	st	Z+, r1
    1936:	3a 95       	dec	r19
    1938:	e9 f7       	brne	.-6      	; 0x1934 <bmp2_get_sensor_data+0x3a>
    193a:	88 89       	ldd	r24, Y+16	; 0x10
    193c:	99 89       	ldd	r25, Y+17	; 0x11
    193e:	89 2b       	or	r24, r25
    1940:	41 f1       	breq	.+80     	; 0x1992 <bmp2_get_sensor_data+0x98>
    1942:	2a 89       	ldd	r18, Y+18	; 0x12
    1944:	3b 89       	ldd	r19, Y+19	; 0x13
    1946:	ce 01       	movw	r24, r28
    1948:	02 96       	adiw	r24, 0x02	; 2
    194a:	89 01       	movw	r16, r18
    194c:	26 e0       	ldi	r18, 0x06	; 6
    194e:	30 e0       	ldi	r19, 0x00	; 0
    1950:	40 e0       	ldi	r20, 0x00	; 0
    1952:	50 e0       	ldi	r21, 0x00	; 0
    1954:	bc 01       	movw	r22, r24
    1956:	87 ef       	ldi	r24, 0xF7	; 247
    1958:	0e 94 20 0a 	call	0x1440	; 0x1440 <bmp2_get_regs>
    195c:	89 83       	std	Y+1, r24	; 0x01
    195e:	89 81       	ldd	r24, Y+1	; 0x01
    1960:	88 23       	and	r24, r24
    1962:	c9 f4       	brne	.+50     	; 0x1996 <bmp2_get_sensor_data+0x9c>
    1964:	9e 01       	movw	r18, r28
    1966:	28 5f       	subi	r18, 0xF8	; 248
    1968:	3f 4f       	sbci	r19, 0xFF	; 255
    196a:	ce 01       	movw	r24, r28
    196c:	02 96       	adiw	r24, 0x02	; 2
    196e:	b9 01       	movw	r22, r18
    1970:	0e 94 94 10 	call	0x2128	; 0x2128 <parse_sensor_data>
    1974:	89 83       	std	Y+1, r24	; 0x01
    1976:	89 81       	ldd	r24, Y+1	; 0x01
    1978:	88 23       	and	r24, r24
    197a:	69 f4       	brne	.+26     	; 0x1996 <bmp2_get_sensor_data+0x9c>
    197c:	4a 89       	ldd	r20, Y+18	; 0x12
    197e:	5b 89       	ldd	r21, Y+19	; 0x13
    1980:	28 89       	ldd	r18, Y+16	; 0x10
    1982:	39 89       	ldd	r19, Y+17	; 0x11
    1984:	ce 01       	movw	r24, r28
    1986:	08 96       	adiw	r24, 0x08	; 8
    1988:	b9 01       	movw	r22, r18
    198a:	0e 94 d7 0c 	call	0x19ae	; 0x19ae <bmp2_compensate_data>
    198e:	89 83       	std	Y+1, r24	; 0x01
    1990:	02 c0       	rjmp	.+4      	; 0x1996 <bmp2_get_sensor_data+0x9c>
    1992:	8f ef       	ldi	r24, 0xFF	; 255
    1994:	89 83       	std	Y+1, r24	; 0x01
    1996:	89 81       	ldd	r24, Y+1	; 0x01
    1998:	63 96       	adiw	r28, 0x13	; 19
    199a:	0f b6       	in	r0, 0x3f	; 63
    199c:	f8 94       	cli
    199e:	de bf       	out	0x3e, r29	; 62
    19a0:	0f be       	out	0x3f, r0	; 63
    19a2:	cd bf       	out	0x3d, r28	; 61
    19a4:	df 91       	pop	r29
    19a6:	cf 91       	pop	r28
    19a8:	1f 91       	pop	r17
    19aa:	0f 91       	pop	r16
    19ac:	08 95       	ret

000019ae <bmp2_compensate_data>:
    19ae:	cf 93       	push	r28
    19b0:	df 93       	push	r29
    19b2:	cd b7       	in	r28, 0x3d	; 61
    19b4:	de b7       	in	r29, 0x3e	; 62
    19b6:	27 97       	sbiw	r28, 0x07	; 7
    19b8:	0f b6       	in	r0, 0x3f	; 63
    19ba:	f8 94       	cli
    19bc:	de bf       	out	0x3e, r29	; 62
    19be:	0f be       	out	0x3f, r0	; 63
    19c0:	cd bf       	out	0x3d, r28	; 61
    19c2:	9b 83       	std	Y+3, r25	; 0x03
    19c4:	8a 83       	std	Y+2, r24	; 0x02
    19c6:	7d 83       	std	Y+5, r23	; 0x05
    19c8:	6c 83       	std	Y+4, r22	; 0x04
    19ca:	5f 83       	std	Y+7, r21	; 0x07
    19cc:	4e 83       	std	Y+6, r20	; 0x06
    19ce:	8e 81       	ldd	r24, Y+6	; 0x06
    19d0:	9f 81       	ldd	r25, Y+7	; 0x07
    19d2:	0e 94 bf 0d 	call	0x1b7e	; 0x1b7e <null_ptr_check>
    19d6:	89 83       	std	Y+1, r24	; 0x01
    19d8:	89 81       	ldd	r24, Y+1	; 0x01
    19da:	88 23       	and	r24, r24
    19dc:	79 f5       	brne	.+94     	; 0x1a3c <bmp2_compensate_data+0x8e>
    19de:	8a 81       	ldd	r24, Y+2	; 0x02
    19e0:	9b 81       	ldd	r25, Y+3	; 0x03
    19e2:	89 2b       	or	r24, r25
    19e4:	59 f1       	breq	.+86     	; 0x1a3c <bmp2_compensate_data+0x8e>
    19e6:	8c 81       	ldd	r24, Y+4	; 0x04
    19e8:	9d 81       	ldd	r25, Y+5	; 0x05
    19ea:	89 2b       	or	r24, r25
    19ec:	39 f1       	breq	.+78     	; 0x1a3c <bmp2_compensate_data+0x8e>
    19ee:	8c 81       	ldd	r24, Y+4	; 0x04
    19f0:	9d 81       	ldd	r25, Y+5	; 0x05
    19f2:	fc 01       	movw	r30, r24
    19f4:	14 82       	std	Z+4, r1	; 0x04
    19f6:	15 82       	std	Z+5, r1	; 0x05
    19f8:	16 82       	std	Z+6, r1	; 0x06
    19fa:	17 82       	std	Z+7, r1	; 0x07
    19fc:	8c 81       	ldd	r24, Y+4	; 0x04
    19fe:	9d 81       	ldd	r25, Y+5	; 0x05
    1a00:	fc 01       	movw	r30, r24
    1a02:	10 82       	st	Z, r1
    1a04:	11 82       	std	Z+1, r1	; 0x01
    1a06:	12 82       	std	Z+2, r1	; 0x02
    1a08:	13 82       	std	Z+3, r1	; 0x03
    1a0a:	8c 81       	ldd	r24, Y+4	; 0x04
    1a0c:	9d 81       	ldd	r25, Y+5	; 0x05
    1a0e:	04 96       	adiw	r24, 0x04	; 4
    1a10:	4e 81       	ldd	r20, Y+6	; 0x06
    1a12:	5f 81       	ldd	r21, Y+7	; 0x07
    1a14:	2a 81       	ldd	r18, Y+2	; 0x02
    1a16:	3b 81       	ldd	r19, Y+3	; 0x03
    1a18:	b9 01       	movw	r22, r18
    1a1a:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <compensate_temperature>
    1a1e:	89 83       	std	Y+1, r24	; 0x01
    1a20:	89 81       	ldd	r24, Y+1	; 0x01
    1a22:	88 23       	and	r24, r24
    1a24:	69 f4       	brne	.+26     	; 0x1a40 <bmp2_compensate_data+0x92>
    1a26:	8c 81       	ldd	r24, Y+4	; 0x04
    1a28:	9d 81       	ldd	r25, Y+5	; 0x05
    1a2a:	4e 81       	ldd	r20, Y+6	; 0x06
    1a2c:	5f 81       	ldd	r21, Y+7	; 0x07
    1a2e:	2a 81       	ldd	r18, Y+2	; 0x02
    1a30:	3b 81       	ldd	r19, Y+3	; 0x03
    1a32:	b9 01       	movw	r22, r18
    1a34:	0e 94 fe 12 	call	0x25fc	; 0x25fc <compensate_pressure>
    1a38:	89 83       	std	Y+1, r24	; 0x01
    1a3a:	02 c0       	rjmp	.+4      	; 0x1a40 <bmp2_compensate_data+0x92>
    1a3c:	8f ef       	ldi	r24, 0xFF	; 255
    1a3e:	89 83       	std	Y+1, r24	; 0x01
    1a40:	89 81       	ldd	r24, Y+1	; 0x01
    1a42:	27 96       	adiw	r28, 0x07	; 7
    1a44:	0f b6       	in	r0, 0x3f	; 63
    1a46:	f8 94       	cli
    1a48:	de bf       	out	0x3e, r29	; 62
    1a4a:	0f be       	out	0x3f, r0	; 63
    1a4c:	cd bf       	out	0x3d, r28	; 61
    1a4e:	df 91       	pop	r29
    1a50:	cf 91       	pop	r28
    1a52:	08 95       	ret

00001a54 <bmp2_compute_meas_time>:
    1a54:	cf 93       	push	r28
    1a56:	df 93       	push	r29
    1a58:	cd b7       	in	r28, 0x3d	; 61
    1a5a:	de b7       	in	r29, 0x3e	; 62
    1a5c:	eb 97       	sbiw	r28, 0x3b	; 59
    1a5e:	0f b6       	in	r0, 0x3f	; 63
    1a60:	f8 94       	cli
    1a62:	de bf       	out	0x3e, r29	; 62
    1a64:	0f be       	out	0x3f, r0	; 63
    1a66:	cd bf       	out	0x3d, r28	; 61
    1a68:	9f ab       	std	Y+55, r25	; 0x37
    1a6a:	8e ab       	std	Y+54, r24	; 0x36
    1a6c:	79 af       	std	Y+57, r23	; 0x39
    1a6e:	68 af       	std	Y+56, r22	; 0x38
    1a70:	5b af       	std	Y+59, r21	; 0x3b
    1a72:	4a af       	std	Y+58, r20	; 0x3a
    1a74:	84 e1       	ldi	r24, 0x14	; 20
    1a76:	ef ec       	ldi	r30, 0xCF	; 207
    1a78:	f1 e0       	ldi	r31, 0x01	; 1
    1a7a:	de 01       	movw	r26, r28
    1a7c:	12 96       	adiw	r26, 0x02	; 2
    1a7e:	01 90       	ld	r0, Z+
    1a80:	0d 92       	st	X+, r0
    1a82:	8a 95       	dec	r24
    1a84:	e1 f7       	brne	.-8      	; 0x1a7e <bmp2_compute_meas_time+0x2a>
    1a86:	80 e2       	ldi	r24, 0x20	; 32
    1a88:	e3 ee       	ldi	r30, 0xE3	; 227
    1a8a:	f1 e0       	ldi	r31, 0x01	; 1
    1a8c:	de 01       	movw	r26, r28
    1a8e:	56 96       	adiw	r26, 0x16	; 22
    1a90:	01 90       	ld	r0, Z+
    1a92:	0d 92       	st	X+, r0
    1a94:	8a 95       	dec	r24
    1a96:	e1 f7       	brne	.-8      	; 0x1a90 <bmp2_compute_meas_time+0x3c>
    1a98:	8a ad       	ldd	r24, Y+58	; 0x3a
    1a9a:	9b ad       	ldd	r25, Y+59	; 0x3b
    1a9c:	0e 94 bf 0d 	call	0x1b7e	; 0x1b7e <null_ptr_check>
    1aa0:	89 83       	std	Y+1, r24	; 0x01
    1aa2:	89 81       	ldd	r24, Y+1	; 0x01
    1aa4:	88 23       	and	r24, r24
    1aa6:	09 f0       	breq	.+2      	; 0x1aaa <bmp2_compute_meas_time+0x56>
    1aa8:	5e c0       	rjmp	.+188    	; 0x1b66 <bmp2_compute_meas_time+0x112>
    1aaa:	88 ad       	ldd	r24, Y+56	; 0x38
    1aac:	99 ad       	ldd	r25, Y+57	; 0x39
    1aae:	89 2b       	or	r24, r25
    1ab0:	09 f4       	brne	.+2      	; 0x1ab4 <bmp2_compute_meas_time+0x60>
    1ab2:	59 c0       	rjmp	.+178    	; 0x1b66 <bmp2_compute_meas_time+0x112>
    1ab4:	8a ad       	ldd	r24, Y+58	; 0x3a
    1ab6:	9b ad       	ldd	r25, Y+59	; 0x3b
    1ab8:	fc 01       	movw	r30, r24
    1aba:	83 85       	ldd	r24, Z+11	; 0x0b
    1abc:	83 30       	cpi	r24, 0x03	; 3
    1abe:	b1 f5       	brne	.+108    	; 0x1b2c <bmp2_compute_meas_time+0xd8>
    1ac0:	88 ad       	ldd	r24, Y+56	; 0x38
    1ac2:	99 ad       	ldd	r25, Y+57	; 0x39
    1ac4:	fc 01       	movw	r30, r24
    1ac6:	83 81       	ldd	r24, Z+3	; 0x03
    1ac8:	88 2f       	mov	r24, r24
    1aca:	90 e0       	ldi	r25, 0x00	; 0
    1acc:	88 0f       	add	r24, r24
    1ace:	99 1f       	adc	r25, r25
    1ad0:	88 0f       	add	r24, r24
    1ad2:	99 1f       	adc	r25, r25
    1ad4:	9e 01       	movw	r18, r28
    1ad6:	2f 5f       	subi	r18, 0xFF	; 255
    1ad8:	3f 4f       	sbci	r19, 0xFF	; 255
    1ada:	82 0f       	add	r24, r18
    1adc:	93 1f       	adc	r25, r19
    1ade:	01 96       	adiw	r24, 0x01	; 1
    1ae0:	fc 01       	movw	r30, r24
    1ae2:	20 81       	ld	r18, Z
    1ae4:	31 81       	ldd	r19, Z+1	; 0x01
    1ae6:	42 81       	ldd	r20, Z+2	; 0x02
    1ae8:	53 81       	ldd	r21, Z+3	; 0x03
    1aea:	88 ad       	ldd	r24, Y+56	; 0x38
    1aec:	99 ad       	ldd	r25, Y+57	; 0x39
    1aee:	fc 01       	movw	r30, r24
    1af0:	82 81       	ldd	r24, Z+2	; 0x02
    1af2:	88 2f       	mov	r24, r24
    1af4:	90 e0       	ldi	r25, 0x00	; 0
    1af6:	88 0f       	add	r24, r24
    1af8:	99 1f       	adc	r25, r25
    1afa:	88 0f       	add	r24, r24
    1afc:	99 1f       	adc	r25, r25
    1afe:	be 01       	movw	r22, r28
    1b00:	6f 5f       	subi	r22, 0xFF	; 255
    1b02:	7f 4f       	sbci	r23, 0xFF	; 255
    1b04:	86 0f       	add	r24, r22
    1b06:	97 1f       	adc	r25, r23
    1b08:	45 96       	adiw	r24, 0x15	; 21
    1b0a:	fc 01       	movw	r30, r24
    1b0c:	80 81       	ld	r24, Z
    1b0e:	91 81       	ldd	r25, Z+1	; 0x01
    1b10:	a2 81       	ldd	r26, Z+2	; 0x02
    1b12:	b3 81       	ldd	r27, Z+3	; 0x03
    1b14:	82 0f       	add	r24, r18
    1b16:	93 1f       	adc	r25, r19
    1b18:	a4 1f       	adc	r26, r20
    1b1a:	b5 1f       	adc	r27, r21
    1b1c:	2e a9       	ldd	r18, Y+54	; 0x36
    1b1e:	3f a9       	ldd	r19, Y+55	; 0x37
    1b20:	f9 01       	movw	r30, r18
    1b22:	80 83       	st	Z, r24
    1b24:	91 83       	std	Z+1, r25	; 0x01
    1b26:	a2 83       	std	Z+2, r26	; 0x02
    1b28:	b3 83       	std	Z+3, r27	; 0x03
    1b2a:	1f c0       	rjmp	.+62     	; 0x1b6a <bmp2_compute_meas_time+0x116>
    1b2c:	88 ad       	ldd	r24, Y+56	; 0x38
    1b2e:	99 ad       	ldd	r25, Y+57	; 0x39
    1b30:	fc 01       	movw	r30, r24
    1b32:	83 81       	ldd	r24, Z+3	; 0x03
    1b34:	88 2f       	mov	r24, r24
    1b36:	90 e0       	ldi	r25, 0x00	; 0
    1b38:	88 0f       	add	r24, r24
    1b3a:	99 1f       	adc	r25, r25
    1b3c:	88 0f       	add	r24, r24
    1b3e:	99 1f       	adc	r25, r25
    1b40:	9e 01       	movw	r18, r28
    1b42:	2f 5f       	subi	r18, 0xFF	; 255
    1b44:	3f 4f       	sbci	r19, 0xFF	; 255
    1b46:	82 0f       	add	r24, r18
    1b48:	93 1f       	adc	r25, r19
    1b4a:	01 96       	adiw	r24, 0x01	; 1
    1b4c:	fc 01       	movw	r30, r24
    1b4e:	80 81       	ld	r24, Z
    1b50:	91 81       	ldd	r25, Z+1	; 0x01
    1b52:	a2 81       	ldd	r26, Z+2	; 0x02
    1b54:	b3 81       	ldd	r27, Z+3	; 0x03
    1b56:	2e a9       	ldd	r18, Y+54	; 0x36
    1b58:	3f a9       	ldd	r19, Y+55	; 0x37
    1b5a:	f9 01       	movw	r30, r18
    1b5c:	80 83       	st	Z, r24
    1b5e:	91 83       	std	Z+1, r25	; 0x01
    1b60:	a2 83       	std	Z+2, r26	; 0x02
    1b62:	b3 83       	std	Z+3, r27	; 0x03
    1b64:	02 c0       	rjmp	.+4      	; 0x1b6a <bmp2_compute_meas_time+0x116>
    1b66:	8f ef       	ldi	r24, 0xFF	; 255
    1b68:	89 83       	std	Y+1, r24	; 0x01
    1b6a:	89 81       	ldd	r24, Y+1	; 0x01
    1b6c:	eb 96       	adiw	r28, 0x3b	; 59
    1b6e:	0f b6       	in	r0, 0x3f	; 63
    1b70:	f8 94       	cli
    1b72:	de bf       	out	0x3e, r29	; 62
    1b74:	0f be       	out	0x3f, r0	; 63
    1b76:	cd bf       	out	0x3d, r28	; 61
    1b78:	df 91       	pop	r29
    1b7a:	cf 91       	pop	r28
    1b7c:	08 95       	ret

00001b7e <null_ptr_check>:
    1b7e:	cf 93       	push	r28
    1b80:	df 93       	push	r29
    1b82:	00 d0       	rcall	.+0      	; 0x1b84 <null_ptr_check+0x6>
    1b84:	1f 92       	push	r1
    1b86:	cd b7       	in	r28, 0x3d	; 61
    1b88:	de b7       	in	r29, 0x3e	; 62
    1b8a:	9b 83       	std	Y+3, r25	; 0x03
    1b8c:	8a 83       	std	Y+2, r24	; 0x02
    1b8e:	8a 81       	ldd	r24, Y+2	; 0x02
    1b90:	9b 81       	ldd	r25, Y+3	; 0x03
    1b92:	89 2b       	or	r24, r25
    1b94:	a9 f0       	breq	.+42     	; 0x1bc0 <null_ptr_check+0x42>
    1b96:	8a 81       	ldd	r24, Y+2	; 0x02
    1b98:	9b 81       	ldd	r25, Y+3	; 0x03
    1b9a:	fc 01       	movw	r30, r24
    1b9c:	85 81       	ldd	r24, Z+5	; 0x05
    1b9e:	96 81       	ldd	r25, Z+6	; 0x06
    1ba0:	89 2b       	or	r24, r25
    1ba2:	71 f0       	breq	.+28     	; 0x1bc0 <null_ptr_check+0x42>
    1ba4:	8a 81       	ldd	r24, Y+2	; 0x02
    1ba6:	9b 81       	ldd	r25, Y+3	; 0x03
    1ba8:	fc 01       	movw	r30, r24
    1baa:	87 81       	ldd	r24, Z+7	; 0x07
    1bac:	90 85       	ldd	r25, Z+8	; 0x08
    1bae:	89 2b       	or	r24, r25
    1bb0:	39 f0       	breq	.+14     	; 0x1bc0 <null_ptr_check+0x42>
    1bb2:	8a 81       	ldd	r24, Y+2	; 0x02
    1bb4:	9b 81       	ldd	r25, Y+3	; 0x03
    1bb6:	fc 01       	movw	r30, r24
    1bb8:	81 85       	ldd	r24, Z+9	; 0x09
    1bba:	92 85       	ldd	r25, Z+10	; 0x0a
    1bbc:	89 2b       	or	r24, r25
    1bbe:	19 f4       	brne	.+6      	; 0x1bc6 <null_ptr_check+0x48>
    1bc0:	8f ef       	ldi	r24, 0xFF	; 255
    1bc2:	89 83       	std	Y+1, r24	; 0x01
    1bc4:	01 c0       	rjmp	.+2      	; 0x1bc8 <null_ptr_check+0x4a>
    1bc6:	19 82       	std	Y+1, r1	; 0x01
    1bc8:	89 81       	ldd	r24, Y+1	; 0x01
    1bca:	0f 90       	pop	r0
    1bcc:	0f 90       	pop	r0
    1bce:	0f 90       	pop	r0
    1bd0:	df 91       	pop	r29
    1bd2:	cf 91       	pop	r28
    1bd4:	08 95       	ret

00001bd6 <interleave_data>:
    1bd6:	0f 93       	push	r16
    1bd8:	1f 93       	push	r17
    1bda:	cf 93       	push	r28
    1bdc:	df 93       	push	r29
    1bde:	cd b7       	in	r28, 0x3d	; 61
    1be0:	de b7       	in	r29, 0x3e	; 62
    1be2:	2e 97       	sbiw	r28, 0x0e	; 14
    1be4:	0f b6       	in	r0, 0x3f	; 63
    1be6:	f8 94       	cli
    1be8:	de bf       	out	0x3e, r29	; 62
    1bea:	0f be       	out	0x3f, r0	; 63
    1bec:	cd bf       	out	0x3d, r28	; 61
    1bee:	9e 83       	std	Y+6, r25	; 0x06
    1bf0:	8d 83       	std	Y+5, r24	; 0x05
    1bf2:	78 87       	std	Y+8, r23	; 0x08
    1bf4:	6f 83       	std	Y+7, r22	; 0x07
    1bf6:	5a 87       	std	Y+10, r21	; 0x0a
    1bf8:	49 87       	std	Y+9, r20	; 0x09
    1bfa:	0b 87       	std	Y+11, r16	; 0x0b
    1bfc:	1c 87       	std	Y+12, r17	; 0x0c
    1bfe:	2d 87       	std	Y+13, r18	; 0x0d
    1c00:	3e 87       	std	Y+14, r19	; 0x0e
    1c02:	81 e0       	ldi	r24, 0x01	; 1
    1c04:	90 e0       	ldi	r25, 0x00	; 0
    1c06:	a0 e0       	ldi	r26, 0x00	; 0
    1c08:	b0 e0       	ldi	r27, 0x00	; 0
    1c0a:	89 83       	std	Y+1, r24	; 0x01
    1c0c:	9a 83       	std	Y+2, r25	; 0x02
    1c0e:	ab 83       	std	Y+3, r26	; 0x03
    1c10:	bc 83       	std	Y+4, r27	; 0x04
    1c12:	30 c0       	rjmp	.+96     	; 0x1c74 <interleave_data+0x9e>
    1c14:	89 81       	ldd	r24, Y+1	; 0x01
    1c16:	9a 81       	ldd	r25, Y+2	; 0x02
    1c18:	88 0f       	add	r24, r24
    1c1a:	99 1f       	adc	r25, r25
    1c1c:	01 97       	sbiw	r24, 0x01	; 1
    1c1e:	2f 81       	ldd	r18, Y+7	; 0x07
    1c20:	38 85       	ldd	r19, Y+8	; 0x08
    1c22:	82 0f       	add	r24, r18
    1c24:	93 1f       	adc	r25, r19
    1c26:	29 81       	ldd	r18, Y+1	; 0x01
    1c28:	3a 81       	ldd	r19, Y+2	; 0x02
    1c2a:	4d 81       	ldd	r20, Y+5	; 0x05
    1c2c:	5e 81       	ldd	r21, Y+6	; 0x06
    1c2e:	24 0f       	add	r18, r20
    1c30:	35 1f       	adc	r19, r21
    1c32:	f9 01       	movw	r30, r18
    1c34:	20 81       	ld	r18, Z
    1c36:	fc 01       	movw	r30, r24
    1c38:	20 83       	st	Z, r18
    1c3a:	89 81       	ldd	r24, Y+1	; 0x01
    1c3c:	9a 81       	ldd	r25, Y+2	; 0x02
    1c3e:	88 0f       	add	r24, r24
    1c40:	99 1f       	adc	r25, r25
    1c42:	2f 81       	ldd	r18, Y+7	; 0x07
    1c44:	38 85       	ldd	r19, Y+8	; 0x08
    1c46:	82 0f       	add	r24, r18
    1c48:	93 1f       	adc	r25, r19
    1c4a:	29 81       	ldd	r18, Y+1	; 0x01
    1c4c:	3a 81       	ldd	r19, Y+2	; 0x02
    1c4e:	49 85       	ldd	r20, Y+9	; 0x09
    1c50:	5a 85       	ldd	r21, Y+10	; 0x0a
    1c52:	24 0f       	add	r18, r20
    1c54:	35 1f       	adc	r19, r21
    1c56:	f9 01       	movw	r30, r18
    1c58:	20 81       	ld	r18, Z
    1c5a:	fc 01       	movw	r30, r24
    1c5c:	20 83       	st	Z, r18
    1c5e:	89 81       	ldd	r24, Y+1	; 0x01
    1c60:	9a 81       	ldd	r25, Y+2	; 0x02
    1c62:	ab 81       	ldd	r26, Y+3	; 0x03
    1c64:	bc 81       	ldd	r27, Y+4	; 0x04
    1c66:	01 96       	adiw	r24, 0x01	; 1
    1c68:	a1 1d       	adc	r26, r1
    1c6a:	b1 1d       	adc	r27, r1
    1c6c:	89 83       	std	Y+1, r24	; 0x01
    1c6e:	9a 83       	std	Y+2, r25	; 0x02
    1c70:	ab 83       	std	Y+3, r26	; 0x03
    1c72:	bc 83       	std	Y+4, r27	; 0x04
    1c74:	29 81       	ldd	r18, Y+1	; 0x01
    1c76:	3a 81       	ldd	r19, Y+2	; 0x02
    1c78:	4b 81       	ldd	r20, Y+3	; 0x03
    1c7a:	5c 81       	ldd	r21, Y+4	; 0x04
    1c7c:	8b 85       	ldd	r24, Y+11	; 0x0b
    1c7e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1c80:	ad 85       	ldd	r26, Y+13	; 0x0d
    1c82:	be 85       	ldd	r27, Y+14	; 0x0e
    1c84:	28 17       	cp	r18, r24
    1c86:	39 07       	cpc	r19, r25
    1c88:	4a 07       	cpc	r20, r26
    1c8a:	5b 07       	cpc	r21, r27
    1c8c:	18 f2       	brcs	.-122    	; 0x1c14 <interleave_data+0x3e>
    1c8e:	00 00       	nop
    1c90:	2e 96       	adiw	r28, 0x0e	; 14
    1c92:	0f b6       	in	r0, 0x3f	; 63
    1c94:	f8 94       	cli
    1c96:	de bf       	out	0x3e, r29	; 62
    1c98:	0f be       	out	0x3f, r0	; 63
    1c9a:	cd bf       	out	0x3d, r28	; 61
    1c9c:	df 91       	pop	r29
    1c9e:	cf 91       	pop	r28
    1ca0:	1f 91       	pop	r17
    1ca2:	0f 91       	pop	r16
    1ca4:	08 95       	ret

00001ca6 <get_calib_param>:
    1ca6:	0f 93       	push	r16
    1ca8:	1f 93       	push	r17
    1caa:	cf 93       	push	r28
    1cac:	df 93       	push	r29
    1cae:	cd b7       	in	r28, 0x3d	; 61
    1cb0:	de b7       	in	r29, 0x3e	; 62
    1cb2:	6c 97       	sbiw	r28, 0x1c	; 28
    1cb4:	0f b6       	in	r0, 0x3f	; 63
    1cb6:	f8 94       	cli
    1cb8:	de bf       	out	0x3e, r29	; 62
    1cba:	0f be       	out	0x3f, r0	; 63
    1cbc:	cd bf       	out	0x3d, r28	; 61
    1cbe:	9c 8f       	std	Y+28, r25	; 0x1c
    1cc0:	8b 8f       	std	Y+27, r24	; 0x1b
    1cc2:	29 e1       	ldi	r18, 0x19	; 25
    1cc4:	ce 01       	movw	r24, r28
    1cc6:	02 96       	adiw	r24, 0x02	; 2
    1cc8:	fc 01       	movw	r30, r24
    1cca:	32 2f       	mov	r19, r18
    1ccc:	11 92       	st	Z+, r1
    1cce:	3a 95       	dec	r19
    1cd0:	e9 f7       	brne	.-6      	; 0x1ccc <get_calib_param+0x26>
    1cd2:	2b 8d       	ldd	r18, Y+27	; 0x1b
    1cd4:	3c 8d       	ldd	r19, Y+28	; 0x1c
    1cd6:	ce 01       	movw	r24, r28
    1cd8:	02 96       	adiw	r24, 0x02	; 2
    1cda:	89 01       	movw	r16, r18
    1cdc:	29 e1       	ldi	r18, 0x19	; 25
    1cde:	30 e0       	ldi	r19, 0x00	; 0
    1ce0:	40 e0       	ldi	r20, 0x00	; 0
    1ce2:	50 e0       	ldi	r21, 0x00	; 0
    1ce4:	bc 01       	movw	r22, r24
    1ce6:	88 e8       	ldi	r24, 0x88	; 136
    1ce8:	0e 94 20 0a 	call	0x1440	; 0x1440 <bmp2_get_regs>
    1cec:	89 83       	std	Y+1, r24	; 0x01
    1cee:	89 81       	ldd	r24, Y+1	; 0x01
    1cf0:	88 23       	and	r24, r24
    1cf2:	09 f0       	breq	.+2      	; 0x1cf6 <get_calib_param+0x50>
    1cf4:	c4 c0       	rjmp	.+392    	; 0x1e7e <get_calib_param+0x1d8>
    1cf6:	8b 81       	ldd	r24, Y+3	; 0x03
    1cf8:	88 2f       	mov	r24, r24
    1cfa:	90 e0       	ldi	r25, 0x00	; 0
    1cfc:	38 2f       	mov	r19, r24
    1cfe:	22 27       	eor	r18, r18
    1d00:	8a 81       	ldd	r24, Y+2	; 0x02
    1d02:	88 2f       	mov	r24, r24
    1d04:	90 e0       	ldi	r25, 0x00	; 0
    1d06:	28 2b       	or	r18, r24
    1d08:	39 2b       	or	r19, r25
    1d0a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1d0c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1d0e:	fc 01       	movw	r30, r24
    1d10:	35 87       	std	Z+13, r19	; 0x0d
    1d12:	24 87       	std	Z+12, r18	; 0x0c
    1d14:	8d 81       	ldd	r24, Y+5	; 0x05
    1d16:	88 2f       	mov	r24, r24
    1d18:	90 e0       	ldi	r25, 0x00	; 0
    1d1a:	38 2f       	mov	r19, r24
    1d1c:	22 27       	eor	r18, r18
    1d1e:	8c 81       	ldd	r24, Y+4	; 0x04
    1d20:	88 2f       	mov	r24, r24
    1d22:	90 e0       	ldi	r25, 0x00	; 0
    1d24:	82 2b       	or	r24, r18
    1d26:	93 2b       	or	r25, r19
    1d28:	9c 01       	movw	r18, r24
    1d2a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1d2c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1d2e:	fc 01       	movw	r30, r24
    1d30:	37 87       	std	Z+15, r19	; 0x0f
    1d32:	26 87       	std	Z+14, r18	; 0x0e
    1d34:	8f 81       	ldd	r24, Y+7	; 0x07
    1d36:	88 2f       	mov	r24, r24
    1d38:	90 e0       	ldi	r25, 0x00	; 0
    1d3a:	38 2f       	mov	r19, r24
    1d3c:	22 27       	eor	r18, r18
    1d3e:	8e 81       	ldd	r24, Y+6	; 0x06
    1d40:	88 2f       	mov	r24, r24
    1d42:	90 e0       	ldi	r25, 0x00	; 0
    1d44:	82 2b       	or	r24, r18
    1d46:	93 2b       	or	r25, r19
    1d48:	9c 01       	movw	r18, r24
    1d4a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1d4c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1d4e:	fc 01       	movw	r30, r24
    1d50:	31 8b       	std	Z+17, r19	; 0x11
    1d52:	20 8b       	std	Z+16, r18	; 0x10
    1d54:	89 85       	ldd	r24, Y+9	; 0x09
    1d56:	88 2f       	mov	r24, r24
    1d58:	90 e0       	ldi	r25, 0x00	; 0
    1d5a:	38 2f       	mov	r19, r24
    1d5c:	22 27       	eor	r18, r18
    1d5e:	88 85       	ldd	r24, Y+8	; 0x08
    1d60:	88 2f       	mov	r24, r24
    1d62:	90 e0       	ldi	r25, 0x00	; 0
    1d64:	28 2b       	or	r18, r24
    1d66:	39 2b       	or	r19, r25
    1d68:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1d6a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1d6c:	fc 01       	movw	r30, r24
    1d6e:	33 8b       	std	Z+19, r19	; 0x13
    1d70:	22 8b       	std	Z+18, r18	; 0x12
    1d72:	8b 85       	ldd	r24, Y+11	; 0x0b
    1d74:	88 2f       	mov	r24, r24
    1d76:	90 e0       	ldi	r25, 0x00	; 0
    1d78:	38 2f       	mov	r19, r24
    1d7a:	22 27       	eor	r18, r18
    1d7c:	8a 85       	ldd	r24, Y+10	; 0x0a
    1d7e:	88 2f       	mov	r24, r24
    1d80:	90 e0       	ldi	r25, 0x00	; 0
    1d82:	82 2b       	or	r24, r18
    1d84:	93 2b       	or	r25, r19
    1d86:	9c 01       	movw	r18, r24
    1d88:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1d8a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1d8c:	fc 01       	movw	r30, r24
    1d8e:	35 8b       	std	Z+21, r19	; 0x15
    1d90:	24 8b       	std	Z+20, r18	; 0x14
    1d92:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d94:	88 2f       	mov	r24, r24
    1d96:	90 e0       	ldi	r25, 0x00	; 0
    1d98:	38 2f       	mov	r19, r24
    1d9a:	22 27       	eor	r18, r18
    1d9c:	8c 85       	ldd	r24, Y+12	; 0x0c
    1d9e:	88 2f       	mov	r24, r24
    1da0:	90 e0       	ldi	r25, 0x00	; 0
    1da2:	82 2b       	or	r24, r18
    1da4:	93 2b       	or	r25, r19
    1da6:	9c 01       	movw	r18, r24
    1da8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1daa:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1dac:	fc 01       	movw	r30, r24
    1dae:	37 8b       	std	Z+23, r19	; 0x17
    1db0:	26 8b       	std	Z+22, r18	; 0x16
    1db2:	8f 85       	ldd	r24, Y+15	; 0x0f
    1db4:	88 2f       	mov	r24, r24
    1db6:	90 e0       	ldi	r25, 0x00	; 0
    1db8:	38 2f       	mov	r19, r24
    1dba:	22 27       	eor	r18, r18
    1dbc:	8e 85       	ldd	r24, Y+14	; 0x0e
    1dbe:	88 2f       	mov	r24, r24
    1dc0:	90 e0       	ldi	r25, 0x00	; 0
    1dc2:	82 2b       	or	r24, r18
    1dc4:	93 2b       	or	r25, r19
    1dc6:	9c 01       	movw	r18, r24
    1dc8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1dca:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1dcc:	fc 01       	movw	r30, r24
    1dce:	31 8f       	std	Z+25, r19	; 0x19
    1dd0:	20 8f       	std	Z+24, r18	; 0x18
    1dd2:	89 89       	ldd	r24, Y+17	; 0x11
    1dd4:	88 2f       	mov	r24, r24
    1dd6:	90 e0       	ldi	r25, 0x00	; 0
    1dd8:	38 2f       	mov	r19, r24
    1dda:	22 27       	eor	r18, r18
    1ddc:	88 89       	ldd	r24, Y+16	; 0x10
    1dde:	88 2f       	mov	r24, r24
    1de0:	90 e0       	ldi	r25, 0x00	; 0
    1de2:	82 2b       	or	r24, r18
    1de4:	93 2b       	or	r25, r19
    1de6:	9c 01       	movw	r18, r24
    1de8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1dea:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1dec:	fc 01       	movw	r30, r24
    1dee:	33 8f       	std	Z+27, r19	; 0x1b
    1df0:	22 8f       	std	Z+26, r18	; 0x1a
    1df2:	8b 89       	ldd	r24, Y+19	; 0x13
    1df4:	88 2f       	mov	r24, r24
    1df6:	90 e0       	ldi	r25, 0x00	; 0
    1df8:	38 2f       	mov	r19, r24
    1dfa:	22 27       	eor	r18, r18
    1dfc:	8a 89       	ldd	r24, Y+18	; 0x12
    1dfe:	88 2f       	mov	r24, r24
    1e00:	90 e0       	ldi	r25, 0x00	; 0
    1e02:	82 2b       	or	r24, r18
    1e04:	93 2b       	or	r25, r19
    1e06:	9c 01       	movw	r18, r24
    1e08:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1e0a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1e0c:	fc 01       	movw	r30, r24
    1e0e:	35 8f       	std	Z+29, r19	; 0x1d
    1e10:	24 8f       	std	Z+28, r18	; 0x1c
    1e12:	8d 89       	ldd	r24, Y+21	; 0x15
    1e14:	88 2f       	mov	r24, r24
    1e16:	90 e0       	ldi	r25, 0x00	; 0
    1e18:	38 2f       	mov	r19, r24
    1e1a:	22 27       	eor	r18, r18
    1e1c:	8c 89       	ldd	r24, Y+20	; 0x14
    1e1e:	88 2f       	mov	r24, r24
    1e20:	90 e0       	ldi	r25, 0x00	; 0
    1e22:	82 2b       	or	r24, r18
    1e24:	93 2b       	or	r25, r19
    1e26:	9c 01       	movw	r18, r24
    1e28:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1e2a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1e2c:	fc 01       	movw	r30, r24
    1e2e:	37 8f       	std	Z+31, r19	; 0x1f
    1e30:	26 8f       	std	Z+30, r18	; 0x1e
    1e32:	8f 89       	ldd	r24, Y+23	; 0x17
    1e34:	88 2f       	mov	r24, r24
    1e36:	90 e0       	ldi	r25, 0x00	; 0
    1e38:	38 2f       	mov	r19, r24
    1e3a:	22 27       	eor	r18, r18
    1e3c:	8e 89       	ldd	r24, Y+22	; 0x16
    1e3e:	88 2f       	mov	r24, r24
    1e40:	90 e0       	ldi	r25, 0x00	; 0
    1e42:	82 2b       	or	r24, r18
    1e44:	93 2b       	or	r25, r19
    1e46:	9c 01       	movw	r18, r24
    1e48:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1e4a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1e4c:	fc 01       	movw	r30, r24
    1e4e:	31 a3       	std	Z+33, r19	; 0x21
    1e50:	20 a3       	std	Z+32, r18	; 0x20
    1e52:	89 8d       	ldd	r24, Y+25	; 0x19
    1e54:	88 2f       	mov	r24, r24
    1e56:	90 e0       	ldi	r25, 0x00	; 0
    1e58:	38 2f       	mov	r19, r24
    1e5a:	22 27       	eor	r18, r18
    1e5c:	88 8d       	ldd	r24, Y+24	; 0x18
    1e5e:	88 2f       	mov	r24, r24
    1e60:	90 e0       	ldi	r25, 0x00	; 0
    1e62:	82 2b       	or	r24, r18
    1e64:	93 2b       	or	r25, r19
    1e66:	9c 01       	movw	r18, r24
    1e68:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1e6a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1e6c:	fc 01       	movw	r30, r24
    1e6e:	33 a3       	std	Z+35, r19	; 0x23
    1e70:	22 a3       	std	Z+34, r18	; 0x22
    1e72:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1e74:	28 2f       	mov	r18, r24
    1e76:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1e78:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1e7a:	fc 01       	movw	r30, r24
    1e7c:	24 a3       	std	Z+36, r18	; 0x24
    1e7e:	89 81       	ldd	r24, Y+1	; 0x01
    1e80:	6c 96       	adiw	r28, 0x1c	; 28
    1e82:	0f b6       	in	r0, 0x3f	; 63
    1e84:	f8 94       	cli
    1e86:	de bf       	out	0x3e, r29	; 62
    1e88:	0f be       	out	0x3f, r0	; 63
    1e8a:	cd bf       	out	0x3d, r28	; 61
    1e8c:	df 91       	pop	r29
    1e8e:	cf 91       	pop	r28
    1e90:	1f 91       	pop	r17
    1e92:	0f 91       	pop	r16
    1e94:	08 95       	ret

00001e96 <conf_sensor>:
    1e96:	0f 93       	push	r16
    1e98:	1f 93       	push	r17
    1e9a:	cf 93       	push	r28
    1e9c:	df 93       	push	r29
    1e9e:	cd b7       	in	r28, 0x3d	; 61
    1ea0:	de b7       	in	r29, 0x3e	; 62
    1ea2:	2a 97       	sbiw	r28, 0x0a	; 10
    1ea4:	0f b6       	in	r0, 0x3f	; 63
    1ea6:	f8 94       	cli
    1ea8:	de bf       	out	0x3e, r29	; 62
    1eaa:	0f be       	out	0x3f, r0	; 63
    1eac:	cd bf       	out	0x3d, r28	; 61
    1eae:	8e 83       	std	Y+6, r24	; 0x06
    1eb0:	78 87       	std	Y+8, r23	; 0x08
    1eb2:	6f 83       	std	Y+7, r22	; 0x07
    1eb4:	5a 87       	std	Y+10, r21	; 0x0a
    1eb6:	49 87       	std	Y+9, r20	; 0x09
    1eb8:	1a 82       	std	Y+2, r1	; 0x02
    1eba:	1b 82       	std	Y+3, r1	; 0x03
    1ebc:	84 ef       	ldi	r24, 0xF4	; 244
    1ebe:	8c 83       	std	Y+4, r24	; 0x04
    1ec0:	85 ef       	ldi	r24, 0xF5	; 245
    1ec2:	8d 83       	std	Y+5, r24	; 0x05
    1ec4:	8f 81       	ldd	r24, Y+7	; 0x07
    1ec6:	98 85       	ldd	r25, Y+8	; 0x08
    1ec8:	89 2b       	or	r24, r25
    1eca:	09 f4       	brne	.+2      	; 0x1ece <conf_sensor+0x38>
    1ecc:	80 c0       	rjmp	.+256    	; 0x1fce <conf_sensor+0x138>
    1ece:	29 85       	ldd	r18, Y+9	; 0x09
    1ed0:	3a 85       	ldd	r19, Y+10	; 0x0a
    1ed2:	ce 01       	movw	r24, r28
    1ed4:	02 96       	adiw	r24, 0x02	; 2
    1ed6:	89 01       	movw	r16, r18
    1ed8:	22 e0       	ldi	r18, 0x02	; 2
    1eda:	30 e0       	ldi	r19, 0x00	; 0
    1edc:	40 e0       	ldi	r20, 0x00	; 0
    1ede:	50 e0       	ldi	r21, 0x00	; 0
    1ee0:	bc 01       	movw	r22, r24
    1ee2:	84 ef       	ldi	r24, 0xF4	; 244
    1ee4:	0e 94 20 0a 	call	0x1440	; 0x1440 <bmp2_get_regs>
    1ee8:	89 83       	std	Y+1, r24	; 0x01
    1eea:	89 81       	ldd	r24, Y+1	; 0x01
    1eec:	88 23       	and	r24, r24
    1eee:	09 f0       	breq	.+2      	; 0x1ef2 <conf_sensor+0x5c>
    1ef0:	70 c0       	rjmp	.+224    	; 0x1fd2 <conf_sensor+0x13c>
    1ef2:	89 85       	ldd	r24, Y+9	; 0x09
    1ef4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ef6:	0e 94 66 0b 	call	0x16cc	; 0x16cc <bmp2_soft_reset>
    1efa:	89 83       	std	Y+1, r24	; 0x01
    1efc:	89 81       	ldd	r24, Y+1	; 0x01
    1efe:	88 23       	and	r24, r24
    1f00:	09 f0       	breq	.+2      	; 0x1f04 <conf_sensor+0x6e>
    1f02:	67 c0       	rjmp	.+206    	; 0x1fd2 <conf_sensor+0x13c>
    1f04:	2f 81       	ldd	r18, Y+7	; 0x07
    1f06:	38 85       	ldd	r19, Y+8	; 0x08
    1f08:	ce 01       	movw	r24, r28
    1f0a:	02 96       	adiw	r24, 0x02	; 2
    1f0c:	b9 01       	movw	r22, r18
    1f0e:	0e 94 f5 0f 	call	0x1fea	; 0x1fea <set_os_mode>
    1f12:	8b 81       	ldd	r24, Y+3	; 0x03
    1f14:	28 2f       	mov	r18, r24
    1f16:	2f 71       	andi	r18, 0x1F	; 31
    1f18:	8f 81       	ldd	r24, Y+7	; 0x07
    1f1a:	98 85       	ldd	r25, Y+8	; 0x08
    1f1c:	fc 01       	movw	r30, r24
    1f1e:	82 81       	ldd	r24, Z+2	; 0x02
    1f20:	88 2f       	mov	r24, r24
    1f22:	90 e0       	ldi	r25, 0x00	; 0
    1f24:	88 0f       	add	r24, r24
    1f26:	99 1f       	adc	r25, r25
    1f28:	82 95       	swap	r24
    1f2a:	92 95       	swap	r25
    1f2c:	90 7f       	andi	r25, 0xF0	; 240
    1f2e:	98 27       	eor	r25, r24
    1f30:	80 7f       	andi	r24, 0xF0	; 240
    1f32:	98 27       	eor	r25, r24
    1f34:	82 2b       	or	r24, r18
    1f36:	8b 83       	std	Y+3, r24	; 0x03
    1f38:	8b 81       	ldd	r24, Y+3	; 0x03
    1f3a:	28 2f       	mov	r18, r24
    1f3c:	23 7e       	andi	r18, 0xE3	; 227
    1f3e:	8f 81       	ldd	r24, Y+7	; 0x07
    1f40:	98 85       	ldd	r25, Y+8	; 0x08
    1f42:	fc 01       	movw	r30, r24
    1f44:	84 81       	ldd	r24, Z+4	; 0x04
    1f46:	88 2f       	mov	r24, r24
    1f48:	90 e0       	ldi	r25, 0x00	; 0
    1f4a:	88 0f       	add	r24, r24
    1f4c:	99 1f       	adc	r25, r25
    1f4e:	88 0f       	add	r24, r24
    1f50:	99 1f       	adc	r25, r25
    1f52:	8c 71       	andi	r24, 0x1C	; 28
    1f54:	82 2b       	or	r24, r18
    1f56:	8b 83       	std	Y+3, r24	; 0x03
    1f58:	8b 81       	ldd	r24, Y+3	; 0x03
    1f5a:	28 2f       	mov	r18, r24
    1f5c:	2e 7f       	andi	r18, 0xFE	; 254
    1f5e:	8f 81       	ldd	r24, Y+7	; 0x07
    1f60:	98 85       	ldd	r25, Y+8	; 0x08
    1f62:	fc 01       	movw	r30, r24
    1f64:	85 81       	ldd	r24, Z+5	; 0x05
    1f66:	81 70       	andi	r24, 0x01	; 1
    1f68:	82 2b       	or	r24, r18
    1f6a:	8b 83       	std	Y+3, r24	; 0x03
    1f6c:	29 85       	ldd	r18, Y+9	; 0x09
    1f6e:	3a 85       	ldd	r19, Y+10	; 0x0a
    1f70:	be 01       	movw	r22, r28
    1f72:	6e 5f       	subi	r22, 0xFE	; 254
    1f74:	7f 4f       	sbci	r23, 0xFF	; 255
    1f76:	ce 01       	movw	r24, r28
    1f78:	04 96       	adiw	r24, 0x04	; 4
    1f7a:	89 01       	movw	r16, r18
    1f7c:	22 e0       	ldi	r18, 0x02	; 2
    1f7e:	30 e0       	ldi	r19, 0x00	; 0
    1f80:	40 e0       	ldi	r20, 0x00	; 0
    1f82:	50 e0       	ldi	r21, 0x00	; 0
    1f84:	0e 94 81 0a 	call	0x1502	; 0x1502 <bmp2_set_regs>
    1f88:	89 83       	std	Y+1, r24	; 0x01
    1f8a:	89 81       	ldd	r24, Y+1	; 0x01
    1f8c:	88 23       	and	r24, r24
    1f8e:	09 f5       	brne	.+66     	; 0x1fd2 <conf_sensor+0x13c>
    1f90:	8e 81       	ldd	r24, Y+6	; 0x06
    1f92:	88 23       	and	r24, r24
    1f94:	f1 f0       	breq	.+60     	; 0x1fd2 <conf_sensor+0x13c>
    1f96:	89 85       	ldd	r24, Y+9	; 0x09
    1f98:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f9a:	2e 81       	ldd	r18, Y+6	; 0x06
    1f9c:	fc 01       	movw	r30, r24
    1f9e:	23 87       	std	Z+11, r18	; 0x0b
    1fa0:	8a 81       	ldd	r24, Y+2	; 0x02
    1fa2:	98 2f       	mov	r25, r24
    1fa4:	9c 7f       	andi	r25, 0xFC	; 252
    1fa6:	8e 81       	ldd	r24, Y+6	; 0x06
    1fa8:	83 70       	andi	r24, 0x03	; 3
    1faa:	89 2b       	or	r24, r25
    1fac:	8a 83       	std	Y+2, r24	; 0x02
    1fae:	29 85       	ldd	r18, Y+9	; 0x09
    1fb0:	3a 85       	ldd	r19, Y+10	; 0x0a
    1fb2:	be 01       	movw	r22, r28
    1fb4:	6e 5f       	subi	r22, 0xFE	; 254
    1fb6:	7f 4f       	sbci	r23, 0xFF	; 255
    1fb8:	ce 01       	movw	r24, r28
    1fba:	04 96       	adiw	r24, 0x04	; 4
    1fbc:	89 01       	movw	r16, r18
    1fbe:	21 e0       	ldi	r18, 0x01	; 1
    1fc0:	30 e0       	ldi	r19, 0x00	; 0
    1fc2:	40 e0       	ldi	r20, 0x00	; 0
    1fc4:	50 e0       	ldi	r21, 0x00	; 0
    1fc6:	0e 94 81 0a 	call	0x1502	; 0x1502 <bmp2_set_regs>
    1fca:	89 83       	std	Y+1, r24	; 0x01
    1fcc:	02 c0       	rjmp	.+4      	; 0x1fd2 <conf_sensor+0x13c>
    1fce:	8f ef       	ldi	r24, 0xFF	; 255
    1fd0:	89 83       	std	Y+1, r24	; 0x01
    1fd2:	89 81       	ldd	r24, Y+1	; 0x01
    1fd4:	2a 96       	adiw	r28, 0x0a	; 10
    1fd6:	0f b6       	in	r0, 0x3f	; 63
    1fd8:	f8 94       	cli
    1fda:	de bf       	out	0x3e, r29	; 62
    1fdc:	0f be       	out	0x3f, r0	; 63
    1fde:	cd bf       	out	0x3d, r28	; 61
    1fe0:	df 91       	pop	r29
    1fe2:	cf 91       	pop	r28
    1fe4:	1f 91       	pop	r17
    1fe6:	0f 91       	pop	r16
    1fe8:	08 95       	ret

00001fea <set_os_mode>:
    1fea:	cf 93       	push	r28
    1fec:	df 93       	push	r29
    1fee:	00 d0       	rcall	.+0      	; 0x1ff0 <set_os_mode+0x6>
    1ff0:	00 d0       	rcall	.+0      	; 0x1ff2 <set_os_mode+0x8>
    1ff2:	cd b7       	in	r28, 0x3d	; 61
    1ff4:	de b7       	in	r29, 0x3e	; 62
    1ff6:	9a 83       	std	Y+2, r25	; 0x02
    1ff8:	89 83       	std	Y+1, r24	; 0x01
    1ffa:	7c 83       	std	Y+4, r23	; 0x04
    1ffc:	6b 83       	std	Y+3, r22	; 0x03
    1ffe:	8b 81       	ldd	r24, Y+3	; 0x03
    2000:	9c 81       	ldd	r25, Y+4	; 0x04
    2002:	fc 01       	movw	r30, r24
    2004:	83 81       	ldd	r24, Z+3	; 0x03
    2006:	88 2f       	mov	r24, r24
    2008:	90 e0       	ldi	r25, 0x00	; 0
    200a:	82 30       	cpi	r24, 0x02	; 2
    200c:	91 05       	cpc	r25, r1
    200e:	09 f4       	brne	.+2      	; 0x2012 <set_os_mode+0x28>
    2010:	3e c0       	rjmp	.+124    	; 0x208e <set_os_mode+0xa4>
    2012:	83 30       	cpi	r24, 0x03	; 3
    2014:	91 05       	cpc	r25, r1
    2016:	2c f4       	brge	.+10     	; 0x2022 <set_os_mode+0x38>
    2018:	00 97       	sbiw	r24, 0x00	; 0
    201a:	59 f0       	breq	.+22     	; 0x2032 <set_os_mode+0x48>
    201c:	01 97       	sbiw	r24, 0x01	; 1
    201e:	01 f1       	breq	.+64     	; 0x2060 <set_os_mode+0x76>
    2020:	7b c0       	rjmp	.+246    	; 0x2118 <set_os_mode+0x12e>
    2022:	83 30       	cpi	r24, 0x03	; 3
    2024:	91 05       	cpc	r25, r1
    2026:	09 f4       	brne	.+2      	; 0x202a <set_os_mode+0x40>
    2028:	49 c0       	rjmp	.+146    	; 0x20bc <set_os_mode+0xd2>
    202a:	04 97       	sbiw	r24, 0x04	; 4
    202c:	09 f4       	brne	.+2      	; 0x2030 <set_os_mode+0x46>
    202e:	5d c0       	rjmp	.+186    	; 0x20ea <set_os_mode+0x100>
    2030:	73 c0       	rjmp	.+230    	; 0x2118 <set_os_mode+0x12e>
    2032:	89 81       	ldd	r24, Y+1	; 0x01
    2034:	9a 81       	ldd	r25, Y+2	; 0x02
    2036:	fc 01       	movw	r30, r24
    2038:	80 81       	ld	r24, Z
    203a:	8f 71       	andi	r24, 0x1F	; 31
    203c:	80 62       	ori	r24, 0x20	; 32
    203e:	28 2f       	mov	r18, r24
    2040:	89 81       	ldd	r24, Y+1	; 0x01
    2042:	9a 81       	ldd	r25, Y+2	; 0x02
    2044:	fc 01       	movw	r30, r24
    2046:	20 83       	st	Z, r18
    2048:	89 81       	ldd	r24, Y+1	; 0x01
    204a:	9a 81       	ldd	r25, Y+2	; 0x02
    204c:	fc 01       	movw	r30, r24
    204e:	80 81       	ld	r24, Z
    2050:	83 7e       	andi	r24, 0xE3	; 227
    2052:	84 60       	ori	r24, 0x04	; 4
    2054:	28 2f       	mov	r18, r24
    2056:	89 81       	ldd	r24, Y+1	; 0x01
    2058:	9a 81       	ldd	r25, Y+2	; 0x02
    205a:	fc 01       	movw	r30, r24
    205c:	20 83       	st	Z, r18
    205e:	5c c0       	rjmp	.+184    	; 0x2118 <set_os_mode+0x12e>
    2060:	89 81       	ldd	r24, Y+1	; 0x01
    2062:	9a 81       	ldd	r25, Y+2	; 0x02
    2064:	fc 01       	movw	r30, r24
    2066:	80 81       	ld	r24, Z
    2068:	8f 71       	andi	r24, 0x1F	; 31
    206a:	80 62       	ori	r24, 0x20	; 32
    206c:	28 2f       	mov	r18, r24
    206e:	89 81       	ldd	r24, Y+1	; 0x01
    2070:	9a 81       	ldd	r25, Y+2	; 0x02
    2072:	fc 01       	movw	r30, r24
    2074:	20 83       	st	Z, r18
    2076:	89 81       	ldd	r24, Y+1	; 0x01
    2078:	9a 81       	ldd	r25, Y+2	; 0x02
    207a:	fc 01       	movw	r30, r24
    207c:	80 81       	ld	r24, Z
    207e:	83 7e       	andi	r24, 0xE3	; 227
    2080:	88 60       	ori	r24, 0x08	; 8
    2082:	28 2f       	mov	r18, r24
    2084:	89 81       	ldd	r24, Y+1	; 0x01
    2086:	9a 81       	ldd	r25, Y+2	; 0x02
    2088:	fc 01       	movw	r30, r24
    208a:	20 83       	st	Z, r18
    208c:	45 c0       	rjmp	.+138    	; 0x2118 <set_os_mode+0x12e>
    208e:	89 81       	ldd	r24, Y+1	; 0x01
    2090:	9a 81       	ldd	r25, Y+2	; 0x02
    2092:	fc 01       	movw	r30, r24
    2094:	80 81       	ld	r24, Z
    2096:	8f 71       	andi	r24, 0x1F	; 31
    2098:	80 62       	ori	r24, 0x20	; 32
    209a:	28 2f       	mov	r18, r24
    209c:	89 81       	ldd	r24, Y+1	; 0x01
    209e:	9a 81       	ldd	r25, Y+2	; 0x02
    20a0:	fc 01       	movw	r30, r24
    20a2:	20 83       	st	Z, r18
    20a4:	89 81       	ldd	r24, Y+1	; 0x01
    20a6:	9a 81       	ldd	r25, Y+2	; 0x02
    20a8:	fc 01       	movw	r30, r24
    20aa:	80 81       	ld	r24, Z
    20ac:	83 7e       	andi	r24, 0xE3	; 227
    20ae:	8c 60       	ori	r24, 0x0C	; 12
    20b0:	28 2f       	mov	r18, r24
    20b2:	89 81       	ldd	r24, Y+1	; 0x01
    20b4:	9a 81       	ldd	r25, Y+2	; 0x02
    20b6:	fc 01       	movw	r30, r24
    20b8:	20 83       	st	Z, r18
    20ba:	2e c0       	rjmp	.+92     	; 0x2118 <set_os_mode+0x12e>
    20bc:	89 81       	ldd	r24, Y+1	; 0x01
    20be:	9a 81       	ldd	r25, Y+2	; 0x02
    20c0:	fc 01       	movw	r30, r24
    20c2:	80 81       	ld	r24, Z
    20c4:	8f 71       	andi	r24, 0x1F	; 31
    20c6:	80 62       	ori	r24, 0x20	; 32
    20c8:	28 2f       	mov	r18, r24
    20ca:	89 81       	ldd	r24, Y+1	; 0x01
    20cc:	9a 81       	ldd	r25, Y+2	; 0x02
    20ce:	fc 01       	movw	r30, r24
    20d0:	20 83       	st	Z, r18
    20d2:	89 81       	ldd	r24, Y+1	; 0x01
    20d4:	9a 81       	ldd	r25, Y+2	; 0x02
    20d6:	fc 01       	movw	r30, r24
    20d8:	80 81       	ld	r24, Z
    20da:	83 7e       	andi	r24, 0xE3	; 227
    20dc:	80 61       	ori	r24, 0x10	; 16
    20de:	28 2f       	mov	r18, r24
    20e0:	89 81       	ldd	r24, Y+1	; 0x01
    20e2:	9a 81       	ldd	r25, Y+2	; 0x02
    20e4:	fc 01       	movw	r30, r24
    20e6:	20 83       	st	Z, r18
    20e8:	17 c0       	rjmp	.+46     	; 0x2118 <set_os_mode+0x12e>
    20ea:	89 81       	ldd	r24, Y+1	; 0x01
    20ec:	9a 81       	ldd	r25, Y+2	; 0x02
    20ee:	fc 01       	movw	r30, r24
    20f0:	80 81       	ld	r24, Z
    20f2:	8f 71       	andi	r24, 0x1F	; 31
    20f4:	80 64       	ori	r24, 0x40	; 64
    20f6:	28 2f       	mov	r18, r24
    20f8:	89 81       	ldd	r24, Y+1	; 0x01
    20fa:	9a 81       	ldd	r25, Y+2	; 0x02
    20fc:	fc 01       	movw	r30, r24
    20fe:	20 83       	st	Z, r18
    2100:	89 81       	ldd	r24, Y+1	; 0x01
    2102:	9a 81       	ldd	r25, Y+2	; 0x02
    2104:	fc 01       	movw	r30, r24
    2106:	80 81       	ld	r24, Z
    2108:	83 7e       	andi	r24, 0xE3	; 227
    210a:	84 61       	ori	r24, 0x14	; 20
    210c:	28 2f       	mov	r18, r24
    210e:	89 81       	ldd	r24, Y+1	; 0x01
    2110:	9a 81       	ldd	r25, Y+2	; 0x02
    2112:	fc 01       	movw	r30, r24
    2114:	20 83       	st	Z, r18
    2116:	00 00       	nop
    2118:	00 00       	nop
    211a:	0f 90       	pop	r0
    211c:	0f 90       	pop	r0
    211e:	0f 90       	pop	r0
    2120:	0f 90       	pop	r0
    2122:	df 91       	pop	r29
    2124:	cf 91       	pop	r28
    2126:	08 95       	ret

00002128 <parse_sensor_data>:
    2128:	cf 93       	push	r28
    212a:	df 93       	push	r29
    212c:	cd b7       	in	r28, 0x3d	; 61
    212e:	de b7       	in	r29, 0x3e	; 62
    2130:	61 97       	sbiw	r28, 0x11	; 17
    2132:	0f b6       	in	r0, 0x3f	; 63
    2134:	f8 94       	cli
    2136:	de bf       	out	0x3e, r29	; 62
    2138:	0f be       	out	0x3f, r0	; 63
    213a:	cd bf       	out	0x3d, r28	; 61
    213c:	9f 87       	std	Y+15, r25	; 0x0f
    213e:	8e 87       	std	Y+14, r24	; 0x0e
    2140:	79 8b       	std	Y+17, r23	; 0x11
    2142:	68 8b       	std	Y+16, r22	; 0x10
    2144:	8e 85       	ldd	r24, Y+14	; 0x0e
    2146:	9f 85       	ldd	r25, Y+15	; 0x0f
    2148:	fc 01       	movw	r30, r24
    214a:	80 81       	ld	r24, Z
    214c:	88 2f       	mov	r24, r24
    214e:	90 e0       	ldi	r25, 0x00	; 0
    2150:	a0 e0       	ldi	r26, 0x00	; 0
    2152:	b0 e0       	ldi	r27, 0x00	; 0
    2154:	07 2e       	mov	r0, r23
    2156:	7c e0       	ldi	r23, 0x0C	; 12
    2158:	88 0f       	add	r24, r24
    215a:	99 1f       	adc	r25, r25
    215c:	aa 1f       	adc	r26, r26
    215e:	bb 1f       	adc	r27, r27
    2160:	7a 95       	dec	r23
    2162:	d1 f7       	brne	.-12     	; 0x2158 <parse_sensor_data+0x30>
    2164:	70 2d       	mov	r23, r0
    2166:	89 83       	std	Y+1, r24	; 0x01
    2168:	9a 83       	std	Y+2, r25	; 0x02
    216a:	ab 83       	std	Y+3, r26	; 0x03
    216c:	bc 83       	std	Y+4, r27	; 0x04
    216e:	8e 85       	ldd	r24, Y+14	; 0x0e
    2170:	9f 85       	ldd	r25, Y+15	; 0x0f
    2172:	01 96       	adiw	r24, 0x01	; 1
    2174:	fc 01       	movw	r30, r24
    2176:	80 81       	ld	r24, Z
    2178:	88 2f       	mov	r24, r24
    217a:	90 e0       	ldi	r25, 0x00	; 0
    217c:	a0 e0       	ldi	r26, 0x00	; 0
    217e:	b0 e0       	ldi	r27, 0x00	; 0
    2180:	88 0f       	add	r24, r24
    2182:	99 1f       	adc	r25, r25
    2184:	aa 1f       	adc	r26, r26
    2186:	bb 1f       	adc	r27, r27
    2188:	88 0f       	add	r24, r24
    218a:	99 1f       	adc	r25, r25
    218c:	aa 1f       	adc	r26, r26
    218e:	bb 1f       	adc	r27, r27
    2190:	88 0f       	add	r24, r24
    2192:	99 1f       	adc	r25, r25
    2194:	aa 1f       	adc	r26, r26
    2196:	bb 1f       	adc	r27, r27
    2198:	88 0f       	add	r24, r24
    219a:	99 1f       	adc	r25, r25
    219c:	aa 1f       	adc	r26, r26
    219e:	bb 1f       	adc	r27, r27
    21a0:	8d 83       	std	Y+5, r24	; 0x05
    21a2:	9e 83       	std	Y+6, r25	; 0x06
    21a4:	af 83       	std	Y+7, r26	; 0x07
    21a6:	b8 87       	std	Y+8, r27	; 0x08
    21a8:	8e 85       	ldd	r24, Y+14	; 0x0e
    21aa:	9f 85       	ldd	r25, Y+15	; 0x0f
    21ac:	02 96       	adiw	r24, 0x02	; 2
    21ae:	fc 01       	movw	r30, r24
    21b0:	80 81       	ld	r24, Z
    21b2:	82 95       	swap	r24
    21b4:	8f 70       	andi	r24, 0x0F	; 15
    21b6:	88 2f       	mov	r24, r24
    21b8:	90 e0       	ldi	r25, 0x00	; 0
    21ba:	a0 e0       	ldi	r26, 0x00	; 0
    21bc:	b0 e0       	ldi	r27, 0x00	; 0
    21be:	89 87       	std	Y+9, r24	; 0x09
    21c0:	9a 87       	std	Y+10, r25	; 0x0a
    21c2:	ab 87       	std	Y+11, r26	; 0x0b
    21c4:	bc 87       	std	Y+12, r27	; 0x0c
    21c6:	29 81       	ldd	r18, Y+1	; 0x01
    21c8:	3a 81       	ldd	r19, Y+2	; 0x02
    21ca:	4b 81       	ldd	r20, Y+3	; 0x03
    21cc:	5c 81       	ldd	r21, Y+4	; 0x04
    21ce:	8d 81       	ldd	r24, Y+5	; 0x05
    21d0:	9e 81       	ldd	r25, Y+6	; 0x06
    21d2:	af 81       	ldd	r26, Y+7	; 0x07
    21d4:	b8 85       	ldd	r27, Y+8	; 0x08
    21d6:	28 2b       	or	r18, r24
    21d8:	39 2b       	or	r19, r25
    21da:	4a 2b       	or	r20, r26
    21dc:	5b 2b       	or	r21, r27
    21de:	89 85       	ldd	r24, Y+9	; 0x09
    21e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    21e2:	ab 85       	ldd	r26, Y+11	; 0x0b
    21e4:	bc 85       	ldd	r27, Y+12	; 0x0c
    21e6:	82 2b       	or	r24, r18
    21e8:	93 2b       	or	r25, r19
    21ea:	a4 2b       	or	r26, r20
    21ec:	b5 2b       	or	r27, r21
    21ee:	28 89       	ldd	r18, Y+16	; 0x10
    21f0:	39 89       	ldd	r19, Y+17	; 0x11
    21f2:	f9 01       	movw	r30, r18
    21f4:	84 83       	std	Z+4, r24	; 0x04
    21f6:	95 83       	std	Z+5, r25	; 0x05
    21f8:	a6 83       	std	Z+6, r26	; 0x06
    21fa:	b7 83       	std	Z+7, r27	; 0x07
    21fc:	8e 85       	ldd	r24, Y+14	; 0x0e
    21fe:	9f 85       	ldd	r25, Y+15	; 0x0f
    2200:	03 96       	adiw	r24, 0x03	; 3
    2202:	fc 01       	movw	r30, r24
    2204:	80 81       	ld	r24, Z
    2206:	88 2f       	mov	r24, r24
    2208:	90 e0       	ldi	r25, 0x00	; 0
    220a:	a0 e0       	ldi	r26, 0x00	; 0
    220c:	b0 e0       	ldi	r27, 0x00	; 0
    220e:	07 2e       	mov	r0, r23
    2210:	7c e0       	ldi	r23, 0x0C	; 12
    2212:	88 0f       	add	r24, r24
    2214:	99 1f       	adc	r25, r25
    2216:	aa 1f       	adc	r26, r26
    2218:	bb 1f       	adc	r27, r27
    221a:	7a 95       	dec	r23
    221c:	d1 f7       	brne	.-12     	; 0x2212 <parse_sensor_data+0xea>
    221e:	70 2d       	mov	r23, r0
    2220:	89 83       	std	Y+1, r24	; 0x01
    2222:	9a 83       	std	Y+2, r25	; 0x02
    2224:	ab 83       	std	Y+3, r26	; 0x03
    2226:	bc 83       	std	Y+4, r27	; 0x04
    2228:	8e 85       	ldd	r24, Y+14	; 0x0e
    222a:	9f 85       	ldd	r25, Y+15	; 0x0f
    222c:	04 96       	adiw	r24, 0x04	; 4
    222e:	fc 01       	movw	r30, r24
    2230:	80 81       	ld	r24, Z
    2232:	88 2f       	mov	r24, r24
    2234:	90 e0       	ldi	r25, 0x00	; 0
    2236:	a0 e0       	ldi	r26, 0x00	; 0
    2238:	b0 e0       	ldi	r27, 0x00	; 0
    223a:	88 0f       	add	r24, r24
    223c:	99 1f       	adc	r25, r25
    223e:	aa 1f       	adc	r26, r26
    2240:	bb 1f       	adc	r27, r27
    2242:	88 0f       	add	r24, r24
    2244:	99 1f       	adc	r25, r25
    2246:	aa 1f       	adc	r26, r26
    2248:	bb 1f       	adc	r27, r27
    224a:	88 0f       	add	r24, r24
    224c:	99 1f       	adc	r25, r25
    224e:	aa 1f       	adc	r26, r26
    2250:	bb 1f       	adc	r27, r27
    2252:	88 0f       	add	r24, r24
    2254:	99 1f       	adc	r25, r25
    2256:	aa 1f       	adc	r26, r26
    2258:	bb 1f       	adc	r27, r27
    225a:	8d 83       	std	Y+5, r24	; 0x05
    225c:	9e 83       	std	Y+6, r25	; 0x06
    225e:	af 83       	std	Y+7, r26	; 0x07
    2260:	b8 87       	std	Y+8, r27	; 0x08
    2262:	8e 85       	ldd	r24, Y+14	; 0x0e
    2264:	9f 85       	ldd	r25, Y+15	; 0x0f
    2266:	05 96       	adiw	r24, 0x05	; 5
    2268:	fc 01       	movw	r30, r24
    226a:	80 81       	ld	r24, Z
    226c:	82 95       	swap	r24
    226e:	8f 70       	andi	r24, 0x0F	; 15
    2270:	88 2f       	mov	r24, r24
    2272:	90 e0       	ldi	r25, 0x00	; 0
    2274:	a0 e0       	ldi	r26, 0x00	; 0
    2276:	b0 e0       	ldi	r27, 0x00	; 0
    2278:	89 87       	std	Y+9, r24	; 0x09
    227a:	9a 87       	std	Y+10, r25	; 0x0a
    227c:	ab 87       	std	Y+11, r26	; 0x0b
    227e:	bc 87       	std	Y+12, r27	; 0x0c
    2280:	29 81       	ldd	r18, Y+1	; 0x01
    2282:	3a 81       	ldd	r19, Y+2	; 0x02
    2284:	4b 81       	ldd	r20, Y+3	; 0x03
    2286:	5c 81       	ldd	r21, Y+4	; 0x04
    2288:	8d 81       	ldd	r24, Y+5	; 0x05
    228a:	9e 81       	ldd	r25, Y+6	; 0x06
    228c:	af 81       	ldd	r26, Y+7	; 0x07
    228e:	b8 85       	ldd	r27, Y+8	; 0x08
    2290:	28 2b       	or	r18, r24
    2292:	39 2b       	or	r19, r25
    2294:	4a 2b       	or	r20, r26
    2296:	5b 2b       	or	r21, r27
    2298:	89 85       	ldd	r24, Y+9	; 0x09
    229a:	9a 85       	ldd	r25, Y+10	; 0x0a
    229c:	ab 85       	ldd	r26, Y+11	; 0x0b
    229e:	bc 85       	ldd	r27, Y+12	; 0x0c
    22a0:	82 2b       	or	r24, r18
    22a2:	93 2b       	or	r25, r19
    22a4:	a4 2b       	or	r26, r20
    22a6:	b5 2b       	or	r27, r21
    22a8:	28 89       	ldd	r18, Y+16	; 0x10
    22aa:	39 89       	ldd	r19, Y+17	; 0x11
    22ac:	f9 01       	movw	r30, r18
    22ae:	80 83       	st	Z, r24
    22b0:	91 83       	std	Z+1, r25	; 0x01
    22b2:	a2 83       	std	Z+2, r26	; 0x02
    22b4:	b3 83       	std	Z+3, r27	; 0x03
    22b6:	88 89       	ldd	r24, Y+16	; 0x10
    22b8:	99 89       	ldd	r25, Y+17	; 0x11
    22ba:	fc 01       	movw	r30, r24
    22bc:	84 81       	ldd	r24, Z+4	; 0x04
    22be:	95 81       	ldd	r25, Z+5	; 0x05
    22c0:	a6 81       	ldd	r26, Z+6	; 0x06
    22c2:	b7 81       	ldd	r27, Z+7	; 0x07
    22c4:	9c 01       	movw	r18, r24
    22c6:	ad 01       	movw	r20, r26
    22c8:	88 89       	ldd	r24, Y+16	; 0x10
    22ca:	99 89       	ldd	r25, Y+17	; 0x11
    22cc:	fc 01       	movw	r30, r24
    22ce:	80 81       	ld	r24, Z
    22d0:	91 81       	ldd	r25, Z+1	; 0x01
    22d2:	a2 81       	ldd	r26, Z+2	; 0x02
    22d4:	b3 81       	ldd	r27, Z+3	; 0x03
    22d6:	bc 01       	movw	r22, r24
    22d8:	cd 01       	movw	r24, r26
    22da:	0e 94 9b 15 	call	0x2b36	; 0x2b36 <st_check_boundaries>
    22de:	8d 87       	std	Y+13, r24	; 0x0d
    22e0:	8d 85       	ldd	r24, Y+13	; 0x0d
    22e2:	61 96       	adiw	r28, 0x11	; 17
    22e4:	0f b6       	in	r0, 0x3f	; 63
    22e6:	f8 94       	cli
    22e8:	de bf       	out	0x3e, r29	; 62
    22ea:	0f be       	out	0x3f, r0	; 63
    22ec:	cd bf       	out	0x3d, r28	; 61
    22ee:	df 91       	pop	r29
    22f0:	cf 91       	pop	r28
    22f2:	08 95       	ret

000022f4 <compensate_temperature>:
    22f4:	8f 92       	push	r8
    22f6:	9f 92       	push	r9
    22f8:	af 92       	push	r10
    22fa:	bf 92       	push	r11
    22fc:	cf 92       	push	r12
    22fe:	df 92       	push	r13
    2300:	ef 92       	push	r14
    2302:	ff 92       	push	r15
    2304:	cf 93       	push	r28
    2306:	df 93       	push	r29
    2308:	cd b7       	in	r28, 0x3d	; 61
    230a:	de b7       	in	r29, 0x3e	; 62
    230c:	63 97       	sbiw	r28, 0x13	; 19
    230e:	0f b6       	in	r0, 0x3f	; 63
    2310:	f8 94       	cli
    2312:	de bf       	out	0x3e, r29	; 62
    2314:	0f be       	out	0x3f, r0	; 63
    2316:	cd bf       	out	0x3d, r28	; 61
    2318:	9f 87       	std	Y+15, r25	; 0x0f
    231a:	8e 87       	std	Y+14, r24	; 0x0e
    231c:	79 8b       	std	Y+17, r23	; 0x11
    231e:	68 8b       	std	Y+16, r22	; 0x10
    2320:	5b 8b       	std	Y+19, r21	; 0x13
    2322:	4a 8b       	std	Y+18, r20	; 0x12
    2324:	19 82       	std	Y+1, r1	; 0x01
    2326:	88 89       	ldd	r24, Y+16	; 0x10
    2328:	99 89       	ldd	r25, Y+17	; 0x11
    232a:	fc 01       	movw	r30, r24
    232c:	80 81       	ld	r24, Z
    232e:	91 81       	ldd	r25, Z+1	; 0x01
    2330:	a2 81       	ldd	r26, Z+2	; 0x02
    2332:	b3 81       	ldd	r27, Z+3	; 0x03
    2334:	bc 01       	movw	r22, r24
    2336:	cd 01       	movw	r24, r26
    2338:	0e 94 02 1e 	call	0x3c04	; 0x3c04 <__floatsisf>
    233c:	dc 01       	movw	r26, r24
    233e:	cb 01       	movw	r24, r22
    2340:	20 e0       	ldi	r18, 0x00	; 0
    2342:	30 e0       	ldi	r19, 0x00	; 0
    2344:	40 e8       	ldi	r20, 0x80	; 128
    2346:	56 e4       	ldi	r21, 0x46	; 70
    2348:	bc 01       	movw	r22, r24
    234a:	cd 01       	movw	r24, r26
    234c:	0e 94 58 1d 	call	0x3ab0	; 0x3ab0 <__divsf3>
    2350:	dc 01       	movw	r26, r24
    2352:	cb 01       	movw	r24, r22
    2354:	6c 01       	movw	r12, r24
    2356:	7d 01       	movw	r14, r26
    2358:	8a 89       	ldd	r24, Y+18	; 0x12
    235a:	9b 89       	ldd	r25, Y+19	; 0x13
    235c:	fc 01       	movw	r30, r24
    235e:	84 85       	ldd	r24, Z+12	; 0x0c
    2360:	95 85       	ldd	r25, Z+13	; 0x0d
    2362:	cc 01       	movw	r24, r24
    2364:	a0 e0       	ldi	r26, 0x00	; 0
    2366:	b0 e0       	ldi	r27, 0x00	; 0
    2368:	bc 01       	movw	r22, r24
    236a:	cd 01       	movw	r24, r26
    236c:	0e 94 00 1e 	call	0x3c00	; 0x3c00 <__floatunsisf>
    2370:	dc 01       	movw	r26, r24
    2372:	cb 01       	movw	r24, r22
    2374:	20 e0       	ldi	r18, 0x00	; 0
    2376:	30 e0       	ldi	r19, 0x00	; 0
    2378:	40 e8       	ldi	r20, 0x80	; 128
    237a:	54 e4       	ldi	r21, 0x44	; 68
    237c:	bc 01       	movw	r22, r24
    237e:	cd 01       	movw	r24, r26
    2380:	0e 94 58 1d 	call	0x3ab0	; 0x3ab0 <__divsf3>
    2384:	dc 01       	movw	r26, r24
    2386:	cb 01       	movw	r24, r22
    2388:	9c 01       	movw	r18, r24
    238a:	ad 01       	movw	r20, r26
    238c:	c7 01       	movw	r24, r14
    238e:	b6 01       	movw	r22, r12
    2390:	0e 94 e6 1c 	call	0x39cc	; 0x39cc <__subsf3>
    2394:	dc 01       	movw	r26, r24
    2396:	cb 01       	movw	r24, r22
    2398:	6c 01       	movw	r12, r24
    239a:	7d 01       	movw	r14, r26
    239c:	8a 89       	ldd	r24, Y+18	; 0x12
    239e:	9b 89       	ldd	r25, Y+19	; 0x13
    23a0:	fc 01       	movw	r30, r24
    23a2:	86 85       	ldd	r24, Z+14	; 0x0e
    23a4:	97 85       	ldd	r25, Z+15	; 0x0f
    23a6:	09 2e       	mov	r0, r25
    23a8:	00 0c       	add	r0, r0
    23aa:	aa 0b       	sbc	r26, r26
    23ac:	bb 0b       	sbc	r27, r27
    23ae:	bc 01       	movw	r22, r24
    23b0:	cd 01       	movw	r24, r26
    23b2:	0e 94 02 1e 	call	0x3c04	; 0x3c04 <__floatsisf>
    23b6:	dc 01       	movw	r26, r24
    23b8:	cb 01       	movw	r24, r22
    23ba:	9c 01       	movw	r18, r24
    23bc:	ad 01       	movw	r20, r26
    23be:	c7 01       	movw	r24, r14
    23c0:	b6 01       	movw	r22, r12
    23c2:	0e 94 b7 1e 	call	0x3d6e	; 0x3d6e <__mulsf3>
    23c6:	dc 01       	movw	r26, r24
    23c8:	cb 01       	movw	r24, r22
    23ca:	8e 83       	std	Y+6, r24	; 0x06
    23cc:	9f 83       	std	Y+7, r25	; 0x07
    23ce:	a8 87       	std	Y+8, r26	; 0x08
    23d0:	b9 87       	std	Y+9, r27	; 0x09
    23d2:	88 89       	ldd	r24, Y+16	; 0x10
    23d4:	99 89       	ldd	r25, Y+17	; 0x11
    23d6:	fc 01       	movw	r30, r24
    23d8:	80 81       	ld	r24, Z
    23da:	91 81       	ldd	r25, Z+1	; 0x01
    23dc:	a2 81       	ldd	r26, Z+2	; 0x02
    23de:	b3 81       	ldd	r27, Z+3	; 0x03
    23e0:	bc 01       	movw	r22, r24
    23e2:	cd 01       	movw	r24, r26
    23e4:	0e 94 02 1e 	call	0x3c04	; 0x3c04 <__floatsisf>
    23e8:	dc 01       	movw	r26, r24
    23ea:	cb 01       	movw	r24, r22
    23ec:	20 e0       	ldi	r18, 0x00	; 0
    23ee:	30 e0       	ldi	r19, 0x00	; 0
    23f0:	40 e0       	ldi	r20, 0x00	; 0
    23f2:	58 e4       	ldi	r21, 0x48	; 72
    23f4:	bc 01       	movw	r22, r24
    23f6:	cd 01       	movw	r24, r26
    23f8:	0e 94 58 1d 	call	0x3ab0	; 0x3ab0 <__divsf3>
    23fc:	dc 01       	movw	r26, r24
    23fe:	cb 01       	movw	r24, r22
    2400:	6c 01       	movw	r12, r24
    2402:	7d 01       	movw	r14, r26
    2404:	8a 89       	ldd	r24, Y+18	; 0x12
    2406:	9b 89       	ldd	r25, Y+19	; 0x13
    2408:	fc 01       	movw	r30, r24
    240a:	84 85       	ldd	r24, Z+12	; 0x0c
    240c:	95 85       	ldd	r25, Z+13	; 0x0d
    240e:	cc 01       	movw	r24, r24
    2410:	a0 e0       	ldi	r26, 0x00	; 0
    2412:	b0 e0       	ldi	r27, 0x00	; 0
    2414:	bc 01       	movw	r22, r24
    2416:	cd 01       	movw	r24, r26
    2418:	0e 94 00 1e 	call	0x3c00	; 0x3c00 <__floatunsisf>
    241c:	dc 01       	movw	r26, r24
    241e:	cb 01       	movw	r24, r22
    2420:	20 e0       	ldi	r18, 0x00	; 0
    2422:	30 e0       	ldi	r19, 0x00	; 0
    2424:	40 e0       	ldi	r20, 0x00	; 0
    2426:	56 e4       	ldi	r21, 0x46	; 70
    2428:	bc 01       	movw	r22, r24
    242a:	cd 01       	movw	r24, r26
    242c:	0e 94 58 1d 	call	0x3ab0	; 0x3ab0 <__divsf3>
    2430:	dc 01       	movw	r26, r24
    2432:	cb 01       	movw	r24, r22
    2434:	9c 01       	movw	r18, r24
    2436:	ad 01       	movw	r20, r26
    2438:	c7 01       	movw	r24, r14
    243a:	b6 01       	movw	r22, r12
    243c:	0e 94 e6 1c 	call	0x39cc	; 0x39cc <__subsf3>
    2440:	dc 01       	movw	r26, r24
    2442:	cb 01       	movw	r24, r22
    2444:	6c 01       	movw	r12, r24
    2446:	7d 01       	movw	r14, r26
    2448:	88 89       	ldd	r24, Y+16	; 0x10
    244a:	99 89       	ldd	r25, Y+17	; 0x11
    244c:	fc 01       	movw	r30, r24
    244e:	80 81       	ld	r24, Z
    2450:	91 81       	ldd	r25, Z+1	; 0x01
    2452:	a2 81       	ldd	r26, Z+2	; 0x02
    2454:	b3 81       	ldd	r27, Z+3	; 0x03
    2456:	bc 01       	movw	r22, r24
    2458:	cd 01       	movw	r24, r26
    245a:	0e 94 02 1e 	call	0x3c04	; 0x3c04 <__floatsisf>
    245e:	dc 01       	movw	r26, r24
    2460:	cb 01       	movw	r24, r22
    2462:	20 e0       	ldi	r18, 0x00	; 0
    2464:	30 e0       	ldi	r19, 0x00	; 0
    2466:	40 e0       	ldi	r20, 0x00	; 0
    2468:	58 e4       	ldi	r21, 0x48	; 72
    246a:	bc 01       	movw	r22, r24
    246c:	cd 01       	movw	r24, r26
    246e:	0e 94 58 1d 	call	0x3ab0	; 0x3ab0 <__divsf3>
    2472:	dc 01       	movw	r26, r24
    2474:	cb 01       	movw	r24, r22
    2476:	4c 01       	movw	r8, r24
    2478:	5d 01       	movw	r10, r26
    247a:	8a 89       	ldd	r24, Y+18	; 0x12
    247c:	9b 89       	ldd	r25, Y+19	; 0x13
    247e:	fc 01       	movw	r30, r24
    2480:	84 85       	ldd	r24, Z+12	; 0x0c
    2482:	95 85       	ldd	r25, Z+13	; 0x0d
    2484:	cc 01       	movw	r24, r24
    2486:	a0 e0       	ldi	r26, 0x00	; 0
    2488:	b0 e0       	ldi	r27, 0x00	; 0
    248a:	bc 01       	movw	r22, r24
    248c:	cd 01       	movw	r24, r26
    248e:	0e 94 00 1e 	call	0x3c00	; 0x3c00 <__floatunsisf>
    2492:	dc 01       	movw	r26, r24
    2494:	cb 01       	movw	r24, r22
    2496:	20 e0       	ldi	r18, 0x00	; 0
    2498:	30 e0       	ldi	r19, 0x00	; 0
    249a:	40 e0       	ldi	r20, 0x00	; 0
    249c:	56 e4       	ldi	r21, 0x46	; 70
    249e:	bc 01       	movw	r22, r24
    24a0:	cd 01       	movw	r24, r26
    24a2:	0e 94 58 1d 	call	0x3ab0	; 0x3ab0 <__divsf3>
    24a6:	dc 01       	movw	r26, r24
    24a8:	cb 01       	movw	r24, r22
    24aa:	9c 01       	movw	r18, r24
    24ac:	ad 01       	movw	r20, r26
    24ae:	c5 01       	movw	r24, r10
    24b0:	b4 01       	movw	r22, r8
    24b2:	0e 94 e6 1c 	call	0x39cc	; 0x39cc <__subsf3>
    24b6:	dc 01       	movw	r26, r24
    24b8:	cb 01       	movw	r24, r22
    24ba:	9c 01       	movw	r18, r24
    24bc:	ad 01       	movw	r20, r26
    24be:	c7 01       	movw	r24, r14
    24c0:	b6 01       	movw	r22, r12
    24c2:	0e 94 b7 1e 	call	0x3d6e	; 0x3d6e <__mulsf3>
    24c6:	dc 01       	movw	r26, r24
    24c8:	cb 01       	movw	r24, r22
    24ca:	6c 01       	movw	r12, r24
    24cc:	7d 01       	movw	r14, r26
    24ce:	8a 89       	ldd	r24, Y+18	; 0x12
    24d0:	9b 89       	ldd	r25, Y+19	; 0x13
    24d2:	fc 01       	movw	r30, r24
    24d4:	80 89       	ldd	r24, Z+16	; 0x10
    24d6:	91 89       	ldd	r25, Z+17	; 0x11
    24d8:	09 2e       	mov	r0, r25
    24da:	00 0c       	add	r0, r0
    24dc:	aa 0b       	sbc	r26, r26
    24de:	bb 0b       	sbc	r27, r27
    24e0:	bc 01       	movw	r22, r24
    24e2:	cd 01       	movw	r24, r26
    24e4:	0e 94 02 1e 	call	0x3c04	; 0x3c04 <__floatsisf>
    24e8:	dc 01       	movw	r26, r24
    24ea:	cb 01       	movw	r24, r22
    24ec:	9c 01       	movw	r18, r24
    24ee:	ad 01       	movw	r20, r26
    24f0:	c7 01       	movw	r24, r14
    24f2:	b6 01       	movw	r22, r12
    24f4:	0e 94 b7 1e 	call	0x3d6e	; 0x3d6e <__mulsf3>
    24f8:	dc 01       	movw	r26, r24
    24fa:	cb 01       	movw	r24, r22
    24fc:	8a 87       	std	Y+10, r24	; 0x0a
    24fe:	9b 87       	std	Y+11, r25	; 0x0b
    2500:	ac 87       	std	Y+12, r26	; 0x0c
    2502:	bd 87       	std	Y+13, r27	; 0x0d
    2504:	2a 85       	ldd	r18, Y+10	; 0x0a
    2506:	3b 85       	ldd	r19, Y+11	; 0x0b
    2508:	4c 85       	ldd	r20, Y+12	; 0x0c
    250a:	5d 85       	ldd	r21, Y+13	; 0x0d
    250c:	6e 81       	ldd	r22, Y+6	; 0x06
    250e:	7f 81       	ldd	r23, Y+7	; 0x07
    2510:	88 85       	ldd	r24, Y+8	; 0x08
    2512:	99 85       	ldd	r25, Y+9	; 0x09
    2514:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <__addsf3>
    2518:	dc 01       	movw	r26, r24
    251a:	cb 01       	movw	r24, r22
    251c:	bc 01       	movw	r22, r24
    251e:	cd 01       	movw	r24, r26
    2520:	0e 94 ca 1d 	call	0x3b94	; 0x3b94 <__fixsfsi>
    2524:	dc 01       	movw	r26, r24
    2526:	cb 01       	movw	r24, r22
    2528:	2a 89       	ldd	r18, Y+18	; 0x12
    252a:	3b 89       	ldd	r19, Y+19	; 0x13
    252c:	f9 01       	movw	r30, r18
    252e:	85 a3       	std	Z+37, r24	; 0x25
    2530:	96 a3       	std	Z+38, r25	; 0x26
    2532:	a7 a3       	std	Z+39, r26	; 0x27
    2534:	b0 a7       	std	Z+40, r27	; 0x28
    2536:	2a 85       	ldd	r18, Y+10	; 0x0a
    2538:	3b 85       	ldd	r19, Y+11	; 0x0b
    253a:	4c 85       	ldd	r20, Y+12	; 0x0c
    253c:	5d 85       	ldd	r21, Y+13	; 0x0d
    253e:	6e 81       	ldd	r22, Y+6	; 0x06
    2540:	7f 81       	ldd	r23, Y+7	; 0x07
    2542:	88 85       	ldd	r24, Y+8	; 0x08
    2544:	99 85       	ldd	r25, Y+9	; 0x09
    2546:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <__addsf3>
    254a:	dc 01       	movw	r26, r24
    254c:	cb 01       	movw	r24, r22
    254e:	20 e0       	ldi	r18, 0x00	; 0
    2550:	30 e0       	ldi	r19, 0x00	; 0
    2552:	40 ea       	ldi	r20, 0xA0	; 160
    2554:	55 e4       	ldi	r21, 0x45	; 69
    2556:	bc 01       	movw	r22, r24
    2558:	cd 01       	movw	r24, r26
    255a:	0e 94 58 1d 	call	0x3ab0	; 0x3ab0 <__divsf3>
    255e:	dc 01       	movw	r26, r24
    2560:	cb 01       	movw	r24, r22
    2562:	8a 83       	std	Y+2, r24	; 0x02
    2564:	9b 83       	std	Y+3, r25	; 0x03
    2566:	ac 83       	std	Y+4, r26	; 0x04
    2568:	bd 83       	std	Y+5, r27	; 0x05
    256a:	20 e0       	ldi	r18, 0x00	; 0
    256c:	30 e0       	ldi	r19, 0x00	; 0
    256e:	40 e2       	ldi	r20, 0x20	; 32
    2570:	52 ec       	ldi	r21, 0xC2	; 194
    2572:	6a 81       	ldd	r22, Y+2	; 0x02
    2574:	7b 81       	ldd	r23, Y+3	; 0x03
    2576:	8c 81       	ldd	r24, Y+4	; 0x04
    2578:	9d 81       	ldd	r25, Y+5	; 0x05
    257a:	0e 94 53 1d 	call	0x3aa6	; 0x3aa6 <__cmpsf2>
    257e:	88 23       	and	r24, r24
    2580:	54 f4       	brge	.+20     	; 0x2596 <compensate_temperature+0x2a2>
    2582:	80 e0       	ldi	r24, 0x00	; 0
    2584:	90 e0       	ldi	r25, 0x00	; 0
    2586:	a0 e2       	ldi	r26, 0x20	; 32
    2588:	b2 ec       	ldi	r27, 0xC2	; 194
    258a:	8a 83       	std	Y+2, r24	; 0x02
    258c:	9b 83       	std	Y+3, r25	; 0x03
    258e:	ac 83       	std	Y+4, r26	; 0x04
    2590:	bd 83       	std	Y+5, r27	; 0x05
    2592:	81 e0       	ldi	r24, 0x01	; 1
    2594:	89 83       	std	Y+1, r24	; 0x01
    2596:	20 e0       	ldi	r18, 0x00	; 0
    2598:	30 e0       	ldi	r19, 0x00	; 0
    259a:	4a ea       	ldi	r20, 0xAA	; 170
    259c:	52 e4       	ldi	r21, 0x42	; 66
    259e:	6a 81       	ldd	r22, Y+2	; 0x02
    25a0:	7b 81       	ldd	r23, Y+3	; 0x03
    25a2:	8c 81       	ldd	r24, Y+4	; 0x04
    25a4:	9d 81       	ldd	r25, Y+5	; 0x05
    25a6:	0e 94 b2 1e 	call	0x3d64	; 0x3d64 <__gesf2>
    25aa:	18 16       	cp	r1, r24
    25ac:	54 f4       	brge	.+20     	; 0x25c2 <compensate_temperature+0x2ce>
    25ae:	80 e0       	ldi	r24, 0x00	; 0
    25b0:	90 e0       	ldi	r25, 0x00	; 0
    25b2:	aa ea       	ldi	r26, 0xAA	; 170
    25b4:	b2 e4       	ldi	r27, 0x42	; 66
    25b6:	8a 83       	std	Y+2, r24	; 0x02
    25b8:	9b 83       	std	Y+3, r25	; 0x03
    25ba:	ac 83       	std	Y+4, r26	; 0x04
    25bc:	bd 83       	std	Y+5, r27	; 0x05
    25be:	82 e0       	ldi	r24, 0x02	; 2
    25c0:	89 83       	std	Y+1, r24	; 0x01
    25c2:	2e 85       	ldd	r18, Y+14	; 0x0e
    25c4:	3f 85       	ldd	r19, Y+15	; 0x0f
    25c6:	8a 81       	ldd	r24, Y+2	; 0x02
    25c8:	9b 81       	ldd	r25, Y+3	; 0x03
    25ca:	ac 81       	ldd	r26, Y+4	; 0x04
    25cc:	bd 81       	ldd	r27, Y+5	; 0x05
    25ce:	f9 01       	movw	r30, r18
    25d0:	80 83       	st	Z, r24
    25d2:	91 83       	std	Z+1, r25	; 0x01
    25d4:	a2 83       	std	Z+2, r26	; 0x02
    25d6:	b3 83       	std	Z+3, r27	; 0x03
    25d8:	89 81       	ldd	r24, Y+1	; 0x01
    25da:	63 96       	adiw	r28, 0x13	; 19
    25dc:	0f b6       	in	r0, 0x3f	; 63
    25de:	f8 94       	cli
    25e0:	de bf       	out	0x3e, r29	; 62
    25e2:	0f be       	out	0x3f, r0	; 63
    25e4:	cd bf       	out	0x3d, r28	; 61
    25e6:	df 91       	pop	r29
    25e8:	cf 91       	pop	r28
    25ea:	ff 90       	pop	r15
    25ec:	ef 90       	pop	r14
    25ee:	df 90       	pop	r13
    25f0:	cf 90       	pop	r12
    25f2:	bf 90       	pop	r11
    25f4:	af 90       	pop	r10
    25f6:	9f 90       	pop	r9
    25f8:	8f 90       	pop	r8
    25fa:	08 95       	ret

000025fc <compensate_pressure>:
    25fc:	cf 92       	push	r12
    25fe:	df 92       	push	r13
    2600:	ef 92       	push	r14
    2602:	ff 92       	push	r15
    2604:	cf 93       	push	r28
    2606:	df 93       	push	r29
    2608:	cd b7       	in	r28, 0x3d	; 61
    260a:	de b7       	in	r29, 0x3e	; 62
    260c:	63 97       	sbiw	r28, 0x13	; 19
    260e:	0f b6       	in	r0, 0x3f	; 63
    2610:	f8 94       	cli
    2612:	de bf       	out	0x3e, r29	; 62
    2614:	0f be       	out	0x3f, r0	; 63
    2616:	cd bf       	out	0x3d, r28	; 61
    2618:	9f 87       	std	Y+15, r25	; 0x0f
    261a:	8e 87       	std	Y+14, r24	; 0x0e
    261c:	79 8b       	std	Y+17, r23	; 0x11
    261e:	68 8b       	std	Y+16, r22	; 0x10
    2620:	5b 8b       	std	Y+19, r21	; 0x13
    2622:	4a 8b       	std	Y+18, r20	; 0x12
    2624:	19 82       	std	Y+1, r1	; 0x01
    2626:	1a 82       	std	Y+2, r1	; 0x02
    2628:	1b 82       	std	Y+3, r1	; 0x03
    262a:	1c 82       	std	Y+4, r1	; 0x04
    262c:	1d 82       	std	Y+5, r1	; 0x05
    262e:	8a 89       	ldd	r24, Y+18	; 0x12
    2630:	9b 89       	ldd	r25, Y+19	; 0x13
    2632:	fc 01       	movw	r30, r24
    2634:	85 a1       	ldd	r24, Z+37	; 0x25
    2636:	96 a1       	ldd	r25, Z+38	; 0x26
    2638:	a7 a1       	ldd	r26, Z+39	; 0x27
    263a:	b0 a5       	ldd	r27, Z+40	; 0x28
    263c:	bc 01       	movw	r22, r24
    263e:	cd 01       	movw	r24, r26
    2640:	0e 94 02 1e 	call	0x3c04	; 0x3c04 <__floatsisf>
    2644:	dc 01       	movw	r26, r24
    2646:	cb 01       	movw	r24, r22
    2648:	20 e0       	ldi	r18, 0x00	; 0
    264a:	30 e0       	ldi	r19, 0x00	; 0
    264c:	40 e0       	ldi	r20, 0x00	; 0
    264e:	50 e4       	ldi	r21, 0x40	; 64
    2650:	bc 01       	movw	r22, r24
    2652:	cd 01       	movw	r24, r26
    2654:	0e 94 58 1d 	call	0x3ab0	; 0x3ab0 <__divsf3>
    2658:	dc 01       	movw	r26, r24
    265a:	cb 01       	movw	r24, r22
    265c:	20 e0       	ldi	r18, 0x00	; 0
    265e:	30 e0       	ldi	r19, 0x00	; 0
    2660:	4a e7       	ldi	r20, 0x7A	; 122
    2662:	57 e4       	ldi	r21, 0x47	; 71
    2664:	bc 01       	movw	r22, r24
    2666:	cd 01       	movw	r24, r26
    2668:	0e 94 e6 1c 	call	0x39cc	; 0x39cc <__subsf3>
    266c:	dc 01       	movw	r26, r24
    266e:	cb 01       	movw	r24, r22
    2670:	8e 83       	std	Y+6, r24	; 0x06
    2672:	9f 83       	std	Y+7, r25	; 0x07
    2674:	a8 87       	std	Y+8, r26	; 0x08
    2676:	b9 87       	std	Y+9, r27	; 0x09
    2678:	2e 81       	ldd	r18, Y+6	; 0x06
    267a:	3f 81       	ldd	r19, Y+7	; 0x07
    267c:	48 85       	ldd	r20, Y+8	; 0x08
    267e:	59 85       	ldd	r21, Y+9	; 0x09
    2680:	6e 81       	ldd	r22, Y+6	; 0x06
    2682:	7f 81       	ldd	r23, Y+7	; 0x07
    2684:	88 85       	ldd	r24, Y+8	; 0x08
    2686:	99 85       	ldd	r25, Y+9	; 0x09
    2688:	0e 94 b7 1e 	call	0x3d6e	; 0x3d6e <__mulsf3>
    268c:	dc 01       	movw	r26, r24
    268e:	cb 01       	movw	r24, r22
    2690:	6c 01       	movw	r12, r24
    2692:	7d 01       	movw	r14, r26
    2694:	8a 89       	ldd	r24, Y+18	; 0x12
    2696:	9b 89       	ldd	r25, Y+19	; 0x13
    2698:	fc 01       	movw	r30, r24
    269a:	84 8d       	ldd	r24, Z+28	; 0x1c
    269c:	95 8d       	ldd	r25, Z+29	; 0x1d
    269e:	09 2e       	mov	r0, r25
    26a0:	00 0c       	add	r0, r0
    26a2:	aa 0b       	sbc	r26, r26
    26a4:	bb 0b       	sbc	r27, r27
    26a6:	bc 01       	movw	r22, r24
    26a8:	cd 01       	movw	r24, r26
    26aa:	0e 94 02 1e 	call	0x3c04	; 0x3c04 <__floatsisf>
    26ae:	dc 01       	movw	r26, r24
    26b0:	cb 01       	movw	r24, r22
    26b2:	9c 01       	movw	r18, r24
    26b4:	ad 01       	movw	r20, r26
    26b6:	c7 01       	movw	r24, r14
    26b8:	b6 01       	movw	r22, r12
    26ba:	0e 94 b7 1e 	call	0x3d6e	; 0x3d6e <__mulsf3>
    26be:	dc 01       	movw	r26, r24
    26c0:	cb 01       	movw	r24, r22
    26c2:	20 e0       	ldi	r18, 0x00	; 0
    26c4:	30 e0       	ldi	r19, 0x00	; 0
    26c6:	40 e0       	ldi	r20, 0x00	; 0
    26c8:	57 e4       	ldi	r21, 0x47	; 71
    26ca:	bc 01       	movw	r22, r24
    26cc:	cd 01       	movw	r24, r26
    26ce:	0e 94 58 1d 	call	0x3ab0	; 0x3ab0 <__divsf3>
    26d2:	dc 01       	movw	r26, r24
    26d4:	cb 01       	movw	r24, r22
    26d6:	8a 87       	std	Y+10, r24	; 0x0a
    26d8:	9b 87       	std	Y+11, r25	; 0x0b
    26da:	ac 87       	std	Y+12, r26	; 0x0c
    26dc:	bd 87       	std	Y+13, r27	; 0x0d
    26de:	8a 89       	ldd	r24, Y+18	; 0x12
    26e0:	9b 89       	ldd	r25, Y+19	; 0x13
    26e2:	fc 01       	movw	r30, r24
    26e4:	82 8d       	ldd	r24, Z+26	; 0x1a
    26e6:	93 8d       	ldd	r25, Z+27	; 0x1b
    26e8:	09 2e       	mov	r0, r25
    26ea:	00 0c       	add	r0, r0
    26ec:	aa 0b       	sbc	r26, r26
    26ee:	bb 0b       	sbc	r27, r27
    26f0:	bc 01       	movw	r22, r24
    26f2:	cd 01       	movw	r24, r26
    26f4:	0e 94 02 1e 	call	0x3c04	; 0x3c04 <__floatsisf>
    26f8:	dc 01       	movw	r26, r24
    26fa:	cb 01       	movw	r24, r22
    26fc:	2e 81       	ldd	r18, Y+6	; 0x06
    26fe:	3f 81       	ldd	r19, Y+7	; 0x07
    2700:	48 85       	ldd	r20, Y+8	; 0x08
    2702:	59 85       	ldd	r21, Y+9	; 0x09
    2704:	bc 01       	movw	r22, r24
    2706:	cd 01       	movw	r24, r26
    2708:	0e 94 b7 1e 	call	0x3d6e	; 0x3d6e <__mulsf3>
    270c:	dc 01       	movw	r26, r24
    270e:	cb 01       	movw	r24, r22
    2710:	9c 01       	movw	r18, r24
    2712:	ad 01       	movw	r20, r26
    2714:	bc 01       	movw	r22, r24
    2716:	cd 01       	movw	r24, r26
    2718:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <__addsf3>
    271c:	dc 01       	movw	r26, r24
    271e:	cb 01       	movw	r24, r22
    2720:	9c 01       	movw	r18, r24
    2722:	ad 01       	movw	r20, r26
    2724:	6a 85       	ldd	r22, Y+10	; 0x0a
    2726:	7b 85       	ldd	r23, Y+11	; 0x0b
    2728:	8c 85       	ldd	r24, Y+12	; 0x0c
    272a:	9d 85       	ldd	r25, Y+13	; 0x0d
    272c:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <__addsf3>
    2730:	dc 01       	movw	r26, r24
    2732:	cb 01       	movw	r24, r22
    2734:	8a 87       	std	Y+10, r24	; 0x0a
    2736:	9b 87       	std	Y+11, r25	; 0x0b
    2738:	ac 87       	std	Y+12, r26	; 0x0c
    273a:	bd 87       	std	Y+13, r27	; 0x0d
    273c:	20 e0       	ldi	r18, 0x00	; 0
    273e:	30 e0       	ldi	r19, 0x00	; 0
    2740:	40 e8       	ldi	r20, 0x80	; 128
    2742:	50 e4       	ldi	r21, 0x40	; 64
    2744:	6a 85       	ldd	r22, Y+10	; 0x0a
    2746:	7b 85       	ldd	r23, Y+11	; 0x0b
    2748:	8c 85       	ldd	r24, Y+12	; 0x0c
    274a:	9d 85       	ldd	r25, Y+13	; 0x0d
    274c:	0e 94 58 1d 	call	0x3ab0	; 0x3ab0 <__divsf3>
    2750:	dc 01       	movw	r26, r24
    2752:	cb 01       	movw	r24, r22
    2754:	6c 01       	movw	r12, r24
    2756:	7d 01       	movw	r14, r26
    2758:	8a 89       	ldd	r24, Y+18	; 0x12
    275a:	9b 89       	ldd	r25, Y+19	; 0x13
    275c:	fc 01       	movw	r30, r24
    275e:	80 8d       	ldd	r24, Z+24	; 0x18
    2760:	91 8d       	ldd	r25, Z+25	; 0x19
    2762:	09 2e       	mov	r0, r25
    2764:	00 0c       	add	r0, r0
    2766:	aa 0b       	sbc	r26, r26
    2768:	bb 0b       	sbc	r27, r27
    276a:	bc 01       	movw	r22, r24
    276c:	cd 01       	movw	r24, r26
    276e:	0e 94 02 1e 	call	0x3c04	; 0x3c04 <__floatsisf>
    2772:	dc 01       	movw	r26, r24
    2774:	cb 01       	movw	r24, r22
    2776:	20 e0       	ldi	r18, 0x00	; 0
    2778:	30 e0       	ldi	r19, 0x00	; 0
    277a:	40 e8       	ldi	r20, 0x80	; 128
    277c:	57 e4       	ldi	r21, 0x47	; 71
    277e:	bc 01       	movw	r22, r24
    2780:	cd 01       	movw	r24, r26
    2782:	0e 94 b7 1e 	call	0x3d6e	; 0x3d6e <__mulsf3>
    2786:	dc 01       	movw	r26, r24
    2788:	cb 01       	movw	r24, r22
    278a:	9c 01       	movw	r18, r24
    278c:	ad 01       	movw	r20, r26
    278e:	c7 01       	movw	r24, r14
    2790:	b6 01       	movw	r22, r12
    2792:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <__addsf3>
    2796:	dc 01       	movw	r26, r24
    2798:	cb 01       	movw	r24, r22
    279a:	8a 87       	std	Y+10, r24	; 0x0a
    279c:	9b 87       	std	Y+11, r25	; 0x0b
    279e:	ac 87       	std	Y+12, r26	; 0x0c
    27a0:	bd 87       	std	Y+13, r27	; 0x0d
    27a2:	8a 89       	ldd	r24, Y+18	; 0x12
    27a4:	9b 89       	ldd	r25, Y+19	; 0x13
    27a6:	fc 01       	movw	r30, r24
    27a8:	86 89       	ldd	r24, Z+22	; 0x16
    27aa:	97 89       	ldd	r25, Z+23	; 0x17
    27ac:	09 2e       	mov	r0, r25
    27ae:	00 0c       	add	r0, r0
    27b0:	aa 0b       	sbc	r26, r26
    27b2:	bb 0b       	sbc	r27, r27
    27b4:	bc 01       	movw	r22, r24
    27b6:	cd 01       	movw	r24, r26
    27b8:	0e 94 02 1e 	call	0x3c04	; 0x3c04 <__floatsisf>
    27bc:	dc 01       	movw	r26, r24
    27be:	cb 01       	movw	r24, r22
    27c0:	2e 81       	ldd	r18, Y+6	; 0x06
    27c2:	3f 81       	ldd	r19, Y+7	; 0x07
    27c4:	48 85       	ldd	r20, Y+8	; 0x08
    27c6:	59 85       	ldd	r21, Y+9	; 0x09
    27c8:	bc 01       	movw	r22, r24
    27ca:	cd 01       	movw	r24, r26
    27cc:	0e 94 b7 1e 	call	0x3d6e	; 0x3d6e <__mulsf3>
    27d0:	dc 01       	movw	r26, r24
    27d2:	cb 01       	movw	r24, r22
    27d4:	2e 81       	ldd	r18, Y+6	; 0x06
    27d6:	3f 81       	ldd	r19, Y+7	; 0x07
    27d8:	48 85       	ldd	r20, Y+8	; 0x08
    27da:	59 85       	ldd	r21, Y+9	; 0x09
    27dc:	bc 01       	movw	r22, r24
    27de:	cd 01       	movw	r24, r26
    27e0:	0e 94 b7 1e 	call	0x3d6e	; 0x3d6e <__mulsf3>
    27e4:	dc 01       	movw	r26, r24
    27e6:	cb 01       	movw	r24, r22
    27e8:	20 e0       	ldi	r18, 0x00	; 0
    27ea:	30 e0       	ldi	r19, 0x00	; 0
    27ec:	40 e0       	ldi	r20, 0x00	; 0
    27ee:	59 e4       	ldi	r21, 0x49	; 73
    27f0:	bc 01       	movw	r22, r24
    27f2:	cd 01       	movw	r24, r26
    27f4:	0e 94 58 1d 	call	0x3ab0	; 0x3ab0 <__divsf3>
    27f8:	dc 01       	movw	r26, r24
    27fa:	cb 01       	movw	r24, r22
    27fc:	6c 01       	movw	r12, r24
    27fe:	7d 01       	movw	r14, r26
    2800:	8a 89       	ldd	r24, Y+18	; 0x12
    2802:	9b 89       	ldd	r25, Y+19	; 0x13
    2804:	fc 01       	movw	r30, r24
    2806:	84 89       	ldd	r24, Z+20	; 0x14
    2808:	95 89       	ldd	r25, Z+21	; 0x15
    280a:	09 2e       	mov	r0, r25
    280c:	00 0c       	add	r0, r0
    280e:	aa 0b       	sbc	r26, r26
    2810:	bb 0b       	sbc	r27, r27
    2812:	bc 01       	movw	r22, r24
    2814:	cd 01       	movw	r24, r26
    2816:	0e 94 02 1e 	call	0x3c04	; 0x3c04 <__floatsisf>
    281a:	dc 01       	movw	r26, r24
    281c:	cb 01       	movw	r24, r22
    281e:	2e 81       	ldd	r18, Y+6	; 0x06
    2820:	3f 81       	ldd	r19, Y+7	; 0x07
    2822:	48 85       	ldd	r20, Y+8	; 0x08
    2824:	59 85       	ldd	r21, Y+9	; 0x09
    2826:	bc 01       	movw	r22, r24
    2828:	cd 01       	movw	r24, r26
    282a:	0e 94 b7 1e 	call	0x3d6e	; 0x3d6e <__mulsf3>
    282e:	dc 01       	movw	r26, r24
    2830:	cb 01       	movw	r24, r22
    2832:	9c 01       	movw	r18, r24
    2834:	ad 01       	movw	r20, r26
    2836:	c7 01       	movw	r24, r14
    2838:	b6 01       	movw	r22, r12
    283a:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <__addsf3>
    283e:	dc 01       	movw	r26, r24
    2840:	cb 01       	movw	r24, r22
    2842:	20 e0       	ldi	r18, 0x00	; 0
    2844:	30 e0       	ldi	r19, 0x00	; 0
    2846:	40 e0       	ldi	r20, 0x00	; 0
    2848:	59 e4       	ldi	r21, 0x49	; 73
    284a:	bc 01       	movw	r22, r24
    284c:	cd 01       	movw	r24, r26
    284e:	0e 94 58 1d 	call	0x3ab0	; 0x3ab0 <__divsf3>
    2852:	dc 01       	movw	r26, r24
    2854:	cb 01       	movw	r24, r22
    2856:	8e 83       	std	Y+6, r24	; 0x06
    2858:	9f 83       	std	Y+7, r25	; 0x07
    285a:	a8 87       	std	Y+8, r26	; 0x08
    285c:	b9 87       	std	Y+9, r27	; 0x09
    285e:	20 e0       	ldi	r18, 0x00	; 0
    2860:	30 e0       	ldi	r19, 0x00	; 0
    2862:	40 e0       	ldi	r20, 0x00	; 0
    2864:	57 e4       	ldi	r21, 0x47	; 71
    2866:	6e 81       	ldd	r22, Y+6	; 0x06
    2868:	7f 81       	ldd	r23, Y+7	; 0x07
    286a:	88 85       	ldd	r24, Y+8	; 0x08
    286c:	99 85       	ldd	r25, Y+9	; 0x09
    286e:	0e 94 58 1d 	call	0x3ab0	; 0x3ab0 <__divsf3>
    2872:	dc 01       	movw	r26, r24
    2874:	cb 01       	movw	r24, r22
    2876:	20 e0       	ldi	r18, 0x00	; 0
    2878:	30 e0       	ldi	r19, 0x00	; 0
    287a:	40 e8       	ldi	r20, 0x80	; 128
    287c:	5f e3       	ldi	r21, 0x3F	; 63
    287e:	bc 01       	movw	r22, r24
    2880:	cd 01       	movw	r24, r26
    2882:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <__addsf3>
    2886:	dc 01       	movw	r26, r24
    2888:	cb 01       	movw	r24, r22
    288a:	6c 01       	movw	r12, r24
    288c:	7d 01       	movw	r14, r26
    288e:	8a 89       	ldd	r24, Y+18	; 0x12
    2890:	9b 89       	ldd	r25, Y+19	; 0x13
    2892:	fc 01       	movw	r30, r24
    2894:	82 89       	ldd	r24, Z+18	; 0x12
    2896:	93 89       	ldd	r25, Z+19	; 0x13
    2898:	cc 01       	movw	r24, r24
    289a:	a0 e0       	ldi	r26, 0x00	; 0
    289c:	b0 e0       	ldi	r27, 0x00	; 0
    289e:	bc 01       	movw	r22, r24
    28a0:	cd 01       	movw	r24, r26
    28a2:	0e 94 00 1e 	call	0x3c00	; 0x3c00 <__floatunsisf>
    28a6:	dc 01       	movw	r26, r24
    28a8:	cb 01       	movw	r24, r22
    28aa:	9c 01       	movw	r18, r24
    28ac:	ad 01       	movw	r20, r26
    28ae:	c7 01       	movw	r24, r14
    28b0:	b6 01       	movw	r22, r12
    28b2:	0e 94 b7 1e 	call	0x3d6e	; 0x3d6e <__mulsf3>
    28b6:	dc 01       	movw	r26, r24
    28b8:	cb 01       	movw	r24, r22
    28ba:	8e 83       	std	Y+6, r24	; 0x06
    28bc:	9f 83       	std	Y+7, r25	; 0x07
    28be:	a8 87       	std	Y+8, r26	; 0x08
    28c0:	b9 87       	std	Y+9, r27	; 0x09
    28c2:	20 e0       	ldi	r18, 0x00	; 0
    28c4:	30 e0       	ldi	r19, 0x00	; 0
    28c6:	a9 01       	movw	r20, r18
    28c8:	6e 81       	ldd	r22, Y+6	; 0x06
    28ca:	7f 81       	ldd	r23, Y+7	; 0x07
    28cc:	88 85       	ldd	r24, Y+8	; 0x08
    28ce:	99 85       	ldd	r25, Y+9	; 0x09
    28d0:	0e 94 53 1d 	call	0x3aa6	; 0x3aa6 <__cmpsf2>
    28d4:	88 23       	and	r24, r24
    28d6:	64 f0       	brlt	.+24     	; 0x28f0 <compensate_pressure+0x2f4>
    28d8:	20 e0       	ldi	r18, 0x00	; 0
    28da:	30 e0       	ldi	r19, 0x00	; 0
    28dc:	a9 01       	movw	r20, r18
    28de:	6e 81       	ldd	r22, Y+6	; 0x06
    28e0:	7f 81       	ldd	r23, Y+7	; 0x07
    28e2:	88 85       	ldd	r24, Y+8	; 0x08
    28e4:	99 85       	ldd	r25, Y+9	; 0x09
    28e6:	0e 94 b2 1e 	call	0x3d64	; 0x3d64 <__gesf2>
    28ea:	18 16       	cp	r1, r24
    28ec:	0c f0       	brlt	.+2      	; 0x28f0 <compensate_pressure+0x2f4>
    28ee:	15 c1       	rjmp	.+554    	; 0x2b1a <compensate_pressure+0x51e>
    28f0:	88 89       	ldd	r24, Y+16	; 0x10
    28f2:	99 89       	ldd	r25, Y+17	; 0x11
    28f4:	fc 01       	movw	r30, r24
    28f6:	84 81       	ldd	r24, Z+4	; 0x04
    28f8:	95 81       	ldd	r25, Z+5	; 0x05
    28fa:	a6 81       	ldd	r26, Z+6	; 0x06
    28fc:	b7 81       	ldd	r27, Z+7	; 0x07
    28fe:	bc 01       	movw	r22, r24
    2900:	cd 01       	movw	r24, r26
    2902:	0e 94 00 1e 	call	0x3c00	; 0x3c00 <__floatunsisf>
    2906:	dc 01       	movw	r26, r24
    2908:	cb 01       	movw	r24, r22
    290a:	9c 01       	movw	r18, r24
    290c:	ad 01       	movw	r20, r26
    290e:	60 e0       	ldi	r22, 0x00	; 0
    2910:	70 e0       	ldi	r23, 0x00	; 0
    2912:	80 e8       	ldi	r24, 0x80	; 128
    2914:	99 e4       	ldi	r25, 0x49	; 73
    2916:	0e 94 e6 1c 	call	0x39cc	; 0x39cc <__subsf3>
    291a:	dc 01       	movw	r26, r24
    291c:	cb 01       	movw	r24, r22
    291e:	8a 83       	std	Y+2, r24	; 0x02
    2920:	9b 83       	std	Y+3, r25	; 0x03
    2922:	ac 83       	std	Y+4, r26	; 0x04
    2924:	bd 83       	std	Y+5, r27	; 0x05
    2926:	20 e0       	ldi	r18, 0x00	; 0
    2928:	30 e0       	ldi	r19, 0x00	; 0
    292a:	40 e8       	ldi	r20, 0x80	; 128
    292c:	55 e4       	ldi	r21, 0x45	; 69
    292e:	6a 85       	ldd	r22, Y+10	; 0x0a
    2930:	7b 85       	ldd	r23, Y+11	; 0x0b
    2932:	8c 85       	ldd	r24, Y+12	; 0x0c
    2934:	9d 85       	ldd	r25, Y+13	; 0x0d
    2936:	0e 94 58 1d 	call	0x3ab0	; 0x3ab0 <__divsf3>
    293a:	dc 01       	movw	r26, r24
    293c:	cb 01       	movw	r24, r22
    293e:	9c 01       	movw	r18, r24
    2940:	ad 01       	movw	r20, r26
    2942:	6a 81       	ldd	r22, Y+2	; 0x02
    2944:	7b 81       	ldd	r23, Y+3	; 0x03
    2946:	8c 81       	ldd	r24, Y+4	; 0x04
    2948:	9d 81       	ldd	r25, Y+5	; 0x05
    294a:	0e 94 e6 1c 	call	0x39cc	; 0x39cc <__subsf3>
    294e:	dc 01       	movw	r26, r24
    2950:	cb 01       	movw	r24, r22
    2952:	20 e0       	ldi	r18, 0x00	; 0
    2954:	30 e5       	ldi	r19, 0x50	; 80
    2956:	43 ec       	ldi	r20, 0xC3	; 195
    2958:	55 e4       	ldi	r21, 0x45	; 69
    295a:	bc 01       	movw	r22, r24
    295c:	cd 01       	movw	r24, r26
    295e:	0e 94 b7 1e 	call	0x3d6e	; 0x3d6e <__mulsf3>
    2962:	dc 01       	movw	r26, r24
    2964:	cb 01       	movw	r24, r22
    2966:	2e 81       	ldd	r18, Y+6	; 0x06
    2968:	3f 81       	ldd	r19, Y+7	; 0x07
    296a:	48 85       	ldd	r20, Y+8	; 0x08
    296c:	59 85       	ldd	r21, Y+9	; 0x09
    296e:	bc 01       	movw	r22, r24
    2970:	cd 01       	movw	r24, r26
    2972:	0e 94 58 1d 	call	0x3ab0	; 0x3ab0 <__divsf3>
    2976:	dc 01       	movw	r26, r24
    2978:	cb 01       	movw	r24, r22
    297a:	8a 83       	std	Y+2, r24	; 0x02
    297c:	9b 83       	std	Y+3, r25	; 0x03
    297e:	ac 83       	std	Y+4, r26	; 0x04
    2980:	bd 83       	std	Y+5, r27	; 0x05
    2982:	8a 89       	ldd	r24, Y+18	; 0x12
    2984:	9b 89       	ldd	r25, Y+19	; 0x13
    2986:	fc 01       	movw	r30, r24
    2988:	82 a1       	ldd	r24, Z+34	; 0x22
    298a:	93 a1       	ldd	r25, Z+35	; 0x23
    298c:	09 2e       	mov	r0, r25
    298e:	00 0c       	add	r0, r0
    2990:	aa 0b       	sbc	r26, r26
    2992:	bb 0b       	sbc	r27, r27
    2994:	bc 01       	movw	r22, r24
    2996:	cd 01       	movw	r24, r26
    2998:	0e 94 02 1e 	call	0x3c04	; 0x3c04 <__floatsisf>
    299c:	dc 01       	movw	r26, r24
    299e:	cb 01       	movw	r24, r22
    29a0:	2a 81       	ldd	r18, Y+2	; 0x02
    29a2:	3b 81       	ldd	r19, Y+3	; 0x03
    29a4:	4c 81       	ldd	r20, Y+4	; 0x04
    29a6:	5d 81       	ldd	r21, Y+5	; 0x05
    29a8:	bc 01       	movw	r22, r24
    29aa:	cd 01       	movw	r24, r26
    29ac:	0e 94 b7 1e 	call	0x3d6e	; 0x3d6e <__mulsf3>
    29b0:	dc 01       	movw	r26, r24
    29b2:	cb 01       	movw	r24, r22
    29b4:	2a 81       	ldd	r18, Y+2	; 0x02
    29b6:	3b 81       	ldd	r19, Y+3	; 0x03
    29b8:	4c 81       	ldd	r20, Y+4	; 0x04
    29ba:	5d 81       	ldd	r21, Y+5	; 0x05
    29bc:	bc 01       	movw	r22, r24
    29be:	cd 01       	movw	r24, r26
    29c0:	0e 94 b7 1e 	call	0x3d6e	; 0x3d6e <__mulsf3>
    29c4:	dc 01       	movw	r26, r24
    29c6:	cb 01       	movw	r24, r22
    29c8:	20 e0       	ldi	r18, 0x00	; 0
    29ca:	30 e0       	ldi	r19, 0x00	; 0
    29cc:	40 e0       	ldi	r20, 0x00	; 0
    29ce:	5f e4       	ldi	r21, 0x4F	; 79
    29d0:	bc 01       	movw	r22, r24
    29d2:	cd 01       	movw	r24, r26
    29d4:	0e 94 58 1d 	call	0x3ab0	; 0x3ab0 <__divsf3>
    29d8:	dc 01       	movw	r26, r24
    29da:	cb 01       	movw	r24, r22
    29dc:	8e 83       	std	Y+6, r24	; 0x06
    29de:	9f 83       	std	Y+7, r25	; 0x07
    29e0:	a8 87       	std	Y+8, r26	; 0x08
    29e2:	b9 87       	std	Y+9, r27	; 0x09
    29e4:	8a 89       	ldd	r24, Y+18	; 0x12
    29e6:	9b 89       	ldd	r25, Y+19	; 0x13
    29e8:	fc 01       	movw	r30, r24
    29ea:	80 a1       	ldd	r24, Z+32	; 0x20
    29ec:	91 a1       	ldd	r25, Z+33	; 0x21
    29ee:	09 2e       	mov	r0, r25
    29f0:	00 0c       	add	r0, r0
    29f2:	aa 0b       	sbc	r26, r26
    29f4:	bb 0b       	sbc	r27, r27
    29f6:	bc 01       	movw	r22, r24
    29f8:	cd 01       	movw	r24, r26
    29fa:	0e 94 02 1e 	call	0x3c04	; 0x3c04 <__floatsisf>
    29fe:	dc 01       	movw	r26, r24
    2a00:	cb 01       	movw	r24, r22
    2a02:	2a 81       	ldd	r18, Y+2	; 0x02
    2a04:	3b 81       	ldd	r19, Y+3	; 0x03
    2a06:	4c 81       	ldd	r20, Y+4	; 0x04
    2a08:	5d 81       	ldd	r21, Y+5	; 0x05
    2a0a:	bc 01       	movw	r22, r24
    2a0c:	cd 01       	movw	r24, r26
    2a0e:	0e 94 b7 1e 	call	0x3d6e	; 0x3d6e <__mulsf3>
    2a12:	dc 01       	movw	r26, r24
    2a14:	cb 01       	movw	r24, r22
    2a16:	20 e0       	ldi	r18, 0x00	; 0
    2a18:	30 e0       	ldi	r19, 0x00	; 0
    2a1a:	40 e0       	ldi	r20, 0x00	; 0
    2a1c:	57 e4       	ldi	r21, 0x47	; 71
    2a1e:	bc 01       	movw	r22, r24
    2a20:	cd 01       	movw	r24, r26
    2a22:	0e 94 58 1d 	call	0x3ab0	; 0x3ab0 <__divsf3>
    2a26:	dc 01       	movw	r26, r24
    2a28:	cb 01       	movw	r24, r22
    2a2a:	8a 87       	std	Y+10, r24	; 0x0a
    2a2c:	9b 87       	std	Y+11, r25	; 0x0b
    2a2e:	ac 87       	std	Y+12, r26	; 0x0c
    2a30:	bd 87       	std	Y+13, r27	; 0x0d
    2a32:	2a 85       	ldd	r18, Y+10	; 0x0a
    2a34:	3b 85       	ldd	r19, Y+11	; 0x0b
    2a36:	4c 85       	ldd	r20, Y+12	; 0x0c
    2a38:	5d 85       	ldd	r21, Y+13	; 0x0d
    2a3a:	6e 81       	ldd	r22, Y+6	; 0x06
    2a3c:	7f 81       	ldd	r23, Y+7	; 0x07
    2a3e:	88 85       	ldd	r24, Y+8	; 0x08
    2a40:	99 85       	ldd	r25, Y+9	; 0x09
    2a42:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <__addsf3>
    2a46:	dc 01       	movw	r26, r24
    2a48:	cb 01       	movw	r24, r22
    2a4a:	6c 01       	movw	r12, r24
    2a4c:	7d 01       	movw	r14, r26
    2a4e:	8a 89       	ldd	r24, Y+18	; 0x12
    2a50:	9b 89       	ldd	r25, Y+19	; 0x13
    2a52:	fc 01       	movw	r30, r24
    2a54:	86 8d       	ldd	r24, Z+30	; 0x1e
    2a56:	97 8d       	ldd	r25, Z+31	; 0x1f
    2a58:	09 2e       	mov	r0, r25
    2a5a:	00 0c       	add	r0, r0
    2a5c:	aa 0b       	sbc	r26, r26
    2a5e:	bb 0b       	sbc	r27, r27
    2a60:	bc 01       	movw	r22, r24
    2a62:	cd 01       	movw	r24, r26
    2a64:	0e 94 02 1e 	call	0x3c04	; 0x3c04 <__floatsisf>
    2a68:	dc 01       	movw	r26, r24
    2a6a:	cb 01       	movw	r24, r22
    2a6c:	9c 01       	movw	r18, r24
    2a6e:	ad 01       	movw	r20, r26
    2a70:	c7 01       	movw	r24, r14
    2a72:	b6 01       	movw	r22, r12
    2a74:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <__addsf3>
    2a78:	dc 01       	movw	r26, r24
    2a7a:	cb 01       	movw	r24, r22
    2a7c:	20 e0       	ldi	r18, 0x00	; 0
    2a7e:	30 e0       	ldi	r19, 0x00	; 0
    2a80:	40 e8       	ldi	r20, 0x80	; 128
    2a82:	51 e4       	ldi	r21, 0x41	; 65
    2a84:	bc 01       	movw	r22, r24
    2a86:	cd 01       	movw	r24, r26
    2a88:	0e 94 58 1d 	call	0x3ab0	; 0x3ab0 <__divsf3>
    2a8c:	dc 01       	movw	r26, r24
    2a8e:	cb 01       	movw	r24, r22
    2a90:	9c 01       	movw	r18, r24
    2a92:	ad 01       	movw	r20, r26
    2a94:	6a 81       	ldd	r22, Y+2	; 0x02
    2a96:	7b 81       	ldd	r23, Y+3	; 0x03
    2a98:	8c 81       	ldd	r24, Y+4	; 0x04
    2a9a:	9d 81       	ldd	r25, Y+5	; 0x05
    2a9c:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <__addsf3>
    2aa0:	dc 01       	movw	r26, r24
    2aa2:	cb 01       	movw	r24, r22
    2aa4:	8a 83       	std	Y+2, r24	; 0x02
    2aa6:	9b 83       	std	Y+3, r25	; 0x03
    2aa8:	ac 83       	std	Y+4, r26	; 0x04
    2aaa:	bd 83       	std	Y+5, r27	; 0x05
    2aac:	20 e0       	ldi	r18, 0x00	; 0
    2aae:	30 e6       	ldi	r19, 0x60	; 96
    2ab0:	4a ee       	ldi	r20, 0xEA	; 234
    2ab2:	56 e4       	ldi	r21, 0x46	; 70
    2ab4:	6a 81       	ldd	r22, Y+2	; 0x02
    2ab6:	7b 81       	ldd	r23, Y+3	; 0x03
    2ab8:	8c 81       	ldd	r24, Y+4	; 0x04
    2aba:	9d 81       	ldd	r25, Y+5	; 0x05
    2abc:	0e 94 53 1d 	call	0x3aa6	; 0x3aa6 <__cmpsf2>
    2ac0:	88 23       	and	r24, r24
    2ac2:	54 f4       	brge	.+20     	; 0x2ad8 <compensate_pressure+0x4dc>
    2ac4:	80 e0       	ldi	r24, 0x00	; 0
    2ac6:	90 e6       	ldi	r25, 0x60	; 96
    2ac8:	aa ee       	ldi	r26, 0xEA	; 234
    2aca:	b6 e4       	ldi	r27, 0x46	; 70
    2acc:	8a 83       	std	Y+2, r24	; 0x02
    2ace:	9b 83       	std	Y+3, r25	; 0x03
    2ad0:	ac 83       	std	Y+4, r26	; 0x04
    2ad2:	bd 83       	std	Y+5, r27	; 0x05
    2ad4:	83 e0       	ldi	r24, 0x03	; 3
    2ad6:	89 83       	std	Y+1, r24	; 0x01
    2ad8:	20 e0       	ldi	r18, 0x00	; 0
    2ada:	38 ed       	ldi	r19, 0xD8	; 216
    2adc:	46 ed       	ldi	r20, 0xD6	; 214
    2ade:	57 e4       	ldi	r21, 0x47	; 71
    2ae0:	6a 81       	ldd	r22, Y+2	; 0x02
    2ae2:	7b 81       	ldd	r23, Y+3	; 0x03
    2ae4:	8c 81       	ldd	r24, Y+4	; 0x04
    2ae6:	9d 81       	ldd	r25, Y+5	; 0x05
    2ae8:	0e 94 b2 1e 	call	0x3d64	; 0x3d64 <__gesf2>
    2aec:	18 16       	cp	r1, r24
    2aee:	54 f4       	brge	.+20     	; 0x2b04 <compensate_pressure+0x508>
    2af0:	80 e0       	ldi	r24, 0x00	; 0
    2af2:	98 ed       	ldi	r25, 0xD8	; 216
    2af4:	a6 ed       	ldi	r26, 0xD6	; 214
    2af6:	b7 e4       	ldi	r27, 0x47	; 71
    2af8:	8a 83       	std	Y+2, r24	; 0x02
    2afa:	9b 83       	std	Y+3, r25	; 0x03
    2afc:	ac 83       	std	Y+4, r26	; 0x04
    2afe:	bd 83       	std	Y+5, r27	; 0x05
    2b00:	84 e0       	ldi	r24, 0x04	; 4
    2b02:	89 83       	std	Y+1, r24	; 0x01
    2b04:	2e 85       	ldd	r18, Y+14	; 0x0e
    2b06:	3f 85       	ldd	r19, Y+15	; 0x0f
    2b08:	8a 81       	ldd	r24, Y+2	; 0x02
    2b0a:	9b 81       	ldd	r25, Y+3	; 0x03
    2b0c:	ac 81       	ldd	r26, Y+4	; 0x04
    2b0e:	bd 81       	ldd	r27, Y+5	; 0x05
    2b10:	f9 01       	movw	r30, r18
    2b12:	80 83       	st	Z, r24
    2b14:	91 83       	std	Z+1, r25	; 0x01
    2b16:	a2 83       	std	Z+2, r26	; 0x02
    2b18:	b3 83       	std	Z+3, r27	; 0x03
    2b1a:	89 81       	ldd	r24, Y+1	; 0x01
    2b1c:	63 96       	adiw	r28, 0x13	; 19
    2b1e:	0f b6       	in	r0, 0x3f	; 63
    2b20:	f8 94       	cli
    2b22:	de bf       	out	0x3e, r29	; 62
    2b24:	0f be       	out	0x3f, r0	; 63
    2b26:	cd bf       	out	0x3d, r28	; 61
    2b28:	df 91       	pop	r29
    2b2a:	cf 91       	pop	r28
    2b2c:	ff 90       	pop	r15
    2b2e:	ef 90       	pop	r14
    2b30:	df 90       	pop	r13
    2b32:	cf 90       	pop	r12
    2b34:	08 95       	ret

00002b36 <st_check_boundaries>:
    2b36:	cf 93       	push	r28
    2b38:	df 93       	push	r29
    2b3a:	cd b7       	in	r28, 0x3d	; 61
    2b3c:	de b7       	in	r29, 0x3e	; 62
    2b3e:	29 97       	sbiw	r28, 0x09	; 9
    2b40:	0f b6       	in	r0, 0x3f	; 63
    2b42:	f8 94       	cli
    2b44:	de bf       	out	0x3e, r29	; 62
    2b46:	0f be       	out	0x3f, r0	; 63
    2b48:	cd bf       	out	0x3d, r28	; 61
    2b4a:	6a 83       	std	Y+2, r22	; 0x02
    2b4c:	7b 83       	std	Y+3, r23	; 0x03
    2b4e:	8c 83       	std	Y+4, r24	; 0x04
    2b50:	9d 83       	std	Y+5, r25	; 0x05
    2b52:	2e 83       	std	Y+6, r18	; 0x06
    2b54:	3f 83       	std	Y+7, r19	; 0x07
    2b56:	48 87       	std	Y+8, r20	; 0x08
    2b58:	59 87       	std	Y+9, r21	; 0x09
    2b5a:	19 82       	std	Y+1, r1	; 0x01
    2b5c:	8e 81       	ldd	r24, Y+6	; 0x06
    2b5e:	9f 81       	ldd	r25, Y+7	; 0x07
    2b60:	a8 85       	ldd	r26, Y+8	; 0x08
    2b62:	b9 85       	ldd	r27, Y+9	; 0x09
    2b64:	bb 23       	and	r27, r27
    2b66:	4c f0       	brlt	.+18     	; 0x2b7a <st_check_boundaries+0x44>
    2b68:	8e 81       	ldd	r24, Y+6	; 0x06
    2b6a:	9f 81       	ldd	r25, Y+7	; 0x07
    2b6c:	a8 85       	ldd	r26, Y+8	; 0x08
    2b6e:	b9 85       	ldd	r27, Y+9	; 0x09
    2b70:	81 3f       	cpi	r24, 0xF1	; 241
    2b72:	9f 4f       	sbci	r25, 0xFF	; 255
    2b74:	af 40       	sbci	r26, 0x0F	; 15
    2b76:	b1 05       	cpc	r27, r1
    2b78:	94 f0       	brlt	.+36     	; 0x2b9e <st_check_boundaries+0x68>
    2b7a:	8a 81       	ldd	r24, Y+2	; 0x02
    2b7c:	9b 81       	ldd	r25, Y+3	; 0x03
    2b7e:	ac 81       	ldd	r26, Y+4	; 0x04
    2b80:	bd 81       	ldd	r27, Y+5	; 0x05
    2b82:	bb 23       	and	r27, r27
    2b84:	64 f0       	brlt	.+24     	; 0x2b9e <st_check_boundaries+0x68>
    2b86:	8a 81       	ldd	r24, Y+2	; 0x02
    2b88:	9b 81       	ldd	r25, Y+3	; 0x03
    2b8a:	ac 81       	ldd	r26, Y+4	; 0x04
    2b8c:	bd 81       	ldd	r27, Y+5	; 0x05
    2b8e:	81 3f       	cpi	r24, 0xF1	; 241
    2b90:	9f 4f       	sbci	r25, 0xFF	; 255
    2b92:	af 40       	sbci	r26, 0x0F	; 15
    2b94:	b1 05       	cpc	r27, r1
    2b96:	1c f4       	brge	.+6      	; 0x2b9e <st_check_boundaries+0x68>
    2b98:	8a ef       	ldi	r24, 0xFA	; 250
    2b9a:	89 83       	std	Y+1, r24	; 0x01
    2b9c:	43 c0       	rjmp	.+134    	; 0x2c24 <st_check_boundaries+0xee>
    2b9e:	8a 81       	ldd	r24, Y+2	; 0x02
    2ba0:	9b 81       	ldd	r25, Y+3	; 0x03
    2ba2:	ac 81       	ldd	r26, Y+4	; 0x04
    2ba4:	bd 81       	ldd	r27, Y+5	; 0x05
    2ba6:	bb 23       	and	r27, r27
    2ba8:	4c f0       	brlt	.+18     	; 0x2bbc <st_check_boundaries+0x86>
    2baa:	8a 81       	ldd	r24, Y+2	; 0x02
    2bac:	9b 81       	ldd	r25, Y+3	; 0x03
    2bae:	ac 81       	ldd	r26, Y+4	; 0x04
    2bb0:	bd 81       	ldd	r27, Y+5	; 0x05
    2bb2:	81 3f       	cpi	r24, 0xF1	; 241
    2bb4:	9f 4f       	sbci	r25, 0xFF	; 255
    2bb6:	af 40       	sbci	r26, 0x0F	; 15
    2bb8:	b1 05       	cpc	r27, r1
    2bba:	94 f0       	brlt	.+36     	; 0x2be0 <st_check_boundaries+0xaa>
    2bbc:	8e 81       	ldd	r24, Y+6	; 0x06
    2bbe:	9f 81       	ldd	r25, Y+7	; 0x07
    2bc0:	a8 85       	ldd	r26, Y+8	; 0x08
    2bc2:	b9 85       	ldd	r27, Y+9	; 0x09
    2bc4:	bb 23       	and	r27, r27
    2bc6:	64 f0       	brlt	.+24     	; 0x2be0 <st_check_boundaries+0xaa>
    2bc8:	8e 81       	ldd	r24, Y+6	; 0x06
    2bca:	9f 81       	ldd	r25, Y+7	; 0x07
    2bcc:	a8 85       	ldd	r26, Y+8	; 0x08
    2bce:	b9 85       	ldd	r27, Y+9	; 0x09
    2bd0:	81 3f       	cpi	r24, 0xF1	; 241
    2bd2:	9f 4f       	sbci	r25, 0xFF	; 255
    2bd4:	af 40       	sbci	r26, 0x0F	; 15
    2bd6:	b1 05       	cpc	r27, r1
    2bd8:	1c f4       	brge	.+6      	; 0x2be0 <st_check_boundaries+0xaa>
    2bda:	8b ef       	ldi	r24, 0xFB	; 251
    2bdc:	89 83       	std	Y+1, r24	; 0x01
    2bde:	22 c0       	rjmp	.+68     	; 0x2c24 <st_check_boundaries+0xee>
    2be0:	8e 81       	ldd	r24, Y+6	; 0x06
    2be2:	9f 81       	ldd	r25, Y+7	; 0x07
    2be4:	a8 85       	ldd	r26, Y+8	; 0x08
    2be6:	b9 85       	ldd	r27, Y+9	; 0x09
    2be8:	bb 23       	and	r27, r27
    2bea:	4c f0       	brlt	.+18     	; 0x2bfe <st_check_boundaries+0xc8>
    2bec:	8e 81       	ldd	r24, Y+6	; 0x06
    2bee:	9f 81       	ldd	r25, Y+7	; 0x07
    2bf0:	a8 85       	ldd	r26, Y+8	; 0x08
    2bf2:	b9 85       	ldd	r27, Y+9	; 0x09
    2bf4:	81 3f       	cpi	r24, 0xF1	; 241
    2bf6:	9f 4f       	sbci	r25, 0xFF	; 255
    2bf8:	af 40       	sbci	r26, 0x0F	; 15
    2bfa:	b1 05       	cpc	r27, r1
    2bfc:	94 f0       	brlt	.+36     	; 0x2c22 <st_check_boundaries+0xec>
    2bfe:	8a 81       	ldd	r24, Y+2	; 0x02
    2c00:	9b 81       	ldd	r25, Y+3	; 0x03
    2c02:	ac 81       	ldd	r26, Y+4	; 0x04
    2c04:	bd 81       	ldd	r27, Y+5	; 0x05
    2c06:	bb 23       	and	r27, r27
    2c08:	4c f0       	brlt	.+18     	; 0x2c1c <st_check_boundaries+0xe6>
    2c0a:	8a 81       	ldd	r24, Y+2	; 0x02
    2c0c:	9b 81       	ldd	r25, Y+3	; 0x03
    2c0e:	ac 81       	ldd	r26, Y+4	; 0x04
    2c10:	bd 81       	ldd	r27, Y+5	; 0x05
    2c12:	81 3f       	cpi	r24, 0xF1	; 241
    2c14:	9f 4f       	sbci	r25, 0xFF	; 255
    2c16:	af 40       	sbci	r26, 0x0F	; 15
    2c18:	b1 05       	cpc	r27, r1
    2c1a:	1c f0       	brlt	.+6      	; 0x2c22 <st_check_boundaries+0xec>
    2c1c:	89 ef       	ldi	r24, 0xF9	; 249
    2c1e:	89 83       	std	Y+1, r24	; 0x01
    2c20:	01 c0       	rjmp	.+2      	; 0x2c24 <st_check_boundaries+0xee>
    2c22:	19 82       	std	Y+1, r1	; 0x01
    2c24:	89 81       	ldd	r24, Y+1	; 0x01
    2c26:	29 96       	adiw	r28, 0x09	; 9
    2c28:	0f b6       	in	r0, 0x3f	; 63
    2c2a:	f8 94       	cli
    2c2c:	de bf       	out	0x3e, r29	; 62
    2c2e:	0f be       	out	0x3f, r0	; 63
    2c30:	cd bf       	out	0x3d, r28	; 61
    2c32:	df 91       	pop	r29
    2c34:	cf 91       	pop	r28
    2c36:	08 95       	ret

00002c38 <bmp2_i2c_read>:
    2c38:	0f 93       	push	r16
    2c3a:	1f 93       	push	r17
    2c3c:	cf 93       	push	r28
    2c3e:	df 93       	push	r29
    2c40:	cd b7       	in	r28, 0x3d	; 61
    2c42:	de b7       	in	r29, 0x3e	; 62
    2c44:	29 97       	sbiw	r28, 0x09	; 9
    2c46:	0f b6       	in	r0, 0x3f	; 63
    2c48:	f8 94       	cli
    2c4a:	de bf       	out	0x3e, r29	; 62
    2c4c:	0f be       	out	0x3f, r0	; 63
    2c4e:	cd bf       	out	0x3d, r28	; 61
    2c50:	89 83       	std	Y+1, r24	; 0x01
    2c52:	7b 83       	std	Y+3, r23	; 0x03
    2c54:	6a 83       	std	Y+2, r22	; 0x02
    2c56:	2c 83       	std	Y+4, r18	; 0x04
    2c58:	3d 83       	std	Y+5, r19	; 0x05
    2c5a:	4e 83       	std	Y+6, r20	; 0x06
    2c5c:	5f 83       	std	Y+7, r21	; 0x07
    2c5e:	19 87       	std	Y+9, r17	; 0x09
    2c60:	08 87       	std	Y+8, r16	; 0x08
    2c62:	88 85       	ldd	r24, Y+8	; 0x08
    2c64:	99 85       	ldd	r25, Y+9	; 0x09
    2c66:	fc 01       	movw	r30, r24
    2c68:	80 81       	ld	r24, Z
    2c6a:	80 93 6e 02 	sts	0x026E, r24	; 0x80026e <dev_addr>
    2c6e:	2c 81       	ldd	r18, Y+4	; 0x04
    2c70:	3d 81       	ldd	r19, Y+5	; 0x05
    2c72:	70 91 6e 02 	lds	r23, 0x026E	; 0x80026e <dev_addr>
    2c76:	8a 81       	ldd	r24, Y+2	; 0x02
    2c78:	9b 81       	ldd	r25, Y+3	; 0x03
    2c7a:	ac 01       	movw	r20, r24
    2c7c:	69 81       	ldd	r22, Y+1	; 0x01
    2c7e:	87 2f       	mov	r24, r23
    2c80:	0e 94 4d 06 	call	0xc9a	; 0xc9a <i2c_readReg>
    2c84:	29 96       	adiw	r28, 0x09	; 9
    2c86:	0f b6       	in	r0, 0x3f	; 63
    2c88:	f8 94       	cli
    2c8a:	de bf       	out	0x3e, r29	; 62
    2c8c:	0f be       	out	0x3f, r0	; 63
    2c8e:	cd bf       	out	0x3d, r28	; 61
    2c90:	df 91       	pop	r29
    2c92:	cf 91       	pop	r28
    2c94:	1f 91       	pop	r17
    2c96:	0f 91       	pop	r16
    2c98:	08 95       	ret

00002c9a <bmp2_i2c_write>:
    2c9a:	0f 93       	push	r16
    2c9c:	1f 93       	push	r17
    2c9e:	cf 93       	push	r28
    2ca0:	df 93       	push	r29
    2ca2:	cd b7       	in	r28, 0x3d	; 61
    2ca4:	de b7       	in	r29, 0x3e	; 62
    2ca6:	29 97       	sbiw	r28, 0x09	; 9
    2ca8:	0f b6       	in	r0, 0x3f	; 63
    2caa:	f8 94       	cli
    2cac:	de bf       	out	0x3e, r29	; 62
    2cae:	0f be       	out	0x3f, r0	; 63
    2cb0:	cd bf       	out	0x3d, r28	; 61
    2cb2:	89 83       	std	Y+1, r24	; 0x01
    2cb4:	7b 83       	std	Y+3, r23	; 0x03
    2cb6:	6a 83       	std	Y+2, r22	; 0x02
    2cb8:	2c 83       	std	Y+4, r18	; 0x04
    2cba:	3d 83       	std	Y+5, r19	; 0x05
    2cbc:	4e 83       	std	Y+6, r20	; 0x06
    2cbe:	5f 83       	std	Y+7, r21	; 0x07
    2cc0:	19 87       	std	Y+9, r17	; 0x09
    2cc2:	08 87       	std	Y+8, r16	; 0x08
    2cc4:	88 85       	ldd	r24, Y+8	; 0x08
    2cc6:	99 85       	ldd	r25, Y+9	; 0x09
    2cc8:	fc 01       	movw	r30, r24
    2cca:	80 81       	ld	r24, Z
    2ccc:	80 93 6e 02 	sts	0x026E, r24	; 0x80026e <dev_addr>
    2cd0:	2c 81       	ldd	r18, Y+4	; 0x04
    2cd2:	3d 81       	ldd	r19, Y+5	; 0x05
    2cd4:	70 91 6e 02 	lds	r23, 0x026E	; 0x80026e <dev_addr>
    2cd8:	8a 81       	ldd	r24, Y+2	; 0x02
    2cda:	9b 81       	ldd	r25, Y+3	; 0x03
    2cdc:	ac 01       	movw	r20, r24
    2cde:	69 81       	ldd	r22, Y+1	; 0x01
    2ce0:	87 2f       	mov	r24, r23
    2ce2:	0e 94 0a 06 	call	0xc14	; 0xc14 <i2c_writeReg>
    2ce6:	29 96       	adiw	r28, 0x09	; 9
    2ce8:	0f b6       	in	r0, 0x3f	; 63
    2cea:	f8 94       	cli
    2cec:	de bf       	out	0x3e, r29	; 62
    2cee:	0f be       	out	0x3f, r0	; 63
    2cf0:	cd bf       	out	0x3d, r28	; 61
    2cf2:	df 91       	pop	r29
    2cf4:	cf 91       	pop	r28
    2cf6:	1f 91       	pop	r17
    2cf8:	0f 91       	pop	r16
    2cfa:	08 95       	ret

00002cfc <bmp2_delay_us>:
    2cfc:	cf 93       	push	r28
    2cfe:	df 93       	push	r29
    2d00:	cd b7       	in	r28, 0x3d	; 61
    2d02:	de b7       	in	r29, 0x3e	; 62
    2d04:	2a 97       	sbiw	r28, 0x0a	; 10
    2d06:	0f b6       	in	r0, 0x3f	; 63
    2d08:	f8 94       	cli
    2d0a:	de bf       	out	0x3e, r29	; 62
    2d0c:	0f be       	out	0x3f, r0	; 63
    2d0e:	cd bf       	out	0x3d, r28	; 61
    2d10:	6d 83       	std	Y+5, r22	; 0x05
    2d12:	7e 83       	std	Y+6, r23	; 0x06
    2d14:	8f 83       	std	Y+7, r24	; 0x07
    2d16:	98 87       	std	Y+8, r25	; 0x08
    2d18:	5a 87       	std	Y+10, r21	; 0x0a
    2d1a:	49 87       	std	Y+9, r20	; 0x09
    2d1c:	19 82       	std	Y+1, r1	; 0x01
    2d1e:	1a 82       	std	Y+2, r1	; 0x02
    2d20:	1b 82       	std	Y+3, r1	; 0x03
    2d22:	1c 82       	std	Y+4, r1	; 0x04
    2d24:	0b c0       	rjmp	.+22     	; 0x2d3c <bmp2_delay_us+0x40>
    2d26:	89 81       	ldd	r24, Y+1	; 0x01
    2d28:	9a 81       	ldd	r25, Y+2	; 0x02
    2d2a:	ab 81       	ldd	r26, Y+3	; 0x03
    2d2c:	bc 81       	ldd	r27, Y+4	; 0x04
    2d2e:	01 96       	adiw	r24, 0x01	; 1
    2d30:	a1 1d       	adc	r26, r1
    2d32:	b1 1d       	adc	r27, r1
    2d34:	89 83       	std	Y+1, r24	; 0x01
    2d36:	9a 83       	std	Y+2, r25	; 0x02
    2d38:	ab 83       	std	Y+3, r26	; 0x03
    2d3a:	bc 83       	std	Y+4, r27	; 0x04
    2d3c:	29 81       	ldd	r18, Y+1	; 0x01
    2d3e:	3a 81       	ldd	r19, Y+2	; 0x02
    2d40:	4b 81       	ldd	r20, Y+3	; 0x03
    2d42:	5c 81       	ldd	r21, Y+4	; 0x04
    2d44:	8d 81       	ldd	r24, Y+5	; 0x05
    2d46:	9e 81       	ldd	r25, Y+6	; 0x06
    2d48:	af 81       	ldd	r26, Y+7	; 0x07
    2d4a:	b8 85       	ldd	r27, Y+8	; 0x08
    2d4c:	28 17       	cp	r18, r24
    2d4e:	39 07       	cpc	r19, r25
    2d50:	4a 07       	cpc	r20, r26
    2d52:	5b 07       	cpc	r21, r27
    2d54:	40 f3       	brcs	.-48     	; 0x2d26 <bmp2_delay_us+0x2a>
    2d56:	00 00       	nop
    2d58:	2a 96       	adiw	r28, 0x0a	; 10
    2d5a:	0f b6       	in	r0, 0x3f	; 63
    2d5c:	f8 94       	cli
    2d5e:	de bf       	out	0x3e, r29	; 62
    2d60:	0f be       	out	0x3f, r0	; 63
    2d62:	cd bf       	out	0x3d, r28	; 61
    2d64:	df 91       	pop	r29
    2d66:	cf 91       	pop	r28
    2d68:	08 95       	ret

00002d6a <get_data>:
    2d6a:	0f 93       	push	r16
    2d6c:	1f 93       	push	r17
    2d6e:	cf 93       	push	r28
    2d70:	df 93       	push	r29
    2d72:	cd b7       	in	r28, 0x3d	; 61
    2d74:	de b7       	in	r29, 0x3e	; 62
    2d76:	2d 97       	sbiw	r28, 0x0d	; 13
    2d78:	0f b6       	in	r0, 0x3f	; 63
    2d7a:	f8 94       	cli
    2d7c:	de bf       	out	0x3e, r29	; 62
    2d7e:	0f be       	out	0x3f, r0	; 63
    2d80:	cd bf       	out	0x3d, r28	; 61
    2d82:	6c 83       	std	Y+4, r22	; 0x04
    2d84:	7d 83       	std	Y+5, r23	; 0x05
    2d86:	8e 83       	std	Y+6, r24	; 0x06
    2d88:	9f 83       	std	Y+7, r25	; 0x07
    2d8a:	59 87       	std	Y+9, r21	; 0x09
    2d8c:	48 87       	std	Y+8, r20	; 0x08
    2d8e:	3b 87       	std	Y+11, r19	; 0x0b
    2d90:	2a 87       	std	Y+10, r18	; 0x0a
    2d92:	1d 87       	std	Y+13, r17	; 0x0d
    2d94:	0c 87       	std	Y+12, r16	; 0x0c
    2d96:	8f ef       	ldi	r24, 0xFF	; 255
    2d98:	89 83       	std	Y+1, r24	; 0x01
    2d9a:	2a 85       	ldd	r18, Y+10	; 0x0a
    2d9c:	3b 85       	ldd	r19, Y+11	; 0x0b
    2d9e:	ce 01       	movw	r24, r28
    2da0:	02 96       	adiw	r24, 0x02	; 2
    2da2:	b9 01       	movw	r22, r18
    2da4:	0e 94 15 0c 	call	0x182a	; 0x182a <bmp2_get_status>
    2da8:	89 83       	std	Y+1, r24	; 0x01
    2daa:	08 c0       	rjmp	.+16     	; 0x2dbc <get_data+0x52>
    2dac:	2a 85       	ldd	r18, Y+10	; 0x0a
    2dae:	3b 85       	ldd	r19, Y+11	; 0x0b
    2db0:	ce 01       	movw	r24, r28
    2db2:	02 96       	adiw	r24, 0x02	; 2
    2db4:	b9 01       	movw	r22, r18
    2db6:	0e 94 15 0c 	call	0x182a	; 0x182a <bmp2_get_status>
    2dba:	89 83       	std	Y+1, r24	; 0x01
    2dbc:	8a 81       	ldd	r24, Y+2	; 0x02
    2dbe:	81 30       	cpi	r24, 0x01	; 1
    2dc0:	a9 f3       	breq	.-22     	; 0x2dac <get_data+0x42>
    2dc2:	2a 85       	ldd	r18, Y+10	; 0x0a
    2dc4:	3b 85       	ldd	r19, Y+11	; 0x0b
    2dc6:	8c 85       	ldd	r24, Y+12	; 0x0c
    2dc8:	9d 85       	ldd	r25, Y+13	; 0x0d
    2dca:	b9 01       	movw	r22, r18
    2dcc:	0e 94 7d 0c 	call	0x18fa	; 0x18fa <bmp2_get_sensor_data>
    2dd0:	89 83       	std	Y+1, r24	; 0x01
    2dd2:	89 81       	ldd	r24, Y+1	; 0x01
    2dd4:	2d 96       	adiw	r28, 0x0d	; 13
    2dd6:	0f b6       	in	r0, 0x3f	; 63
    2dd8:	f8 94       	cli
    2dda:	de bf       	out	0x3e, r29	; 62
    2ddc:	0f be       	out	0x3f, r0	; 63
    2dde:	cd bf       	out	0x3d, r28	; 61
    2de0:	df 91       	pop	r29
    2de2:	cf 91       	pop	r28
    2de4:	1f 91       	pop	r17
    2de6:	0f 91       	pop	r16
    2de8:	08 95       	ret

00002dea <BMP280_init>:
    2dea:	cf 93       	push	r28
    2dec:	df 93       	push	r29
    2dee:	cd b7       	in	r28, 0x3d	; 61
    2df0:	de b7       	in	r29, 0x3e	; 62
    2df2:	8e ee       	ldi	r24, 0xEE	; 238
    2df4:	80 93 6e 02 	sts	0x026E, r24	; 0x80026e <dev_addr>
    2df8:	8c e1       	ldi	r24, 0x1C	; 28
    2dfa:	96 e1       	ldi	r25, 0x16	; 22
    2dfc:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <dev+0x6>
    2e00:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <dev+0x5>
    2e04:	8d e4       	ldi	r24, 0x4D	; 77
    2e06:	96 e1       	ldi	r25, 0x16	; 22
    2e08:	90 93 40 03 	sts	0x0340, r25	; 0x800340 <dev+0x8>
    2e0c:	80 93 3f 03 	sts	0x033F, r24	; 0x80033f <dev+0x7>
    2e10:	81 e0       	ldi	r24, 0x01	; 1
    2e12:	80 93 39 03 	sts	0x0339, r24	; 0x800339 <dev+0x1>
    2e16:	8e e6       	ldi	r24, 0x6E	; 110
    2e18:	92 e0       	ldi	r25, 0x02	; 2
    2e1a:	90 93 3b 03 	sts	0x033B, r25	; 0x80033b <dev+0x3>
    2e1e:	80 93 3a 03 	sts	0x033A, r24	; 0x80033a <dev+0x2>
    2e22:	8e e7       	ldi	r24, 0x7E	; 126
    2e24:	96 e1       	ldi	r25, 0x16	; 22
    2e26:	90 93 42 03 	sts	0x0342, r25	; 0x800342 <dev+0xa>
    2e2a:	80 93 41 03 	sts	0x0341, r24	; 0x800341 <dev+0x9>
    2e2e:	88 e3       	ldi	r24, 0x38	; 56
    2e30:	93 e0       	ldi	r25, 0x03	; 3
    2e32:	0e 94 e6 09 	call	0x13cc	; 0x13cc <bmp2_init>
    2e36:	80 93 61 03 	sts	0x0361, r24	; 0x800361 <rslt>
    2e3a:	68 e3       	ldi	r22, 0x38	; 56
    2e3c:	73 e0       	ldi	r23, 0x03	; 3
    2e3e:	82 e3       	ldi	r24, 0x32	; 50
    2e40:	93 e0       	ldi	r25, 0x03	; 3
    2e42:	0e 94 8f 0b 	call	0x171e	; 0x171e <bmp2_get_config>
    2e46:	80 93 61 03 	sts	0x0361, r24	; 0x800361 <rslt>
    2e4a:	10 92 36 03 	sts	0x0336, r1	; 0x800336 <conf+0x4>
    2e4e:	83 e0       	ldi	r24, 0x03	; 3
    2e50:	80 93 35 03 	sts	0x0335, r24	; 0x800335 <conf+0x3>
    2e54:	83 e0       	ldi	r24, 0x03	; 3
    2e56:	80 93 34 03 	sts	0x0334, r24	; 0x800334 <conf+0x2>
    2e5a:	68 e3       	ldi	r22, 0x38	; 56
    2e5c:	73 e0       	ldi	r23, 0x03	; 3
    2e5e:	82 e3       	ldi	r24, 0x32	; 50
    2e60:	93 e0       	ldi	r25, 0x03	; 3
    2e62:	0e 94 fb 0b 	call	0x17f6	; 0x17f6 <bmp2_set_config>
    2e66:	80 93 61 03 	sts	0x0361, r24	; 0x800361 <rslt>
    2e6a:	48 e3       	ldi	r20, 0x38	; 56
    2e6c:	53 e0       	ldi	r21, 0x03	; 3
    2e6e:	62 e3       	ldi	r22, 0x32	; 50
    2e70:	73 e0       	ldi	r23, 0x03	; 3
    2e72:	83 e0       	ldi	r24, 0x03	; 3
    2e74:	0e 94 5d 0c 	call	0x18ba	; 0x18ba <bmp2_set_power_mode>
    2e78:	80 93 61 03 	sts	0x0361, r24	; 0x800361 <rslt>
    2e7c:	48 e3       	ldi	r20, 0x38	; 56
    2e7e:	53 e0       	ldi	r21, 0x03	; 3
    2e80:	62 e3       	ldi	r22, 0x32	; 50
    2e82:	73 e0       	ldi	r23, 0x03	; 3
    2e84:	8c e6       	ldi	r24, 0x6C	; 108
    2e86:	93 e0       	ldi	r25, 0x03	; 3
    2e88:	0e 94 2a 0d 	call	0x1a54	; 0x1a54 <bmp2_compute_meas_time>
    2e8c:	80 93 61 03 	sts	0x0361, r24	; 0x800361 <rslt>
    2e90:	80 91 61 03 	lds	r24, 0x0361	; 0x800361 <rslt>
    2e94:	df 91       	pop	r29
    2e96:	cf 91       	pop	r28
    2e98:	08 95       	ret

00002e9a <ProcessLCD>:
			{
				SSD1306_drawPixel(x1+x,y+y1, ON, l_FrameBuffer);
			}
		}
	}
}
    2e9a:	cf 93       	push	r28
    2e9c:	df 93       	push	r29
    2e9e:	1f 92       	push	r1
    2ea0:	cd b7       	in	r28, 0x3d	; 61
    2ea2:	de b7       	in	r29, 0x3e	; 62
    2ea4:	89 83       	std	Y+1, r24	; 0x01
    2ea6:	80 91 70 03 	lds	r24, 0x0370	; 0x800370 <SSD1306FrameBuffer1>
    2eaa:	88 23       	and	r24, r24
    2eac:	09 f1       	breq	.+66     	; 0x2ef0 <ProcessLCD+0x56>
    2eae:	89 81       	ldd	r24, Y+1	; 0x01
    2eb0:	88 2f       	mov	r24, r24
    2eb2:	90 e0       	ldi	r25, 0x00	; 0
    2eb4:	81 30       	cpi	r24, 0x01	; 1
    2eb6:	91 05       	cpc	r25, r1
    2eb8:	59 f0       	breq	.+22     	; 0x2ed0 <ProcessLCD+0x36>
    2eba:	82 30       	cpi	r24, 0x02	; 2
    2ebc:	91 05       	cpc	r25, r1
    2ebe:	71 f0       	breq	.+28     	; 0x2edc <ProcessLCD+0x42>
    2ec0:	89 2b       	or	r24, r25
    2ec2:	09 f0       	breq	.+2      	; 0x2ec6 <ProcessLCD+0x2c>
    2ec4:	15 c0       	rjmp	.+42     	; 0x2ef0 <ProcessLCD+0x56>
    2ec6:	80 e7       	ldi	r24, 0x70	; 112
    2ec8:	93 e0       	ldi	r25, 0x03	; 3
    2eca:	0e 94 67 18 	call	0x30ce	; 0x30ce <SSD1306_UpdateLCDSPI>
    2ece:	10 c0       	rjmp	.+32     	; 0x2ef0 <ProcessLCD+0x56>
    2ed0:	68 e7       	ldi	r22, 0x78	; 120
    2ed2:	80 e7       	ldi	r24, 0x70	; 112
    2ed4:	93 e0       	ldi	r25, 0x03	; 3
    2ed6:	0e 94 95 17 	call	0x2f2a	; 0x2f2a <SSD1306_UpdateLCDI2C>
    2eda:	0a c0       	rjmp	.+20     	; 0x2ef0 <ProcessLCD+0x56>
    2edc:	80 e7       	ldi	r24, 0x70	; 112
    2ede:	93 e0       	ldi	r25, 0x03	; 3
    2ee0:	0e 94 67 18 	call	0x30ce	; 0x30ce <SSD1306_UpdateLCDSPI>
    2ee4:	68 e7       	ldi	r22, 0x78	; 120
    2ee6:	80 e7       	ldi	r24, 0x70	; 112
    2ee8:	93 e0       	ldi	r25, 0x03	; 3
    2eea:	0e 94 95 17 	call	0x2f2a	; 0x2f2a <SSD1306_UpdateLCDI2C>
    2eee:	00 00       	nop
    2ef0:	00 00       	nop
    2ef2:	0f 90       	pop	r0
    2ef4:	df 91       	pop	r29
    2ef6:	cf 91       	pop	r28
    2ef8:	08 95       	ret

00002efa <SSD1306_sendCommandI2C>:
    2efa:	cf 93       	push	r28
    2efc:	df 93       	push	r29
    2efe:	00 d0       	rcall	.+0      	; 0x2f00 <SSD1306_sendCommandI2C+0x6>
    2f00:	cd b7       	in	r28, 0x3d	; 61
    2f02:	de b7       	in	r29, 0x3e	; 62
    2f04:	89 83       	std	Y+1, r24	; 0x01
    2f06:	6a 83       	std	Y+2, r22	; 0x02
    2f08:	8a 81       	ldd	r24, Y+2	; 0x02
    2f0a:	0e 94 6d 05 	call	0xada	; 0xada <i2c_start>
    2f0e:	80 e0       	ldi	r24, 0x00	; 0
    2f10:	0e 94 b4 05 	call	0xb68	; 0xb68 <i2c_write>
    2f14:	89 81       	ldd	r24, Y+1	; 0x01
    2f16:	0e 94 b4 05 	call	0xb68	; 0xb68 <i2c_write>
    2f1a:	0e 94 a8 06 	call	0xd50	; 0xd50 <i2c_stop>
    2f1e:	00 00       	nop
    2f20:	0f 90       	pop	r0
    2f22:	0f 90       	pop	r0
    2f24:	df 91       	pop	r29
    2f26:	cf 91       	pop	r28
    2f28:	08 95       	ret

00002f2a <SSD1306_UpdateLCDI2C>:
    2f2a:	cf 93       	push	r28
    2f2c:	df 93       	push	r29
    2f2e:	cd b7       	in	r28, 0x3d	; 61
    2f30:	de b7       	in	r29, 0x3e	; 62
    2f32:	27 97       	sbiw	r28, 0x07	; 7
    2f34:	0f b6       	in	r0, 0x3f	; 63
    2f36:	f8 94       	cli
    2f38:	de bf       	out	0x3e, r29	; 62
    2f3a:	0f be       	out	0x3f, r0	; 63
    2f3c:	cd bf       	out	0x3d, r28	; 61
    2f3e:	9e 83       	std	Y+6, r25	; 0x06
    2f40:	8d 83       	std	Y+5, r24	; 0x05
    2f42:	6f 83       	std	Y+7, r22	; 0x07
    2f44:	6f 81       	ldd	r22, Y+7	; 0x07
    2f46:	81 e2       	ldi	r24, 0x21	; 33
    2f48:	0e 94 7d 17 	call	0x2efa	; 0x2efa <SSD1306_sendCommandI2C>
    2f4c:	6f 81       	ldd	r22, Y+7	; 0x07
    2f4e:	80 e0       	ldi	r24, 0x00	; 0
    2f50:	0e 94 7d 17 	call	0x2efa	; 0x2efa <SSD1306_sendCommandI2C>
    2f54:	6f 81       	ldd	r22, Y+7	; 0x07
    2f56:	8f e7       	ldi	r24, 0x7F	; 127
    2f58:	0e 94 7d 17 	call	0x2efa	; 0x2efa <SSD1306_sendCommandI2C>
    2f5c:	6f 81       	ldd	r22, Y+7	; 0x07
    2f5e:	82 e2       	ldi	r24, 0x22	; 34
    2f60:	0e 94 7d 17 	call	0x2efa	; 0x2efa <SSD1306_sendCommandI2C>
    2f64:	6f 81       	ldd	r22, Y+7	; 0x07
    2f66:	80 e0       	ldi	r24, 0x00	; 0
    2f68:	0e 94 7d 17 	call	0x2efa	; 0x2efa <SSD1306_sendCommandI2C>
    2f6c:	6f 81       	ldd	r22, Y+7	; 0x07
    2f6e:	87 e0       	ldi	r24, 0x07	; 7
    2f70:	0e 94 7d 17 	call	0x2efa	; 0x2efa <SSD1306_sendCommandI2C>
    2f74:	1a 82       	std	Y+2, r1	; 0x02
    2f76:	19 82       	std	Y+1, r1	; 0x01
    2f78:	2f c0       	rjmp	.+94     	; 0x2fd8 <SSD1306_UpdateLCDI2C+0xae>
    2f7a:	8f 81       	ldd	r24, Y+7	; 0x07
    2f7c:	0e 94 6d 05 	call	0xada	; 0xada <i2c_start>
    2f80:	80 e4       	ldi	r24, 0x40	; 64
    2f82:	0e 94 b4 05 	call	0xb68	; 0xb68 <i2c_write>
    2f86:	1c 82       	std	Y+4, r1	; 0x04
    2f88:	1b 82       	std	Y+3, r1	; 0x03
    2f8a:	1b c0       	rjmp	.+54     	; 0x2fc2 <SSD1306_UpdateLCDI2C+0x98>
    2f8c:	89 81       	ldd	r24, Y+1	; 0x01
    2f8e:	9a 81       	ldd	r25, Y+2	; 0x02
    2f90:	9c 01       	movw	r18, r24
    2f92:	22 95       	swap	r18
    2f94:	32 95       	swap	r19
    2f96:	30 7f       	andi	r19, 0xF0	; 240
    2f98:	32 27       	eor	r19, r18
    2f9a:	20 7f       	andi	r18, 0xF0	; 240
    2f9c:	32 27       	eor	r19, r18
    2f9e:	8b 81       	ldd	r24, Y+3	; 0x03
    2fa0:	9c 81       	ldd	r25, Y+4	; 0x04
    2fa2:	82 0f       	add	r24, r18
    2fa4:	93 1f       	adc	r25, r19
    2fa6:	2d 81       	ldd	r18, Y+5	; 0x05
    2fa8:	3e 81       	ldd	r19, Y+6	; 0x06
    2faa:	82 0f       	add	r24, r18
    2fac:	93 1f       	adc	r25, r19
    2fae:	01 96       	adiw	r24, 0x01	; 1
    2fb0:	fc 01       	movw	r30, r24
    2fb2:	80 81       	ld	r24, Z
    2fb4:	0e 94 b4 05 	call	0xb68	; 0xb68 <i2c_write>
    2fb8:	8b 81       	ldd	r24, Y+3	; 0x03
    2fba:	9c 81       	ldd	r25, Y+4	; 0x04
    2fbc:	01 96       	adiw	r24, 0x01	; 1
    2fbe:	9c 83       	std	Y+4, r25	; 0x04
    2fc0:	8b 83       	std	Y+3, r24	; 0x03
    2fc2:	8b 81       	ldd	r24, Y+3	; 0x03
    2fc4:	9c 81       	ldd	r25, Y+4	; 0x04
    2fc6:	40 97       	sbiw	r24, 0x10	; 16
    2fc8:	08 f3       	brcs	.-62     	; 0x2f8c <SSD1306_UpdateLCDI2C+0x62>
    2fca:	0e 94 a8 06 	call	0xd50	; 0xd50 <i2c_stop>
    2fce:	89 81       	ldd	r24, Y+1	; 0x01
    2fd0:	9a 81       	ldd	r25, Y+2	; 0x02
    2fd2:	01 96       	adiw	r24, 0x01	; 1
    2fd4:	9a 83       	std	Y+2, r25	; 0x02
    2fd6:	89 83       	std	Y+1, r24	; 0x01
    2fd8:	89 81       	ldd	r24, Y+1	; 0x01
    2fda:	9a 81       	ldd	r25, Y+2	; 0x02
    2fdc:	80 34       	cpi	r24, 0x40	; 64
    2fde:	91 05       	cpc	r25, r1
    2fe0:	60 f2       	brcs	.-104    	; 0x2f7a <SSD1306_UpdateLCDI2C+0x50>
    2fe2:	8d 81       	ldd	r24, Y+5	; 0x05
    2fe4:	9e 81       	ldd	r25, Y+6	; 0x06
    2fe6:	fc 01       	movw	r30, r24
    2fe8:	10 82       	st	Z, r1
    2fea:	00 00       	nop
    2fec:	27 96       	adiw	r28, 0x07	; 7
    2fee:	0f b6       	in	r0, 0x3f	; 63
    2ff0:	f8 94       	cli
    2ff2:	de bf       	out	0x3e, r29	; 62
    2ff4:	0f be       	out	0x3f, r0	; 63
    2ff6:	cd bf       	out	0x3d, r28	; 61
    2ff8:	df 91       	pop	r29
    2ffa:	cf 91       	pop	r28
    2ffc:	08 95       	ret

00002ffe <SSD1306_InitSPI>:
    2ffe:	cf 93       	push	r28
    3000:	df 93       	push	r29
    3002:	cd b7       	in	r28, 0x3d	; 61
    3004:	de b7       	in	r29, 0x3e	; 62
    3006:	81 e0       	ldi	r24, 0x01	; 1
    3008:	0e 94 97 1a 	call	0x352e	; 0x352e <GPIO_SetOledDC>
    300c:	81 e0       	ldi	r24, 0x01	; 1
    300e:	0e 94 bf 1a 	call	0x357e	; 0x357e <GPIO_SetOledCS>
    3012:	80 e0       	ldi	r24, 0x00	; 0
    3014:	0e 94 bf 1a 	call	0x357e	; 0x357e <GPIO_SetOledCS>
    3018:	80 e0       	ldi	r24, 0x00	; 0
    301a:	0e 94 97 1a 	call	0x352e	; 0x352e <GPIO_SetOledDC>
    301e:	8e ea       	ldi	r24, 0xAE	; 174
    3020:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    3024:	85 ed       	ldi	r24, 0xD5	; 213
    3026:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    302a:	80 e8       	ldi	r24, 0x80	; 128
    302c:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    3030:	88 ea       	ldi	r24, 0xA8	; 168
    3032:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    3036:	8f e7       	ldi	r24, 0x7F	; 127
    3038:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    303c:	83 ed       	ldi	r24, 0xD3	; 211
    303e:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    3042:	80 e0       	ldi	r24, 0x00	; 0
    3044:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    3048:	80 e4       	ldi	r24, 0x40	; 64
    304a:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    304e:	8d e8       	ldi	r24, 0x8D	; 141
    3050:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    3054:	84 e1       	ldi	r24, 0x14	; 20
    3056:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    305a:	80 e2       	ldi	r24, 0x20	; 32
    305c:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    3060:	80 e0       	ldi	r24, 0x00	; 0
    3062:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    3066:	81 ea       	ldi	r24, 0xA1	; 161
    3068:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    306c:	88 ec       	ldi	r24, 0xC8	; 200
    306e:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    3072:	8a ed       	ldi	r24, 0xDA	; 218
    3074:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    3078:	82 e1       	ldi	r24, 0x12	; 18
    307a:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    307e:	81 e8       	ldi	r24, 0x81	; 129
    3080:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    3084:	8f ec       	ldi	r24, 0xCF	; 207
    3086:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    308a:	89 ed       	ldi	r24, 0xD9	; 217
    308c:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    3090:	81 ef       	ldi	r24, 0xF1	; 241
    3092:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    3096:	8b ed       	ldi	r24, 0xDB	; 219
    3098:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    309c:	80 e4       	ldi	r24, 0x40	; 64
    309e:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    30a2:	84 ea       	ldi	r24, 0xA4	; 164
    30a4:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    30a8:	86 ea       	ldi	r24, 0xA6	; 166
    30aa:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    30ae:	8f ea       	ldi	r24, 0xAF	; 175
    30b0:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    30b4:	81 e0       	ldi	r24, 0x01	; 1
    30b6:	0e 94 97 1a 	call	0x352e	; 0x352e <GPIO_SetOledDC>
    30ba:	81 e0       	ldi	r24, 0x01	; 1
    30bc:	0e 94 bf 1a 	call	0x357e	; 0x357e <GPIO_SetOledCS>
    30c0:	81 e0       	ldi	r24, 0x01	; 1
    30c2:	80 93 70 03 	sts	0x0370, r24	; 0x800370 <SSD1306FrameBuffer1>
    30c6:	00 00       	nop
    30c8:	df 91       	pop	r29
    30ca:	cf 91       	pop	r28
    30cc:	08 95       	ret

000030ce <SSD1306_UpdateLCDSPI>:
    30ce:	cf 93       	push	r28
    30d0:	df 93       	push	r29
    30d2:	00 d0       	rcall	.+0      	; 0x30d4 <SSD1306_UpdateLCDSPI+0x6>
    30d4:	00 d0       	rcall	.+0      	; 0x30d6 <SSD1306_UpdateLCDSPI+0x8>
    30d6:	00 d0       	rcall	.+0      	; 0x30d8 <SSD1306_UpdateLCDSPI+0xa>
    30d8:	cd b7       	in	r28, 0x3d	; 61
    30da:	de b7       	in	r29, 0x3e	; 62
    30dc:	9e 83       	std	Y+6, r25	; 0x06
    30de:	8d 83       	std	Y+5, r24	; 0x05
    30e0:	80 e0       	ldi	r24, 0x00	; 0
    30e2:	0e 94 bf 1a 	call	0x357e	; 0x357e <GPIO_SetOledCS>
    30e6:	80 e0       	ldi	r24, 0x00	; 0
    30e8:	0e 94 97 1a 	call	0x352e	; 0x352e <GPIO_SetOledDC>
    30ec:	81 e2       	ldi	r24, 0x21	; 33
    30ee:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    30f2:	80 e0       	ldi	r24, 0x00	; 0
    30f4:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    30f8:	8f e7       	ldi	r24, 0x7F	; 127
    30fa:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    30fe:	82 e2       	ldi	r24, 0x22	; 34
    3100:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    3104:	80 e0       	ldi	r24, 0x00	; 0
    3106:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    310a:	87 e0       	ldi	r24, 0x07	; 7
    310c:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    3110:	81 e0       	ldi	r24, 0x01	; 1
    3112:	0e 94 97 1a 	call	0x352e	; 0x352e <GPIO_SetOledDC>
    3116:	1a 82       	std	Y+2, r1	; 0x02
    3118:	19 82       	std	Y+1, r1	; 0x01
    311a:	27 c0       	rjmp	.+78     	; 0x316a <SSD1306_UpdateLCDSPI+0x9c>
    311c:	1c 82       	std	Y+4, r1	; 0x04
    311e:	1b 82       	std	Y+3, r1	; 0x03
    3120:	1b c0       	rjmp	.+54     	; 0x3158 <SSD1306_UpdateLCDSPI+0x8a>
    3122:	89 81       	ldd	r24, Y+1	; 0x01
    3124:	9a 81       	ldd	r25, Y+2	; 0x02
    3126:	9c 01       	movw	r18, r24
    3128:	22 95       	swap	r18
    312a:	32 95       	swap	r19
    312c:	30 7f       	andi	r19, 0xF0	; 240
    312e:	32 27       	eor	r19, r18
    3130:	20 7f       	andi	r18, 0xF0	; 240
    3132:	32 27       	eor	r19, r18
    3134:	8b 81       	ldd	r24, Y+3	; 0x03
    3136:	9c 81       	ldd	r25, Y+4	; 0x04
    3138:	82 0f       	add	r24, r18
    313a:	93 1f       	adc	r25, r19
    313c:	2d 81       	ldd	r18, Y+5	; 0x05
    313e:	3e 81       	ldd	r19, Y+6	; 0x06
    3140:	82 0f       	add	r24, r18
    3142:	93 1f       	adc	r25, r19
    3144:	01 96       	adiw	r24, 0x01	; 1
    3146:	fc 01       	movw	r30, r24
    3148:	80 81       	ld	r24, Z
    314a:	0e 94 49 07 	call	0xe92	; 0xe92 <spi_send>
    314e:	8b 81       	ldd	r24, Y+3	; 0x03
    3150:	9c 81       	ldd	r25, Y+4	; 0x04
    3152:	01 96       	adiw	r24, 0x01	; 1
    3154:	9c 83       	std	Y+4, r25	; 0x04
    3156:	8b 83       	std	Y+3, r24	; 0x03
    3158:	8b 81       	ldd	r24, Y+3	; 0x03
    315a:	9c 81       	ldd	r25, Y+4	; 0x04
    315c:	40 97       	sbiw	r24, 0x10	; 16
    315e:	08 f3       	brcs	.-62     	; 0x3122 <SSD1306_UpdateLCDSPI+0x54>
    3160:	89 81       	ldd	r24, Y+1	; 0x01
    3162:	9a 81       	ldd	r25, Y+2	; 0x02
    3164:	01 96       	adiw	r24, 0x01	; 1
    3166:	9a 83       	std	Y+2, r25	; 0x02
    3168:	89 83       	std	Y+1, r24	; 0x01
    316a:	89 81       	ldd	r24, Y+1	; 0x01
    316c:	9a 81       	ldd	r25, Y+2	; 0x02
    316e:	80 34       	cpi	r24, 0x40	; 64
    3170:	91 05       	cpc	r25, r1
    3172:	a0 f2       	brcs	.-88     	; 0x311c <SSD1306_UpdateLCDSPI+0x4e>
    3174:	81 e0       	ldi	r24, 0x01	; 1
    3176:	0e 94 bf 1a 	call	0x357e	; 0x357e <GPIO_SetOledCS>
    317a:	8d 81       	ldd	r24, Y+5	; 0x05
    317c:	9e 81       	ldd	r25, Y+6	; 0x06
    317e:	fc 01       	movw	r30, r24
    3180:	10 82       	st	Z, r1
    3182:	00 00       	nop
    3184:	26 96       	adiw	r28, 0x06	; 6
    3186:	0f b6       	in	r0, 0x3f	; 63
    3188:	f8 94       	cli
    318a:	de bf       	out	0x3e, r29	; 62
    318c:	0f be       	out	0x3f, r0	; 63
    318e:	cd bf       	out	0x3d, r28	; 61
    3190:	df 91       	pop	r29
    3192:	cf 91       	pop	r28
    3194:	08 95       	ret

00003196 <SSD1306_clear>:


void SSD1306_clear(struct _SSD1306FrameBuffer* l_FrameBuffer) 
{
    3196:	cf 93       	push	r28
    3198:	df 93       	push	r29
    319a:	00 d0       	rcall	.+0      	; 0x319c <SSD1306_clear+0x6>
    319c:	00 d0       	rcall	.+0      	; 0x319e <SSD1306_clear+0x8>
    319e:	cd b7       	in	r28, 0x3d	; 61
    31a0:	de b7       	in	r29, 0x3e	; 62
    31a2:	9c 83       	std	Y+4, r25	; 0x04
    31a4:	8b 83       	std	Y+3, r24	; 0x03
	for (uint16_t buffer_location = 0; buffer_location < SSD1306_BUFFERSIZE; buffer_location++) 
    31a6:	1a 82       	std	Y+2, r1	; 0x02
    31a8:	19 82       	std	Y+1, r1	; 0x01
    31aa:	0e c0       	rjmp	.+28     	; 0x31c8 <SSD1306_clear+0x32>
	{
		l_FrameBuffer->Framebuffer[buffer_location] = 0x00;
    31ac:	2b 81       	ldd	r18, Y+3	; 0x03
    31ae:	3c 81       	ldd	r19, Y+4	; 0x04
    31b0:	89 81       	ldd	r24, Y+1	; 0x01
    31b2:	9a 81       	ldd	r25, Y+2	; 0x02
    31b4:	82 0f       	add	r24, r18
    31b6:	93 1f       	adc	r25, r19
    31b8:	01 96       	adiw	r24, 0x01	; 1
    31ba:	fc 01       	movw	r30, r24
    31bc:	10 82       	st	Z, r1
}


void SSD1306_clear(struct _SSD1306FrameBuffer* l_FrameBuffer) 
{
	for (uint16_t buffer_location = 0; buffer_location < SSD1306_BUFFERSIZE; buffer_location++) 
    31be:	89 81       	ldd	r24, Y+1	; 0x01
    31c0:	9a 81       	ldd	r25, Y+2	; 0x02
    31c2:	01 96       	adiw	r24, 0x01	; 1
    31c4:	9a 83       	std	Y+2, r25	; 0x02
    31c6:	89 83       	std	Y+1, r24	; 0x01
    31c8:	89 81       	ldd	r24, Y+1	; 0x01
    31ca:	9a 81       	ldd	r25, Y+2	; 0x02
    31cc:	81 15       	cp	r24, r1
    31ce:	94 40       	sbci	r25, 0x04	; 4
    31d0:	68 f3       	brcs	.-38     	; 0x31ac <SSD1306_clear+0x16>
	{
		l_FrameBuffer->Framebuffer[buffer_location] = 0x00;
	}
	
	l_FrameBuffer->IsDirty=1;
    31d2:	8b 81       	ldd	r24, Y+3	; 0x03
    31d4:	9c 81       	ldd	r25, Y+4	; 0x04
    31d6:	21 e0       	ldi	r18, 0x01	; 1
    31d8:	fc 01       	movw	r30, r24
    31da:	20 83       	st	Z, r18
}
    31dc:	00 00       	nop
    31de:	0f 90       	pop	r0
    31e0:	0f 90       	pop	r0
    31e2:	0f 90       	pop	r0
    31e4:	0f 90       	pop	r0
    31e6:	df 91       	pop	r29
    31e8:	cf 91       	pop	r28
    31ea:	08 95       	ret

000031ec <SSD1306_putc>:


void SSD1306_putc(uint8_t X, uint8_t Y, uint8_t Character, uint8_t FontSize, struct _SSD1306FrameBuffer* l_FrameBuffer)
{
    31ec:	0f 93       	push	r16
    31ee:	1f 93       	push	r17
    31f0:	cf 93       	push	r28
    31f2:	df 93       	push	r29
    31f4:	cd b7       	in	r28, 0x3d	; 61
    31f6:	de b7       	in	r29, 0x3e	; 62
    31f8:	60 97       	sbiw	r28, 0x10	; 16
    31fa:	0f b6       	in	r0, 0x3f	; 63
    31fc:	f8 94       	cli
    31fe:	de bf       	out	0x3e, r29	; 62
    3200:	0f be       	out	0x3f, r0	; 63
    3202:	cd bf       	out	0x3d, r28	; 61
    3204:	8b 87       	std	Y+11, r24	; 0x0b
    3206:	6c 87       	std	Y+12, r22	; 0x0c
    3208:	4d 87       	std	Y+13, r20	; 0x0d
    320a:	2e 87       	std	Y+14, r18	; 0x0e
    320c:	18 8b       	std	Y+16, r17	; 0x10
    320e:	0f 87       	std	Y+15, r16	; 0x0f
	// X goes from 0 to 64 (for an 48x64 display). Y goes from 0 to 5 (6 lines)
	uint8_t l_Counter=0;
    3210:	19 82       	std	Y+1, r1	; 0x01
	
	switch (FontSize)
    3212:	8e 85       	ldd	r24, Y+14	; 0x0e
    3214:	88 2f       	mov	r24, r24
    3216:	90 e0       	ldi	r25, 0x00	; 0
    3218:	85 30       	cpi	r24, 0x05	; 5
    321a:	91 05       	cpc	r25, r1
    321c:	09 f4       	brne	.+2      	; 0x3220 <SSD1306_putc+0x34>
    321e:	44 c0       	rjmp	.+136    	; 0x32a8 <SSD1306_putc+0xbc>
    3220:	87 30       	cpi	r24, 0x07	; 7
    3222:	91 05       	cpc	r25, r1
    3224:	09 f4       	brne	.+2      	; 0x3228 <SSD1306_putc+0x3c>
    3226:	7f c0       	rjmp	.+254    	; 0x3326 <SSD1306_putc+0x13a>
    3228:	03 97       	sbiw	r24, 0x03	; 3
    322a:	09 f0       	breq	.+2      	; 0x322e <SSD1306_putc+0x42>
    322c:	c0 c0       	rjmp	.+384    	; 0x33ae <SSD1306_putc+0x1c2>
	{
		case FONTSMALL:
		for (l_Counter=0;l_Counter<3;l_Counter++)
    322e:	19 82       	std	Y+1, r1	; 0x01
    3230:	37 c0       	rjmp	.+110    	; 0x32a0 <SSD1306_putc+0xb4>
		{
			l_FrameBuffer->Framebuffer[X + l_Counter + Y*SSD1306_WIDTH] = pgm_read_byte (&(g_Font3[ (3 * (Character - 0x20)) + l_Counter]));
    3232:	8b 85       	ldd	r24, Y+11	; 0x0b
    3234:	28 2f       	mov	r18, r24
    3236:	30 e0       	ldi	r19, 0x00	; 0
    3238:	89 81       	ldd	r24, Y+1	; 0x01
    323a:	88 2f       	mov	r24, r24
    323c:	90 e0       	ldi	r25, 0x00	; 0
    323e:	28 0f       	add	r18, r24
    3240:	39 1f       	adc	r19, r25
    3242:	8c 85       	ldd	r24, Y+12	; 0x0c
    3244:	88 2f       	mov	r24, r24
    3246:	90 e0       	ldi	r25, 0x00	; 0
    3248:	96 95       	lsr	r25
    324a:	98 2f       	mov	r25, r24
    324c:	88 27       	eor	r24, r24
    324e:	97 95       	ror	r25
    3250:	87 95       	ror	r24
    3252:	a9 01       	movw	r20, r18
    3254:	48 0f       	add	r20, r24
    3256:	59 1f       	adc	r21, r25
    3258:	8d 85       	ldd	r24, Y+13	; 0x0d
    325a:	88 2f       	mov	r24, r24
    325c:	90 e0       	ldi	r25, 0x00	; 0
    325e:	9c 01       	movw	r18, r24
    3260:	20 52       	subi	r18, 0x20	; 32
    3262:	31 09       	sbc	r19, r1
    3264:	c9 01       	movw	r24, r18
    3266:	88 0f       	add	r24, r24
    3268:	99 1f       	adc	r25, r25
    326a:	28 0f       	add	r18, r24
    326c:	39 1f       	adc	r19, r25
    326e:	89 81       	ldd	r24, Y+1	; 0x01
    3270:	88 2f       	mov	r24, r24
    3272:	90 e0       	ldi	r25, 0x00	; 0
    3274:	82 0f       	add	r24, r18
    3276:	93 1f       	adc	r25, r19
    3278:	8c 53       	subi	r24, 0x3C	; 60
    327a:	9e 4f       	sbci	r25, 0xFE	; 254
    327c:	9b 83       	std	Y+3, r25	; 0x03
    327e:	8a 83       	std	Y+2, r24	; 0x02
    3280:	8a 81       	ldd	r24, Y+2	; 0x02
    3282:	9b 81       	ldd	r25, Y+3	; 0x03
    3284:	fc 01       	movw	r30, r24
    3286:	84 91       	lpm	r24, Z
    3288:	8c 83       	std	Y+4, r24	; 0x04
    328a:	2c 81       	ldd	r18, Y+4	; 0x04
    328c:	8f 85       	ldd	r24, Y+15	; 0x0f
    328e:	98 89       	ldd	r25, Y+16	; 0x10
    3290:	84 0f       	add	r24, r20
    3292:	95 1f       	adc	r25, r21
    3294:	01 96       	adiw	r24, 0x01	; 1
    3296:	fc 01       	movw	r30, r24
    3298:	20 83       	st	Z, r18
	uint8_t l_Counter=0;
	
	switch (FontSize)
	{
		case FONTSMALL:
		for (l_Counter=0;l_Counter<3;l_Counter++)
    329a:	89 81       	ldd	r24, Y+1	; 0x01
    329c:	8f 5f       	subi	r24, 0xFF	; 255
    329e:	89 83       	std	Y+1, r24	; 0x01
    32a0:	89 81       	ldd	r24, Y+1	; 0x01
    32a2:	83 30       	cpi	r24, 0x03	; 3
    32a4:	30 f2       	brcs	.-116    	; 0x3232 <SSD1306_putc+0x46>
		{
			l_FrameBuffer->Framebuffer[X + l_Counter + Y*SSD1306_WIDTH] = pgm_read_byte (&(g_Font3[ (3 * (Character - 0x20)) + l_Counter]));
		}
		break;
    32a6:	84 c0       	rjmp	.+264    	; 0x33b0 <SSD1306_putc+0x1c4>
		
		case FONTMEDIUM:
		for (l_Counter=0;l_Counter<5;l_Counter++)
    32a8:	19 82       	std	Y+1, r1	; 0x01
    32aa:	39 c0       	rjmp	.+114    	; 0x331e <SSD1306_putc+0x132>
		{
			l_FrameBuffer->Framebuffer[X + l_Counter + Y*SSD1306_WIDTH] = pgm_read_byte (&(g_Font5[ (5 * (Character - 0x20)) + l_Counter]));
    32ac:	8b 85       	ldd	r24, Y+11	; 0x0b
    32ae:	28 2f       	mov	r18, r24
    32b0:	30 e0       	ldi	r19, 0x00	; 0
    32b2:	89 81       	ldd	r24, Y+1	; 0x01
    32b4:	88 2f       	mov	r24, r24
    32b6:	90 e0       	ldi	r25, 0x00	; 0
    32b8:	28 0f       	add	r18, r24
    32ba:	39 1f       	adc	r19, r25
    32bc:	8c 85       	ldd	r24, Y+12	; 0x0c
    32be:	88 2f       	mov	r24, r24
    32c0:	90 e0       	ldi	r25, 0x00	; 0
    32c2:	96 95       	lsr	r25
    32c4:	98 2f       	mov	r25, r24
    32c6:	88 27       	eor	r24, r24
    32c8:	97 95       	ror	r25
    32ca:	87 95       	ror	r24
    32cc:	a9 01       	movw	r20, r18
    32ce:	48 0f       	add	r20, r24
    32d0:	59 1f       	adc	r21, r25
    32d2:	8d 85       	ldd	r24, Y+13	; 0x0d
    32d4:	88 2f       	mov	r24, r24
    32d6:	90 e0       	ldi	r25, 0x00	; 0
    32d8:	9c 01       	movw	r18, r24
    32da:	20 52       	subi	r18, 0x20	; 32
    32dc:	31 09       	sbc	r19, r1
    32de:	c9 01       	movw	r24, r18
    32e0:	88 0f       	add	r24, r24
    32e2:	99 1f       	adc	r25, r25
    32e4:	88 0f       	add	r24, r24
    32e6:	99 1f       	adc	r25, r25
    32e8:	28 0f       	add	r18, r24
    32ea:	39 1f       	adc	r19, r25
    32ec:	89 81       	ldd	r24, Y+1	; 0x01
    32ee:	88 2f       	mov	r24, r24
    32f0:	90 e0       	ldi	r25, 0x00	; 0
    32f2:	82 0f       	add	r24, r18
    32f4:	93 1f       	adc	r25, r19
    32f6:	89 57       	subi	r24, 0x79	; 121
    32f8:	9d 4f       	sbci	r25, 0xFD	; 253
    32fa:	9e 83       	std	Y+6, r25	; 0x06
    32fc:	8d 83       	std	Y+5, r24	; 0x05
    32fe:	8d 81       	ldd	r24, Y+5	; 0x05
    3300:	9e 81       	ldd	r25, Y+6	; 0x06
    3302:	fc 01       	movw	r30, r24
    3304:	84 91       	lpm	r24, Z
    3306:	8f 83       	std	Y+7, r24	; 0x07
    3308:	2f 81       	ldd	r18, Y+7	; 0x07
    330a:	8f 85       	ldd	r24, Y+15	; 0x0f
    330c:	98 89       	ldd	r25, Y+16	; 0x10
    330e:	84 0f       	add	r24, r20
    3310:	95 1f       	adc	r25, r21
    3312:	01 96       	adiw	r24, 0x01	; 1
    3314:	fc 01       	movw	r30, r24
    3316:	20 83       	st	Z, r18
			l_FrameBuffer->Framebuffer[X + l_Counter + Y*SSD1306_WIDTH] = pgm_read_byte (&(g_Font3[ (3 * (Character - 0x20)) + l_Counter]));
		}
		break;
		
		case FONTMEDIUM:
		for (l_Counter=0;l_Counter<5;l_Counter++)
    3318:	89 81       	ldd	r24, Y+1	; 0x01
    331a:	8f 5f       	subi	r24, 0xFF	; 255
    331c:	89 83       	std	Y+1, r24	; 0x01
    331e:	89 81       	ldd	r24, Y+1	; 0x01
    3320:	85 30       	cpi	r24, 0x05	; 5
    3322:	20 f2       	brcs	.-120    	; 0x32ac <SSD1306_putc+0xc0>
		{
			l_FrameBuffer->Framebuffer[X + l_Counter + Y*SSD1306_WIDTH] = pgm_read_byte (&(g_Font5[ (5 * (Character - 0x20)) + l_Counter]));
		}
		break;
    3324:	45 c0       	rjmp	.+138    	; 0x33b0 <SSD1306_putc+0x1c4>
		
		case FONTLARGE:
		for (l_Counter=0;l_Counter<7;l_Counter++)
    3326:	19 82       	std	Y+1, r1	; 0x01
    3328:	3d c0       	rjmp	.+122    	; 0x33a4 <SSD1306_putc+0x1b8>
		{
			l_FrameBuffer->Framebuffer[X + l_Counter + Y*SSD1306_WIDTH] = pgm_read_byte (&(g_Font7[ (7 * (Character - 0x20)) + l_Counter]));
    332a:	8b 85       	ldd	r24, Y+11	; 0x0b
    332c:	28 2f       	mov	r18, r24
    332e:	30 e0       	ldi	r19, 0x00	; 0
    3330:	89 81       	ldd	r24, Y+1	; 0x01
    3332:	88 2f       	mov	r24, r24
    3334:	90 e0       	ldi	r25, 0x00	; 0
    3336:	28 0f       	add	r18, r24
    3338:	39 1f       	adc	r19, r25
    333a:	8c 85       	ldd	r24, Y+12	; 0x0c
    333c:	88 2f       	mov	r24, r24
    333e:	90 e0       	ldi	r25, 0x00	; 0
    3340:	96 95       	lsr	r25
    3342:	98 2f       	mov	r25, r24
    3344:	88 27       	eor	r24, r24
    3346:	97 95       	ror	r25
    3348:	87 95       	ror	r24
    334a:	a9 01       	movw	r20, r18
    334c:	48 0f       	add	r20, r24
    334e:	59 1f       	adc	r21, r25
    3350:	8d 85       	ldd	r24, Y+13	; 0x0d
    3352:	88 2f       	mov	r24, r24
    3354:	90 e0       	ldi	r25, 0x00	; 0
    3356:	9c 01       	movw	r18, r24
    3358:	20 52       	subi	r18, 0x20	; 32
    335a:	31 09       	sbc	r19, r1
    335c:	c9 01       	movw	r24, r18
    335e:	88 0f       	add	r24, r24
    3360:	99 1f       	adc	r25, r25
    3362:	88 0f       	add	r24, r24
    3364:	99 1f       	adc	r25, r25
    3366:	88 0f       	add	r24, r24
    3368:	99 1f       	adc	r25, r25
    336a:	bc 01       	movw	r22, r24
    336c:	62 1b       	sub	r22, r18
    336e:	73 0b       	sbc	r23, r19
    3370:	9b 01       	movw	r18, r22
    3372:	89 81       	ldd	r24, Y+1	; 0x01
    3374:	88 2f       	mov	r24, r24
    3376:	90 e0       	ldi	r25, 0x00	; 0
    3378:	82 0f       	add	r24, r18
    337a:	93 1f       	adc	r25, r19
    337c:	84 59       	subi	r24, 0x94	; 148
    337e:	9b 4f       	sbci	r25, 0xFB	; 251
    3380:	99 87       	std	Y+9, r25	; 0x09
    3382:	88 87       	std	Y+8, r24	; 0x08
    3384:	88 85       	ldd	r24, Y+8	; 0x08
    3386:	99 85       	ldd	r25, Y+9	; 0x09
    3388:	fc 01       	movw	r30, r24
    338a:	84 91       	lpm	r24, Z
    338c:	8a 87       	std	Y+10, r24	; 0x0a
    338e:	2a 85       	ldd	r18, Y+10	; 0x0a
    3390:	8f 85       	ldd	r24, Y+15	; 0x0f
    3392:	98 89       	ldd	r25, Y+16	; 0x10
    3394:	84 0f       	add	r24, r20
    3396:	95 1f       	adc	r25, r21
    3398:	01 96       	adiw	r24, 0x01	; 1
    339a:	fc 01       	movw	r30, r24
    339c:	20 83       	st	Z, r18
			l_FrameBuffer->Framebuffer[X + l_Counter + Y*SSD1306_WIDTH] = pgm_read_byte (&(g_Font5[ (5 * (Character - 0x20)) + l_Counter]));
		}
		break;
		
		case FONTLARGE:
		for (l_Counter=0;l_Counter<7;l_Counter++)
    339e:	89 81       	ldd	r24, Y+1	; 0x01
    33a0:	8f 5f       	subi	r24, 0xFF	; 255
    33a2:	89 83       	std	Y+1, r24	; 0x01
    33a4:	89 81       	ldd	r24, Y+1	; 0x01
    33a6:	87 30       	cpi	r24, 0x07	; 7
    33a8:	08 f4       	brcc	.+2      	; 0x33ac <SSD1306_putc+0x1c0>
    33aa:	bf cf       	rjmp	.-130    	; 0x332a <SSD1306_putc+0x13e>
		{
			l_FrameBuffer->Framebuffer[X + l_Counter + Y*SSD1306_WIDTH] = pgm_read_byte (&(g_Font7[ (7 * (Character - 0x20)) + l_Counter]));
		}
		break;
    33ac:	01 c0       	rjmp	.+2      	; 0x33b0 <SSD1306_putc+0x1c4>
		
		default:
			while(1);	// error
    33ae:	ff cf       	rjmp	.-2      	; 0x33ae <SSD1306_putc+0x1c2>
		break;
	}
	
	l_FrameBuffer->IsDirty=1;
    33b0:	8f 85       	ldd	r24, Y+15	; 0x0f
    33b2:	98 89       	ldd	r25, Y+16	; 0x10
    33b4:	21 e0       	ldi	r18, 0x01	; 1
    33b6:	fc 01       	movw	r30, r24
    33b8:	20 83       	st	Z, r18
}
    33ba:	00 00       	nop
    33bc:	60 96       	adiw	r28, 0x10	; 16
    33be:	0f b6       	in	r0, 0x3f	; 63
    33c0:	f8 94       	cli
    33c2:	de bf       	out	0x3e, r29	; 62
    33c4:	0f be       	out	0x3f, r0	; 63
    33c6:	cd bf       	out	0x3d, r28	; 61
    33c8:	df 91       	pop	r29
    33ca:	cf 91       	pop	r28
    33cc:	1f 91       	pop	r17
    33ce:	0f 91       	pop	r16
    33d0:	08 95       	ret

000033d2 <SSD1306_puts>:


void SSD1306_puts(uint8_t X, uint8_t Y, const char Text[], uint8_t FontSize, struct _SSD1306FrameBuffer* l_FrameBuffer)
{
    33d2:	0f 93       	push	r16
    33d4:	1f 93       	push	r17
    33d6:	cf 93       	push	r28
    33d8:	df 93       	push	r29
    33da:	cd b7       	in	r28, 0x3d	; 61
    33dc:	de b7       	in	r29, 0x3e	; 62
    33de:	28 97       	sbiw	r28, 0x08	; 8
    33e0:	0f b6       	in	r0, 0x3f	; 63
    33e2:	f8 94       	cli
    33e4:	de bf       	out	0x3e, r29	; 62
    33e6:	0f be       	out	0x3f, r0	; 63
    33e8:	cd bf       	out	0x3d, r28	; 61
    33ea:	8a 83       	std	Y+2, r24	; 0x02
    33ec:	6b 83       	std	Y+3, r22	; 0x03
    33ee:	5d 83       	std	Y+5, r21	; 0x05
    33f0:	4c 83       	std	Y+4, r20	; 0x04
    33f2:	2e 83       	std	Y+6, r18	; 0x06
    33f4:	18 87       	std	Y+8, r17	; 0x08
    33f6:	0f 83       	std	Y+7, r16	; 0x07
	// X goes from 0 to 64 (for an 48x64 display). Y goes from 0 to 5 (6 lines)
	uint8_t l_Index = 0;
    33f8:	19 82       	std	Y+1, r1	; 0x01
	
	while (Text[l_Index]!=0)
    33fa:	20 c0       	rjmp	.+64     	; 0x343c <SSD1306_puts+0x6a>
	{
		SSD1306_putc (X + (l_Index * (FontSize + 1)), Y ,Text[l_Index], FontSize, l_FrameBuffer);	// Fontsize+1 is to add a space between the letters
    33fc:	89 81       	ldd	r24, Y+1	; 0x01
    33fe:	88 2f       	mov	r24, r24
    3400:	90 e0       	ldi	r25, 0x00	; 0
    3402:	2c 81       	ldd	r18, Y+4	; 0x04
    3404:	3d 81       	ldd	r19, Y+5	; 0x05
    3406:	82 0f       	add	r24, r18
    3408:	93 1f       	adc	r25, r19
    340a:	fc 01       	movw	r30, r24
    340c:	40 81       	ld	r20, Z
    340e:	8e 81       	ldd	r24, Y+6	; 0x06
    3410:	88 2f       	mov	r24, r24
    3412:	90 e0       	ldi	r25, 0x00	; 0
    3414:	01 96       	adiw	r24, 0x01	; 1
    3416:	98 2f       	mov	r25, r24
    3418:	89 81       	ldd	r24, Y+1	; 0x01
    341a:	98 9f       	mul	r25, r24
    341c:	90 2d       	mov	r25, r0
    341e:	11 24       	eor	r1, r1
    3420:	8a 81       	ldd	r24, Y+2	; 0x02
    3422:	39 2f       	mov	r19, r25
    3424:	38 0f       	add	r19, r24
    3426:	8f 81       	ldd	r24, Y+7	; 0x07
    3428:	98 85       	ldd	r25, Y+8	; 0x08
    342a:	8c 01       	movw	r16, r24
    342c:	2e 81       	ldd	r18, Y+6	; 0x06
    342e:	6b 81       	ldd	r22, Y+3	; 0x03
    3430:	83 2f       	mov	r24, r19
    3432:	0e 94 f6 18 	call	0x31ec	; 0x31ec <SSD1306_putc>
		l_Index++;
    3436:	89 81       	ldd	r24, Y+1	; 0x01
    3438:	8f 5f       	subi	r24, 0xFF	; 255
    343a:	89 83       	std	Y+1, r24	; 0x01
void SSD1306_puts(uint8_t X, uint8_t Y, const char Text[], uint8_t FontSize, struct _SSD1306FrameBuffer* l_FrameBuffer)
{
	// X goes from 0 to 64 (for an 48x64 display). Y goes from 0 to 5 (6 lines)
	uint8_t l_Index = 0;
	
	while (Text[l_Index]!=0)
    343c:	89 81       	ldd	r24, Y+1	; 0x01
    343e:	88 2f       	mov	r24, r24
    3440:	90 e0       	ldi	r25, 0x00	; 0
    3442:	2c 81       	ldd	r18, Y+4	; 0x04
    3444:	3d 81       	ldd	r19, Y+5	; 0x05
    3446:	82 0f       	add	r24, r18
    3448:	93 1f       	adc	r25, r19
    344a:	fc 01       	movw	r30, r24
    344c:	80 81       	ld	r24, Z
    344e:	88 23       	and	r24, r24
    3450:	a9 f6       	brne	.-86     	; 0x33fc <SSD1306_puts+0x2a>
	{
		SSD1306_putc (X + (l_Index * (FontSize + 1)), Y ,Text[l_Index], FontSize, l_FrameBuffer);	// Fontsize+1 is to add a space between the letters
		l_Index++;
	}
}
    3452:	00 00       	nop
    3454:	28 96       	adiw	r28, 0x08	; 8
    3456:	0f b6       	in	r0, 0x3f	; 63
    3458:	f8 94       	cli
    345a:	de bf       	out	0x3e, r29	; 62
    345c:	0f be       	out	0x3f, r0	; 63
    345e:	cd bf       	out	0x3d, r28	; 61
    3460:	df 91       	pop	r29
    3462:	cf 91       	pop	r28
    3464:	1f 91       	pop	r17
    3466:	0f 91       	pop	r16
    3468:	08 95       	ret

0000346a <init_GPIO>:
#include "../HAL_LCD/SSD1306.h"
#include "../HAL_AVR/UART.h"


void init_GPIO()
{
    346a:	cf 93       	push	r28
    346c:	df 93       	push	r29
    346e:	cd b7       	in	r28, 0x3d	; 61
    3470:	de b7       	in	r29, 0x3e	; 62
	DDRC = 0b00001000;			// Set PC3 as output, used for I2C display
    3472:	87 e2       	ldi	r24, 0x27	; 39
    3474:	90 e0       	ldi	r25, 0x00	; 0
    3476:	28 e0       	ldi	r18, 0x08	; 8
    3478:	fc 01       	movw	r30, r24
    347a:	20 83       	st	Z, r18
	DDRB = 0b00000111;			// Set PB0-2 as output, used for SPI display
    347c:	84 e2       	ldi	r24, 0x24	; 36
    347e:	90 e0       	ldi	r25, 0x00	; 0
    3480:	27 e0       	ldi	r18, 0x07	; 7
    3482:	fc 01       	movw	r30, r24
    3484:	20 83       	st	Z, r18
	DDRD = 0b10000000;			// Set PD7 as output, used for the heater
    3486:	8a e2       	ldi	r24, 0x2A	; 42
    3488:	90 e0       	ldi	r25, 0x00	; 0
    348a:	20 e8       	ldi	r18, 0x80	; 128
    348c:	fc 01       	movw	r30, r24
    348e:	20 83       	st	Z, r18
}
    3490:	00 00       	nop
    3492:	df 91       	pop	r29
    3494:	cf 91       	pop	r28
    3496:	08 95       	ret

00003498 <GPIO_OledReset>:


void GPIO_OledReset(uint8_t l_Interface, uint8_t l_State)
{
    3498:	cf 93       	push	r28
    349a:	df 93       	push	r29
    349c:	00 d0       	rcall	.+0      	; 0x349e <GPIO_OledReset+0x6>
    349e:	cd b7       	in	r28, 0x3d	; 61
    34a0:	de b7       	in	r29, 0x3e	; 62
    34a2:	89 83       	std	Y+1, r24	; 0x01
    34a4:	6a 83       	std	Y+2, r22	; 0x02
	switch (l_State)
    34a6:	8a 81       	ldd	r24, Y+2	; 0x02
    34a8:	88 2f       	mov	r24, r24
    34aa:	90 e0       	ldi	r25, 0x00	; 0
    34ac:	00 97       	sbiw	r24, 0x00	; 0
    34ae:	19 f0       	breq	.+6      	; 0x34b6 <GPIO_OledReset+0x1e>
    34b0:	01 97       	sbiw	r24, 0x01	; 1
    34b2:	d1 f0       	breq	.+52     	; 0x34e8 <GPIO_OledReset+0x50>
    34b4:	32 c0       	rjmp	.+100    	; 0x351a <GPIO_OledReset+0x82>
	{
		case 0:
			if (l_Interface == RESETI2C)
    34b6:	89 81       	ldd	r24, Y+1	; 0x01
    34b8:	88 23       	and	r24, r24
    34ba:	49 f4       	brne	.+18     	; 0x34ce <GPIO_OledReset+0x36>
			{
				PORTC = PORTC &~(1 << 3);	// I2C display	
    34bc:	88 e2       	ldi	r24, 0x28	; 40
    34be:	90 e0       	ldi	r25, 0x00	; 0
    34c0:	28 e2       	ldi	r18, 0x28	; 40
    34c2:	30 e0       	ldi	r19, 0x00	; 0
    34c4:	f9 01       	movw	r30, r18
    34c6:	20 81       	ld	r18, Z
    34c8:	27 7f       	andi	r18, 0xF7	; 247
    34ca:	fc 01       	movw	r30, r24
    34cc:	20 83       	st	Z, r18
			}
			if (l_Interface == RESETSPI)
    34ce:	89 81       	ldd	r24, Y+1	; 0x01
    34d0:	81 30       	cpi	r24, 0x01	; 1
    34d2:	21 f5       	brne	.+72     	; 0x351c <GPIO_OledReset+0x84>
			{
				PORTB = PORTB &~(1 << 0);	// SPI display	
    34d4:	85 e2       	ldi	r24, 0x25	; 37
    34d6:	90 e0       	ldi	r25, 0x00	; 0
    34d8:	25 e2       	ldi	r18, 0x25	; 37
    34da:	30 e0       	ldi	r19, 0x00	; 0
    34dc:	f9 01       	movw	r30, r18
    34de:	20 81       	ld	r18, Z
    34e0:	2e 7f       	andi	r18, 0xFE	; 254
    34e2:	fc 01       	movw	r30, r24
    34e4:	20 83       	st	Z, r18
			}			
		break;
    34e6:	1a c0       	rjmp	.+52     	; 0x351c <GPIO_OledReset+0x84>

		case 1:
			if (l_Interface == RESETI2C)
    34e8:	89 81       	ldd	r24, Y+1	; 0x01
    34ea:	88 23       	and	r24, r24
    34ec:	49 f4       	brne	.+18     	; 0x3500 <GPIO_OledReset+0x68>
			{
				PORTC = PORTC | (1 << 3);	// I2C display
    34ee:	88 e2       	ldi	r24, 0x28	; 40
    34f0:	90 e0       	ldi	r25, 0x00	; 0
    34f2:	28 e2       	ldi	r18, 0x28	; 40
    34f4:	30 e0       	ldi	r19, 0x00	; 0
    34f6:	f9 01       	movw	r30, r18
    34f8:	20 81       	ld	r18, Z
    34fa:	28 60       	ori	r18, 0x08	; 8
    34fc:	fc 01       	movw	r30, r24
    34fe:	20 83       	st	Z, r18
			}
			if (l_Interface == RESETSPI)
    3500:	89 81       	ldd	r24, Y+1	; 0x01
    3502:	81 30       	cpi	r24, 0x01	; 1
    3504:	69 f4       	brne	.+26     	; 0x3520 <GPIO_OledReset+0x88>
			{
				PORTB = PORTB | (1 << 0);	// SPI display
    3506:	85 e2       	ldi	r24, 0x25	; 37
    3508:	90 e0       	ldi	r25, 0x00	; 0
    350a:	25 e2       	ldi	r18, 0x25	; 37
    350c:	30 e0       	ldi	r19, 0x00	; 0
    350e:	f9 01       	movw	r30, r18
    3510:	20 81       	ld	r18, Z
    3512:	21 60       	ori	r18, 0x01	; 1
    3514:	fc 01       	movw	r30, r24
    3516:	20 83       	st	Z, r18
			}			
		break;
    3518:	03 c0       	rjmp	.+6      	; 0x3520 <GPIO_OledReset+0x88>

		default:
		while(1);	// Error
    351a:	ff cf       	rjmp	.-2      	; 0x351a <GPIO_OledReset+0x82>
			}
			if (l_Interface == RESETSPI)
			{
				PORTB = PORTB &~(1 << 0);	// SPI display	
			}			
		break;
    351c:	00 00       	nop
    351e:	01 c0       	rjmp	.+2      	; 0x3522 <GPIO_OledReset+0x8a>
			}
			if (l_Interface == RESETSPI)
			{
				PORTB = PORTB | (1 << 0);	// SPI display
			}			
		break;
    3520:	00 00       	nop

		default:
		while(1);	// Error
	}
}
    3522:	00 00       	nop
    3524:	0f 90       	pop	r0
    3526:	0f 90       	pop	r0
    3528:	df 91       	pop	r29
    352a:	cf 91       	pop	r28
    352c:	08 95       	ret

0000352e <GPIO_SetOledDC>:


void GPIO_SetOledDC(uint8_t l_State)
{
    352e:	cf 93       	push	r28
    3530:	df 93       	push	r29
    3532:	1f 92       	push	r1
    3534:	cd b7       	in	r28, 0x3d	; 61
    3536:	de b7       	in	r29, 0x3e	; 62
    3538:	89 83       	std	Y+1, r24	; 0x01
	switch (l_State)
    353a:	89 81       	ldd	r24, Y+1	; 0x01
    353c:	88 2f       	mov	r24, r24
    353e:	90 e0       	ldi	r25, 0x00	; 0
    3540:	00 97       	sbiw	r24, 0x00	; 0
    3542:	19 f0       	breq	.+6      	; 0x354a <GPIO_SetOledDC+0x1c>
    3544:	01 97       	sbiw	r24, 0x01	; 1
    3546:	59 f0       	breq	.+22     	; 0x355e <GPIO_SetOledDC+0x30>
    3548:	14 c0       	rjmp	.+40     	; 0x3572 <GPIO_SetOledDC+0x44>
	{
		case 0:
		PORTB = PORTB &~(1 << 1);
    354a:	85 e2       	ldi	r24, 0x25	; 37
    354c:	90 e0       	ldi	r25, 0x00	; 0
    354e:	25 e2       	ldi	r18, 0x25	; 37
    3550:	30 e0       	ldi	r19, 0x00	; 0
    3552:	f9 01       	movw	r30, r18
    3554:	20 81       	ld	r18, Z
    3556:	2d 7f       	andi	r18, 0xFD	; 253
    3558:	fc 01       	movw	r30, r24
    355a:	20 83       	st	Z, r18
		break;
    355c:	0b c0       	rjmp	.+22     	; 0x3574 <GPIO_SetOledDC+0x46>

		case 1:
		PORTB = PORTB | (1 << 1);
    355e:	85 e2       	ldi	r24, 0x25	; 37
    3560:	90 e0       	ldi	r25, 0x00	; 0
    3562:	25 e2       	ldi	r18, 0x25	; 37
    3564:	30 e0       	ldi	r19, 0x00	; 0
    3566:	f9 01       	movw	r30, r18
    3568:	20 81       	ld	r18, Z
    356a:	22 60       	ori	r18, 0x02	; 2
    356c:	fc 01       	movw	r30, r24
    356e:	20 83       	st	Z, r18
		break;
    3570:	01 c0       	rjmp	.+2      	; 0x3574 <GPIO_SetOledDC+0x46>

		default:
		while(1);	// Error
    3572:	ff cf       	rjmp	.-2      	; 0x3572 <GPIO_SetOledDC+0x44>
	}
}
    3574:	00 00       	nop
    3576:	0f 90       	pop	r0
    3578:	df 91       	pop	r29
    357a:	cf 91       	pop	r28
    357c:	08 95       	ret

0000357e <GPIO_SetOledCS>:


void GPIO_SetOledCS(uint8_t l_State)
{
    357e:	cf 93       	push	r28
    3580:	df 93       	push	r29
    3582:	1f 92       	push	r1
    3584:	cd b7       	in	r28, 0x3d	; 61
    3586:	de b7       	in	r29, 0x3e	; 62
    3588:	89 83       	std	Y+1, r24	; 0x01
	switch (l_State)
    358a:	89 81       	ldd	r24, Y+1	; 0x01
    358c:	88 2f       	mov	r24, r24
    358e:	90 e0       	ldi	r25, 0x00	; 0
    3590:	00 97       	sbiw	r24, 0x00	; 0
    3592:	19 f0       	breq	.+6      	; 0x359a <GPIO_SetOledCS+0x1c>
    3594:	01 97       	sbiw	r24, 0x01	; 1
    3596:	59 f0       	breq	.+22     	; 0x35ae <GPIO_SetOledCS+0x30>
    3598:	14 c0       	rjmp	.+40     	; 0x35c2 <GPIO_SetOledCS+0x44>
	{
		case 0:
		PORTB = PORTB &~(1 << 2);
    359a:	85 e2       	ldi	r24, 0x25	; 37
    359c:	90 e0       	ldi	r25, 0x00	; 0
    359e:	25 e2       	ldi	r18, 0x25	; 37
    35a0:	30 e0       	ldi	r19, 0x00	; 0
    35a2:	f9 01       	movw	r30, r18
    35a4:	20 81       	ld	r18, Z
    35a6:	2b 7f       	andi	r18, 0xFB	; 251
    35a8:	fc 01       	movw	r30, r24
    35aa:	20 83       	st	Z, r18
		break;
    35ac:	0b c0       	rjmp	.+22     	; 0x35c4 <GPIO_SetOledCS+0x46>

		case 1:
		PORTB = PORTB | (1 << 2);
    35ae:	85 e2       	ldi	r24, 0x25	; 37
    35b0:	90 e0       	ldi	r25, 0x00	; 0
    35b2:	25 e2       	ldi	r18, 0x25	; 37
    35b4:	30 e0       	ldi	r19, 0x00	; 0
    35b6:	f9 01       	movw	r30, r18
    35b8:	20 81       	ld	r18, Z
    35ba:	24 60       	ori	r18, 0x04	; 4
    35bc:	fc 01       	movw	r30, r24
    35be:	20 83       	st	Z, r18
		break;
    35c0:	01 c0       	rjmp	.+2      	; 0x35c4 <GPIO_SetOledCS+0x46>

		default:
		while(1);	// Error
    35c2:	ff cf       	rjmp	.-2      	; 0x35c2 <GPIO_SetOledCS+0x44>
	}
}
    35c4:	00 00       	nop
    35c6:	0f 90       	pop	r0
    35c8:	df 91       	pop	r29
    35ca:	cf 91       	pop	r28
    35cc:	08 95       	ret

000035ce <setpinD>:

void setpinD(uint8_t l_pinnr, uint8_t l_status)
{
    35ce:	cf 93       	push	r28
    35d0:	df 93       	push	r29
    35d2:	00 d0       	rcall	.+0      	; 0x35d4 <setpinD+0x6>
    35d4:	cd b7       	in	r28, 0x3d	; 61
    35d6:	de b7       	in	r29, 0x3e	; 62
    35d8:	89 83       	std	Y+1, r24	; 0x01
    35da:	6a 83       	std	Y+2, r22	; 0x02
	if (l_status)
    35dc:	8a 81       	ldd	r24, Y+2	; 0x02
    35de:	88 23       	and	r24, r24
    35e0:	a9 f0       	breq	.+42     	; 0x360c <setpinD+0x3e>
	{
		PORTD = PORTD | (1<<l_pinnr);	// turn ON output
    35e2:	8b e2       	ldi	r24, 0x2B	; 43
    35e4:	90 e0       	ldi	r25, 0x00	; 0
    35e6:	2b e2       	ldi	r18, 0x2B	; 43
    35e8:	30 e0       	ldi	r19, 0x00	; 0
    35ea:	f9 01       	movw	r30, r18
    35ec:	20 81       	ld	r18, Z
    35ee:	62 2f       	mov	r22, r18
    35f0:	29 81       	ldd	r18, Y+1	; 0x01
    35f2:	42 2f       	mov	r20, r18
    35f4:	50 e0       	ldi	r21, 0x00	; 0
    35f6:	21 e0       	ldi	r18, 0x01	; 1
    35f8:	30 e0       	ldi	r19, 0x00	; 0
    35fa:	02 c0       	rjmp	.+4      	; 0x3600 <setpinD+0x32>
    35fc:	22 0f       	add	r18, r18
    35fe:	33 1f       	adc	r19, r19
    3600:	4a 95       	dec	r20
    3602:	e2 f7       	brpl	.-8      	; 0x35fc <setpinD+0x2e>
    3604:	26 2b       	or	r18, r22
    3606:	fc 01       	movw	r30, r24
    3608:	20 83       	st	Z, r18
	}
	else
	{
		PORTD = PORTD &~(1<<l_pinnr);	// Turn OFF output
	}
}
    360a:	15 c0       	rjmp	.+42     	; 0x3636 <setpinD+0x68>
	{
		PORTD = PORTD | (1<<l_pinnr);	// turn ON output
	}
	else
	{
		PORTD = PORTD &~(1<<l_pinnr);	// Turn OFF output
    360c:	8b e2       	ldi	r24, 0x2B	; 43
    360e:	90 e0       	ldi	r25, 0x00	; 0
    3610:	2b e2       	ldi	r18, 0x2B	; 43
    3612:	30 e0       	ldi	r19, 0x00	; 0
    3614:	f9 01       	movw	r30, r18
    3616:	20 81       	ld	r18, Z
    3618:	62 2f       	mov	r22, r18
    361a:	29 81       	ldd	r18, Y+1	; 0x01
    361c:	42 2f       	mov	r20, r18
    361e:	50 e0       	ldi	r21, 0x00	; 0
    3620:	21 e0       	ldi	r18, 0x01	; 1
    3622:	30 e0       	ldi	r19, 0x00	; 0
    3624:	02 c0       	rjmp	.+4      	; 0x362a <setpinD+0x5c>
    3626:	22 0f       	add	r18, r18
    3628:	33 1f       	adc	r19, r19
    362a:	4a 95       	dec	r20
    362c:	e2 f7       	brpl	.-8      	; 0x3626 <setpinD+0x58>
    362e:	20 95       	com	r18
    3630:	26 23       	and	r18, r22
    3632:	fc 01       	movw	r30, r24
    3634:	20 83       	st	Z, r18
	}
}
    3636:	00 00       	nop
    3638:	0f 90       	pop	r0
    363a:	0f 90       	pop	r0
    363c:	df 91       	pop	r29
    363e:	cf 91       	pop	r28
    3640:	08 95       	ret

00003642 <setheater>:

void setheater(uint8_t l_status)
{
    3642:	cf 93       	push	r28
    3644:	df 93       	push	r29
    3646:	1f 92       	push	r1
    3648:	cd b7       	in	r28, 0x3d	; 61
    364a:	de b7       	in	r29, 0x3e	; 62
    364c:	89 83       	std	Y+1, r24	; 0x01
	setpinD(7, l_status);
    364e:	69 81       	ldd	r22, Y+1	; 0x01
    3650:	87 e0       	ldi	r24, 0x07	; 7
    3652:	0e 94 e7 1a 	call	0x35ce	; 0x35ce <setpinD>
    3656:	00 00       	nop
    3658:	0f 90       	pop	r0
    365a:	df 91       	pop	r29
    365c:	cf 91       	pop	r28
    365e:	08 95       	ret

00003660 <HAL_Init>:
#include "HAL_Init.h"		// Hardware init
#include "HAL_GPIO.h"		// Native GPIO


void HAL_Init()
{
    3660:	0f 93       	push	r16
    3662:	cf 93       	push	r28
    3664:	df 93       	push	r29
    3666:	cd b7       	in	r28, 0x3d	; 61
    3668:	de b7       	in	r29, 0x3e	; 62
	init_GPIO();									// Make sure to init GPIO before SPI to ensure master mode canbe enabled.
    366a:	0e 94 35 1a 	call	0x346a	; 0x346a <init_GPIO>
	init_TC1(20000);								// Start the tick timer (20.000 for 10mS tick timer with a 16Mhz crystal)
    366e:	80 e2       	ldi	r24, 0x20	; 32
    3670:	9e e4       	ldi	r25, 0x4E	; 78
    3672:	0e 94 66 07 	call	0xecc	; 0xecc <init_TC1>
	init_UART(8, 0);								// init the UART 
    3676:	60 e0       	ldi	r22, 0x00	; 0
    3678:	88 e0       	ldi	r24, 0x08	; 8
    367a:	90 e0       	ldi	r25, 0x00	; 0
    367c:	0e 94 cb 07 	call	0xf96	; 0xf96 <init_UART>
	i2c_init();										// init I2C
    3680:	0e 94 60 05 	call	0xac0	; 0xac0 <i2c_init>
	spi_init (MSBFIRST, SPIMASTER, MODE3, 3, 0);	// SSD1306: SDIN is shifted into an 8-bit shift register on every rising edge of SCLK in the order of D7, D6, ... D0
    3684:	00 e0       	ldi	r16, 0x00	; 0
    3686:	23 e0       	ldi	r18, 0x03	; 3
    3688:	43 e0       	ldi	r20, 0x03	; 3
    368a:	61 e0       	ldi	r22, 0x01	; 1
    368c:	80 e0       	ldi	r24, 0x00	; 0
    368e:	0e 94 b5 06 	call	0xd6a	; 0xd6a <spi_init>
	
	GPIO_OledReset(RESETSPI, 0);					// Reset the SPI OLED
    3692:	60 e0       	ldi	r22, 0x00	; 0
    3694:	81 e0       	ldi	r24, 0x01	; 1
    3696:	0e 94 4c 1a 	call	0x3498	; 0x3498 <GPIO_OledReset>
	GPIO_OledReset(RESETSPI, 1);					// Restart the SPI OLED
    369a:	61 e0       	ldi	r22, 0x01	; 1
    369c:	81 e0       	ldi	r24, 0x01	; 1
    369e:	0e 94 4c 1a 	call	0x3498	; 0x3498 <GPIO_OledReset>
	SSD1306_InitSPI();								// Init the SSD1306 driver	
    36a2:	0e 94 ff 17 	call	0x2ffe	; 0x2ffe <SSD1306_InitSPI>
	BMP280_init();									// Init the BMP280 temperature and pressure sensor
    36a6:	0e 94 f5 16 	call	0x2dea	; 0x2dea <BMP280_init>
}
    36aa:	00 00       	nop
    36ac:	df 91       	pop	r29
    36ae:	cf 91       	pop	r28
    36b0:	0f 91       	pop	r16
    36b2:	08 95       	ret

000036b4 <main>:
extern struct _mqtt str_AT_mqtt;

signed int g_SubRecvIndex;

int main(void)
{
    36b4:	cf 93       	push	r28
    36b6:	df 93       	push	r29
    36b8:	cd b7       	in	r28, 0x3d	; 61
    36ba:	de b7       	in	r29, 0x3e	; 62
	HAL_Init();
    36bc:	0e 94 30 1b 	call	0x3660	; 0x3660 <HAL_Init>
	
    while (1)
    {
		if (UART_RxBuffer.CrLn == 1)			// check if there is an flag Carriage return and line feed
    36c0:	80 91 d9 02 	lds	r24, 0x02D9	; 0x8002d9 <UART_RxBuffer+0x69>
    36c4:	81 30       	cpi	r24, 0x01	; 1
    36c6:	09 f0       	breq	.+2      	; 0x36ca <main+0x16>
    36c8:	52 c0       	rjmp	.+164    	; 0x376e <main+0xba>
		{
			UART_RxBuffer.CrLn = 0;				// Sets the flag back to 0
    36ca:	10 92 d9 02 	sts	0x02D9, r1	; 0x8002d9 <UART_RxBuffer+0x69>
			
			if ((FindString("+MQTTSUBRECV", &UART_RxBuffer)) >= 0)  // check if there is a match for mqtt subscribed received data
    36ce:	60 e7       	ldi	r22, 0x70	; 112
    36d0:	72 e0       	ldi	r23, 0x02	; 2
    36d2:	83 e0       	ldi	r24, 0x03	; 3
    36d4:	92 e0       	ldi	r25, 0x02	; 2
    36d6:	0e 94 a9 03 	call	0x752	; 0x752 <FindString>
    36da:	99 23       	and	r25, r25
    36dc:	c4 f1       	brlt	.+112    	; 0x374e <main+0x9a>
			{
				g_SubRecvIndex = FindString("SETPOINT", &UART_RxBuffer); // check if the subcribed received data is a setpoint
    36de:	60 e7       	ldi	r22, 0x70	; 112
    36e0:	72 e0       	ldi	r23, 0x02	; 2
    36e2:	80 e1       	ldi	r24, 0x10	; 16
    36e4:	92 e0       	ldi	r25, 0x02	; 2
    36e6:	0e 94 a9 03 	call	0x752	; 0x752 <FindString>
    36ea:	90 93 72 07 	sts	0x0772, r25	; 0x800772 <g_SubRecvIndex+0x1>
    36ee:	80 93 71 07 	sts	0x0771, r24	; 0x800771 <g_SubRecvIndex>
				if (g_SubRecvIndex >= 0)
    36f2:	80 91 71 07 	lds	r24, 0x0771	; 0x800771 <g_SubRecvIndex>
    36f6:	90 91 72 07 	lds	r25, 0x0772	; 0x800772 <g_SubRecvIndex+0x1>
    36fa:	99 23       	and	r25, r25
    36fc:	c4 f1       	brlt	.+112    	; 0x376e <main+0xba>
				{					
					comp_data.setpoint = ((UART_RxBuffer.Buffer[g_SubRecvIndex+12]-48) *10) + (UART_RxBuffer.Buffer[g_SubRecvIndex+13]-48); // get the setpoint data
    36fe:	80 91 71 07 	lds	r24, 0x0771	; 0x800771 <g_SubRecvIndex>
    3702:	90 91 72 07 	lds	r25, 0x0772	; 0x800772 <g_SubRecvIndex+0x1>
    3706:	0c 96       	adiw	r24, 0x0c	; 12
    3708:	80 59       	subi	r24, 0x90	; 144
    370a:	9d 4f       	sbci	r25, 0xFD	; 253
    370c:	fc 01       	movw	r30, r24
    370e:	80 81       	ld	r24, Z
    3710:	88 2f       	mov	r24, r24
    3712:	90 e0       	ldi	r25, 0x00	; 0
    3714:	c0 97       	sbiw	r24, 0x30	; 48
    3716:	88 0f       	add	r24, r24
    3718:	99 1f       	adc	r25, r25
    371a:	9c 01       	movw	r18, r24
    371c:	22 0f       	add	r18, r18
    371e:	33 1f       	adc	r19, r19
    3720:	22 0f       	add	r18, r18
    3722:	33 1f       	adc	r19, r19
    3724:	28 0f       	add	r18, r24
    3726:	39 1f       	adc	r19, r25
    3728:	80 91 71 07 	lds	r24, 0x0771	; 0x800771 <g_SubRecvIndex>
    372c:	90 91 72 07 	lds	r25, 0x0772	; 0x800772 <g_SubRecvIndex+0x1>
    3730:	0d 96       	adiw	r24, 0x0d	; 13
    3732:	80 59       	subi	r24, 0x90	; 144
    3734:	9d 4f       	sbci	r25, 0xFD	; 253
    3736:	fc 01       	movw	r30, r24
    3738:	80 81       	ld	r24, Z
    373a:	88 2f       	mov	r24, r24
    373c:	90 e0       	ldi	r25, 0x00	; 0
    373e:	c0 97       	sbiw	r24, 0x30	; 48
    3740:	82 0f       	add	r24, r18
    3742:	93 1f       	adc	r25, r19
    3744:	90 93 6b 03 	sts	0x036B, r25	; 0x80036b <comp_data+0x9>
    3748:	80 93 6a 03 	sts	0x036A, r24	; 0x80036a <comp_data+0x8>
    374c:	10 c0       	rjmp	.+32     	; 0x376e <main+0xba>
				}
				
			}
			else if (FindString("OK", &UART_RxBuffer))
    374e:	60 e7       	ldi	r22, 0x70	; 112
    3750:	72 e0       	ldi	r23, 0x02	; 2
    3752:	89 e1       	ldi	r24, 0x19	; 25
    3754:	92 e0       	ldi	r25, 0x02	; 2
    3756:	0e 94 a9 03 	call	0x752	; 0x752 <FindString>
    375a:	89 2b       	or	r24, r25
    375c:	21 f0       	breq	.+8      	; 0x3766 <main+0xb2>
			{
				UART_RxBuffer.Ok = 1;
    375e:	81 e0       	ldi	r24, 0x01	; 1
    3760:	80 93 d8 02 	sts	0x02D8, r24	; 0x8002d8 <UART_RxBuffer+0x68>
    3764:	04 c0       	rjmp	.+8      	; 0x376e <main+0xba>
			}
			else
			{
				ClearBuffer(&UART_RxBuffer);
    3766:	80 e7       	ldi	r24, 0x70	; 112
    3768:	92 e0       	ldi	r25, 0x02	; 2
    376a:	0e 94 1d 04 	call	0x83a	; 0x83a <ClearBuffer>
			}
			
		}
		
		if (g_TickSensor > 100)
    376e:	80 91 66 02 	lds	r24, 0x0266	; 0x800266 <__data_end>
    3772:	85 36       	cpi	r24, 0x65	; 101
    3774:	08 f4       	brcc	.+2      	; 0x3778 <main+0xc4>
    3776:	45 c0       	rjmp	.+138    	; 0x3802 <main+0x14e>
		{
			g_TickSensor = 0;
    3778:	10 92 66 02 	sts	0x0266, r1	; 0x800266 <__data_end>
			if (readsensor() == BMP2_OK)
    377c:	0e 94 c5 09 	call	0x138a	; 0x138a <readsensor>
    3780:	88 23       	and	r24, r24
    3782:	e9 f5       	brne	.+122    	; 0x37fe <main+0x14a>
			{
				// Convert the temperature from uint16 to array of bytes 
				sprintf(str_AT_mqtt.data, "%.5f", comp_data.temperature);
    3784:	80 91 66 03 	lds	r24, 0x0366	; 0x800366 <comp_data+0x4>
    3788:	90 91 67 03 	lds	r25, 0x0367	; 0x800367 <comp_data+0x5>
    378c:	a0 91 68 03 	lds	r26, 0x0368	; 0x800368 <comp_data+0x6>
    3790:	b0 91 69 03 	lds	r27, 0x0369	; 0x800369 <comp_data+0x7>
    3794:	2b 2f       	mov	r18, r27
    3796:	2f 93       	push	r18
    3798:	2a 2f       	mov	r18, r26
    379a:	2f 93       	push	r18
    379c:	29 2f       	mov	r18, r25
    379e:	2f 93       	push	r18
    37a0:	8f 93       	push	r24
    37a2:	8c e1       	ldi	r24, 0x1C	; 28
    37a4:	92 e0       	ldi	r25, 0x02	; 2
    37a6:	89 2f       	mov	r24, r25
    37a8:	8f 93       	push	r24
    37aa:	8c e1       	ldi	r24, 0x1C	; 28
    37ac:	92 e0       	ldi	r25, 0x02	; 2
    37ae:	8f 93       	push	r24
    37b0:	81 e1       	ldi	r24, 0x11	; 17
    37b2:	93 e0       	ldi	r25, 0x03	; 3
    37b4:	89 2f       	mov	r24, r25
    37b6:	8f 93       	push	r24
    37b8:	81 e1       	ldi	r24, 0x11	; 17
    37ba:	93 e0       	ldi	r25, 0x03	; 3
    37bc:	8f 93       	push	r24
    37be:	0e 94 08 24 	call	0x4810	; 0x4810 <sprintf>
    37c2:	8d b7       	in	r24, 0x3d	; 61
    37c4:	9e b7       	in	r25, 0x3e	; 62
    37c6:	08 96       	adiw	r24, 0x08	; 8
    37c8:	0f b6       	in	r0, 0x3f	; 63
    37ca:	f8 94       	cli
    37cc:	de bf       	out	0x3e, r29	; 62
    37ce:	0f be       	out	0x3f, r0	; 63
    37d0:	cd bf       	out	0x3d, r28	; 61
				
				showtemperature(&comp_data);
    37d2:	82 e6       	ldi	r24, 0x62	; 98
    37d4:	93 e0       	ldi	r25, 0x03	; 3
    37d6:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <showtemperature>
				showsetpoint(&comp_data);
    37da:	82 e6       	ldi	r24, 0x62	; 98
    37dc:	93 e0       	ldi	r25, 0x03	; 3
    37de:	0e 94 b4 08 	call	0x1168	; 0x1168 <showsetpoint>
				if (comparetemperature(&comp_data))
    37e2:	82 e6       	ldi	r24, 0x62	; 98
    37e4:	93 e0       	ldi	r25, 0x03	; 3
    37e6:	0e 94 65 09 	call	0x12ca	; 0x12ca <comparetemperature>
    37ea:	88 23       	and	r24, r24
    37ec:	21 f0       	breq	.+8      	; 0x37f6 <main+0x142>
				{
					setheater(ON);
    37ee:	81 e0       	ldi	r24, 0x01	; 1
    37f0:	0e 94 21 1b 	call	0x3642	; 0x3642 <setheater>
    37f4:	06 c0       	rjmp	.+12     	; 0x3802 <main+0x14e>
				} 
				else
				{
					setheater(OFF);
    37f6:	80 e0       	ldi	r24, 0x00	; 0
    37f8:	0e 94 21 1b 	call	0x3642	; 0x3642 <setheater>
    37fc:	02 c0       	rjmp	.+4      	; 0x3802 <main+0x14e>
				}
			} 
			else
			{
				showsensorerror();
    37fe:	0e 94 4c 09 	call	0x1298	; 0x1298 <showsensorerror>
			}		
		}
		
		
		if (g_TickStatemachine > 500)
    3802:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <g_TickStatemachine>
    3806:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <g_TickStatemachine+0x1>
    380a:	85 3f       	cpi	r24, 0xF5	; 245
    380c:	91 40       	sbci	r25, 0x01	; 1
    380e:	30 f0       	brcs	.+12     	; 0x381c <main+0x168>
		{
			g_TickStatemachine = 0;
    3810:	10 92 69 02 	sts	0x0269, r1	; 0x800269 <g_TickStatemachine+0x1>
    3814:	10 92 68 02 	sts	0x0268, r1	; 0x800268 <g_TickStatemachine>
			AT_statemachine();
    3818:	0e 94 19 1c 	call	0x3832	; 0x3832 <AT_statemachine>
		}
		
		
			
		// Update the OLED display
		if (g_LcdUpdateTimer > OLEDUPDATESPEED)
    381c:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <g_LcdUpdateTimer>
    3820:	8a 31       	cpi	r24, 0x1A	; 26
    3822:	08 f4       	brcc	.+2      	; 0x3826 <main+0x172>
    3824:	4d cf       	rjmp	.-358    	; 0x36c0 <main+0xc>
		{
			g_LcdUpdateTimer = 0;
    3826:	10 92 6a 02 	sts	0x026A, r1	; 0x80026a <g_LcdUpdateTimer>
			ProcessLCD(OLEDSPI);
    382a:	80 e0       	ldi	r24, 0x00	; 0
    382c:	0e 94 4d 17 	call	0x2e9a	; 0x2e9a <ProcessLCD>
		}
    }
    3830:	47 cf       	rjmp	.-370    	; 0x36c0 <main+0xc>

00003832 <AT_statemachine>:
extern struct _wifi str_AT_wifi;
extern struct _mqtt str_AT_mqtt;
extern struct bmp2_data comp_data;

void AT_statemachine(void)
{
    3832:	cf 93       	push	r28
    3834:	df 93       	push	r29
    3836:	cd b7       	in	r28, 0x3d	; 61
    3838:	de b7       	in	r29, 0x3e	; 62
	switch (g_AT_State)
    383a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    383e:	88 2f       	mov	r24, r24
    3840:	90 e0       	ldi	r25, 0x00	; 0
    3842:	09 2e       	mov	r0, r25
    3844:	00 0c       	add	r0, r0
    3846:	aa 0b       	sbc	r26, r26
    3848:	bb 0b       	sbc	r27, r27
    384a:	41 e0       	ldi	r20, 0x01	; 1
    384c:	50 e0       	ldi	r21, 0x00	; 0
    384e:	26 e0       	ldi	r18, 0x06	; 6
    3850:	30 e0       	ldi	r19, 0x00	; 0
    3852:	84 1b       	sub	r24, r20
    3854:	95 0b       	sbc	r25, r21
    3856:	28 17       	cp	r18, r24
    3858:	39 07       	cpc	r19, r25
    385a:	08 f4       	brcc	.+2      	; 0x385e <AT_statemachine+0x2c>
    385c:	b1 c0       	rjmp	.+354    	; 0x39c0 <AT_statemachine+0x18e>
    385e:	86 5a       	subi	r24, 0xA6	; 166
    3860:	9f 4f       	sbci	r25, 0xFF	; 255
    3862:	fc 01       	movw	r30, r24
    3864:	0c 94 a1 22 	jmp	0x4542	; 0x4542 <__tablejump2__>
	{
		case ATCHECK:
		AT_check();
    3868:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <AT_check>
		g_AT_State = ATCHECKOK;
    386c:	82 e0       	ldi	r24, 0x02	; 2
    386e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		g_AT_NextState = ATWIFICONNECT;
    3872:	83 e0       	ldi	r24, 0x03	; 3
    3874:	80 93 73 07 	sts	0x0773, r24	; 0x800773 <g_AT_NextState>
		break;
    3878:	a5 c0       	rjmp	.+330    	; 0x39c4 <AT_statemachine+0x192>
		
		case ATWIFICONNECT:
		strcpy(str_AT_wifi.WifiSSID, "dlink-5914");
    387a:	8b e0       	ldi	r24, 0x0B	; 11
    387c:	e1 e2       	ldi	r30, 0x21	; 33
    387e:	f2 e0       	ldi	r31, 0x02	; 2
    3880:	ab e1       	ldi	r26, 0x1B	; 27
    3882:	b3 e0       	ldi	r27, 0x03	; 3
    3884:	01 90       	ld	r0, Z+
    3886:	0d 92       	st	X+, r0
    3888:	8a 95       	dec	r24
    388a:	e1 f7       	brne	.-8      	; 0x3884 <AT_statemachine+0x52>
		strcpy(str_AT_wifi.WifiPassword, "cjvgu89628");
    388c:	8b e0       	ldi	r24, 0x0B	; 11
    388e:	ec e2       	ldi	r30, 0x2C	; 44
    3890:	f2 e0       	ldi	r31, 0x02	; 2
    3892:	a7 e2       	ldi	r26, 0x27	; 39
    3894:	b3 e0       	ldi	r27, 0x03	; 3
    3896:	01 90       	ld	r0, Z+
    3898:	0d 92       	st	X+, r0
    389a:	8a 95       	dec	r24
    389c:	e1 f7       	brne	.-8      	; 0x3896 <AT_statemachine+0x64>
		AT_wificonnect(&str_AT_wifi, &str_AT_wifi);
    389e:	6b e1       	ldi	r22, 0x1B	; 27
    38a0:	73 e0       	ldi	r23, 0x03	; 3
    38a2:	8b e1       	ldi	r24, 0x1B	; 27
    38a4:	93 e0       	ldi	r25, 0x03	; 3
    38a6:	0e 94 68 04 	call	0x8d0	; 0x8d0 <AT_wificonnect>
		g_AT_State = ATCHECKOK;
    38aa:	82 e0       	ldi	r24, 0x02	; 2
    38ac:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		g_AT_NextState = ATUSERCONF;
    38b0:	84 e0       	ldi	r24, 0x04	; 4
    38b2:	80 93 73 07 	sts	0x0773, r24	; 0x800773 <g_AT_NextState>
		break;
    38b6:	86 c0       	rjmp	.+268    	; 0x39c4 <AT_statemachine+0x192>

		case ATUSERCONF:
		strcpy(str_AT_mqtt.username, "mqtt");
    38b8:	85 e0       	ldi	r24, 0x05	; 5
    38ba:	e7 e3       	ldi	r30, 0x37	; 55
    38bc:	f2 e0       	ldi	r31, 0x02	; 2
    38be:	aa ed       	ldi	r26, 0xDA	; 218
    38c0:	b2 e0       	ldi	r27, 0x02	; 2
    38c2:	01 90       	ld	r0, Z+
    38c4:	0d 92       	st	X+, r0
    38c6:	8a 95       	dec	r24
    38c8:	e1 f7       	brne	.-8      	; 0x38c2 <AT_statemachine+0x90>
		strcpy(str_AT_mqtt.password, "mqtt");
    38ca:	85 e0       	ldi	r24, 0x05	; 5
    38cc:	e7 e3       	ldi	r30, 0x37	; 55
    38ce:	f2 e0       	ldi	r31, 0x02	; 2
    38d0:	a0 ee       	ldi	r26, 0xE0	; 224
    38d2:	b2 e0       	ldi	r27, 0x02	; 2
    38d4:	01 90       	ld	r0, Z+
    38d6:	0d 92       	st	X+, r0
    38d8:	8a 95       	dec	r24
    38da:	e1 f7       	brne	.-8      	; 0x38d4 <AT_statemachine+0xa2>
		strcpy(str_AT_mqtt.client_ID, "ESP8266");
    38dc:	88 e0       	ldi	r24, 0x08	; 8
    38de:	ec e3       	ldi	r30, 0x3C	; 60
    38e0:	f2 e0       	ldi	r31, 0x02	; 2
    38e2:	a4 ef       	ldi	r26, 0xF4	; 244
    38e4:	b2 e0       	ldi	r27, 0x02	; 2
    38e6:	01 90       	ld	r0, Z+
    38e8:	0d 92       	st	X+, r0
    38ea:	8a 95       	dec	r24
    38ec:	e1 f7       	brne	.-8      	; 0x38e6 <AT_statemachine+0xb4>
		AT_mqtt_userconf(&str_AT_mqtt, &str_AT_mqtt, &str_AT_mqtt);
    38ee:	4a ed       	ldi	r20, 0xDA	; 218
    38f0:	52 e0       	ldi	r21, 0x02	; 2
    38f2:	6a ed       	ldi	r22, 0xDA	; 218
    38f4:	72 e0       	ldi	r23, 0x02	; 2
    38f6:	8a ed       	ldi	r24, 0xDA	; 218
    38f8:	92 e0       	ldi	r25, 0x02	; 2
    38fa:	0e 94 9b 04 	call	0x936	; 0x936 <AT_mqtt_userconf>
		g_AT_State = ATCHECKOK;
    38fe:	82 e0       	ldi	r24, 0x02	; 2
    3900:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		g_AT_NextState = ATMQTTCONNECTION;
    3904:	85 e0       	ldi	r24, 0x05	; 5
    3906:	80 93 73 07 	sts	0x0773, r24	; 0x800773 <g_AT_NextState>
		break;
    390a:	5c c0       	rjmp	.+184    	; 0x39c4 <AT_statemachine+0x192>
		
		case ATMQTTCONNECTION:
		strcpy(str_AT_mqtt.broker_IP, "192.168.0.102");
    390c:	8e e0       	ldi	r24, 0x0E	; 14
    390e:	e4 e4       	ldi	r30, 0x44	; 68
    3910:	f2 e0       	ldi	r31, 0x02	; 2
    3912:	a6 ee       	ldi	r26, 0xE6	; 230
    3914:	b2 e0       	ldi	r27, 0x02	; 2
    3916:	01 90       	ld	r0, Z+
    3918:	0d 92       	st	X+, r0
    391a:	8a 95       	dec	r24
    391c:	e1 f7       	brne	.-8      	; 0x3916 <AT_statemachine+0xe4>
		AT_mqtt_connection(&str_AT_mqtt);
    391e:	8a ed       	ldi	r24, 0xDA	; 218
    3920:	92 e0       	ldi	r25, 0x02	; 2
    3922:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <AT_mqtt_connection>
		g_AT_State = ATCHECKOK;
    3926:	82 e0       	ldi	r24, 0x02	; 2
    3928:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		g_AT_NextState = ATMQTTSUB;
    392c:	86 e0       	ldi	r24, 0x06	; 6
    392e:	80 93 73 07 	sts	0x0773, r24	; 0x800773 <g_AT_NextState>
		break;
    3932:	48 c0       	rjmp	.+144    	; 0x39c4 <AT_statemachine+0x192>
		
		case ATMQTTSUB:
		strcpy(str_AT_mqtt.topic_sub , "SETPOINT");
    3934:	89 e0       	ldi	r24, 0x09	; 9
    3936:	e2 e5       	ldi	r30, 0x52	; 82
    3938:	f2 e0       	ldi	r31, 0x02	; 2
    393a:	a7 e0       	ldi	r26, 0x07	; 7
    393c:	b3 e0       	ldi	r27, 0x03	; 3
    393e:	01 90       	ld	r0, Z+
    3940:	0d 92       	st	X+, r0
    3942:	8a 95       	dec	r24
    3944:	e1 f7       	brne	.-8      	; 0x393e <AT_statemachine+0x10c>
		AT_mqtt_subscribe(&str_AT_mqtt);
    3946:	8a ed       	ldi	r24, 0xDA	; 218
    3948:	92 e0       	ldi	r25, 0x02	; 2
    394a:	0e 94 40 05 	call	0xa80	; 0xa80 <AT_mqtt_subscribe>
		g_AT_State = ATCHECKOK;
    394e:	82 e0       	ldi	r24, 0x02	; 2
    3950:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		g_AT_NextState = ATMQTTPUB;
    3954:	87 e0       	ldi	r24, 0x07	; 7
    3956:	80 93 73 07 	sts	0x0773, r24	; 0x800773 <g_AT_NextState>
		break;
    395a:	34 c0       	rjmp	.+104    	; 0x39c4 <AT_statemachine+0x192>
		
		case ATMQTTPUB:
		strcpy(str_AT_mqtt.topic_pub , "TEMPSENSOR");
    395c:	8b e0       	ldi	r24, 0x0B	; 11
    395e:	eb e5       	ldi	r30, 0x5B	; 91
    3960:	f2 e0       	ldi	r31, 0x02	; 2
    3962:	ac ef       	ldi	r26, 0xFC	; 252
    3964:	b2 e0       	ldi	r27, 0x02	; 2
    3966:	01 90       	ld	r0, Z+
    3968:	0d 92       	st	X+, r0
    396a:	8a 95       	dec	r24
    396c:	e1 f7       	brne	.-8      	; 0x3966 <AT_statemachine+0x134>
		AT_mqtt_publish(&str_AT_mqtt, &str_AT_mqtt);
    396e:	6a ed       	ldi	r22, 0xDA	; 218
    3970:	72 e0       	ldi	r23, 0x02	; 2
    3972:	8a ed       	ldi	r24, 0xDA	; 218
    3974:	92 e0       	ldi	r25, 0x02	; 2
    3976:	0e 94 0c 05 	call	0xa18	; 0xa18 <AT_mqtt_publish>
		ClearBuffer(UART_RxBuffer.Buffer);
    397a:	80 e7       	ldi	r24, 0x70	; 112
    397c:	92 e0       	ldi	r25, 0x02	; 2
    397e:	0e 94 1d 04 	call	0x83a	; 0x83a <ClearBuffer>
		g_AT_State = ATMQTTPUB;
    3982:	87 e0       	ldi	r24, 0x07	; 7
    3984:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		break;
    3988:	1d c0       	rjmp	.+58     	; 0x39c4 <AT_statemachine+0x192>
		
		case ATCHECKOK:
		if (UART_RxBuffer.Ok)
    398a:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <UART_RxBuffer+0x68>
    398e:	88 23       	and	r24, r24
    3990:	49 f0       	breq	.+18     	; 0x39a4 <AT_statemachine+0x172>
		{
			g_tickTimeOut = 0;
    3992:	10 92 6f 02 	sts	0x026F, r1	; 0x80026f <g_tickTimeOut>
			UART_RxBuffer.Ok = 0;
    3996:	10 92 d8 02 	sts	0x02D8, r1	; 0x8002d8 <UART_RxBuffer+0x68>
			g_AT_State = g_AT_NextState;
    399a:	80 91 73 07 	lds	r24, 0x0773	; 0x800773 <g_AT_NextState>
    399e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		else if (g_tickTimeOut++ > 10)
		{
			g_tickTimeOut = 0;
			g_AT_State = ATCHECK;
		}
		break;
    39a2:	0f c0       	rjmp	.+30     	; 0x39c2 <AT_statemachine+0x190>
		{
			g_tickTimeOut = 0;
			UART_RxBuffer.Ok = 0;
			g_AT_State = g_AT_NextState;
		}
		else if (g_tickTimeOut++ > 10)
    39a4:	80 91 6f 02 	lds	r24, 0x026F	; 0x80026f <g_tickTimeOut>
    39a8:	91 e0       	ldi	r25, 0x01	; 1
    39aa:	98 0f       	add	r25, r24
    39ac:	90 93 6f 02 	sts	0x026F, r25	; 0x80026f <g_tickTimeOut>
    39b0:	8b 30       	cpi	r24, 0x0B	; 11
    39b2:	38 f0       	brcs	.+14     	; 0x39c2 <AT_statemachine+0x190>
		{
			g_tickTimeOut = 0;
    39b4:	10 92 6f 02 	sts	0x026F, r1	; 0x80026f <g_tickTimeOut>
			g_AT_State = ATCHECK;
    39b8:	81 e0       	ldi	r24, 0x01	; 1
    39ba:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		}
		break;
    39be:	01 c0       	rjmp	.+2      	; 0x39c2 <AT_statemachine+0x190>
		
		default:
		while(1);
    39c0:	ff cf       	rjmp	.-2      	; 0x39c0 <AT_statemachine+0x18e>
		else if (g_tickTimeOut++ > 10)
		{
			g_tickTimeOut = 0;
			g_AT_State = ATCHECK;
		}
		break;
    39c2:	00 00       	nop
		
		default:
		while(1);
	}
    39c4:	00 00       	nop
    39c6:	df 91       	pop	r29
    39c8:	cf 91       	pop	r28
    39ca:	08 95       	ret

000039cc <__subsf3>:
    39cc:	50 58       	subi	r21, 0x80	; 128

000039ce <__addsf3>:
    39ce:	bb 27       	eor	r27, r27
    39d0:	aa 27       	eor	r26, r26
    39d2:	0e 94 fe 1c 	call	0x39fc	; 0x39fc <__addsf3x>
    39d6:	0c 94 78 1e 	jmp	0x3cf0	; 0x3cf0 <__fp_round>
    39da:	0e 94 6a 1e 	call	0x3cd4	; 0x3cd4 <__fp_pscA>
    39de:	38 f0       	brcs	.+14     	; 0x39ee <__addsf3+0x20>
    39e0:	0e 94 71 1e 	call	0x3ce2	; 0x3ce2 <__fp_pscB>
    39e4:	20 f0       	brcs	.+8      	; 0x39ee <__addsf3+0x20>
    39e6:	39 f4       	brne	.+14     	; 0x39f6 <__addsf3+0x28>
    39e8:	9f 3f       	cpi	r25, 0xFF	; 255
    39ea:	19 f4       	brne	.+6      	; 0x39f2 <__addsf3+0x24>
    39ec:	26 f4       	brtc	.+8      	; 0x39f6 <__addsf3+0x28>
    39ee:	0c 94 67 1e 	jmp	0x3cce	; 0x3cce <__fp_nan>
    39f2:	0e f4       	brtc	.+2      	; 0x39f6 <__addsf3+0x28>
    39f4:	e0 95       	com	r30
    39f6:	e7 fb       	bst	r30, 7
    39f8:	0c 94 61 1e 	jmp	0x3cc2	; 0x3cc2 <__fp_inf>

000039fc <__addsf3x>:
    39fc:	e9 2f       	mov	r30, r25
    39fe:	0e 94 89 1e 	call	0x3d12	; 0x3d12 <__fp_split3>
    3a02:	58 f3       	brcs	.-42     	; 0x39da <__addsf3+0xc>
    3a04:	ba 17       	cp	r27, r26
    3a06:	62 07       	cpc	r22, r18
    3a08:	73 07       	cpc	r23, r19
    3a0a:	84 07       	cpc	r24, r20
    3a0c:	95 07       	cpc	r25, r21
    3a0e:	20 f0       	brcs	.+8      	; 0x3a18 <__addsf3x+0x1c>
    3a10:	79 f4       	brne	.+30     	; 0x3a30 <__addsf3x+0x34>
    3a12:	a6 f5       	brtc	.+104    	; 0x3a7c <__addsf3x+0x80>
    3a14:	0c 94 ab 1e 	jmp	0x3d56	; 0x3d56 <__fp_zero>
    3a18:	0e f4       	brtc	.+2      	; 0x3a1c <__addsf3x+0x20>
    3a1a:	e0 95       	com	r30
    3a1c:	0b 2e       	mov	r0, r27
    3a1e:	ba 2f       	mov	r27, r26
    3a20:	a0 2d       	mov	r26, r0
    3a22:	0b 01       	movw	r0, r22
    3a24:	b9 01       	movw	r22, r18
    3a26:	90 01       	movw	r18, r0
    3a28:	0c 01       	movw	r0, r24
    3a2a:	ca 01       	movw	r24, r20
    3a2c:	a0 01       	movw	r20, r0
    3a2e:	11 24       	eor	r1, r1
    3a30:	ff 27       	eor	r31, r31
    3a32:	59 1b       	sub	r21, r25
    3a34:	99 f0       	breq	.+38     	; 0x3a5c <__addsf3x+0x60>
    3a36:	59 3f       	cpi	r21, 0xF9	; 249
    3a38:	50 f4       	brcc	.+20     	; 0x3a4e <__addsf3x+0x52>
    3a3a:	50 3e       	cpi	r21, 0xE0	; 224
    3a3c:	68 f1       	brcs	.+90     	; 0x3a98 <__addsf3x+0x9c>
    3a3e:	1a 16       	cp	r1, r26
    3a40:	f0 40       	sbci	r31, 0x00	; 0
    3a42:	a2 2f       	mov	r26, r18
    3a44:	23 2f       	mov	r18, r19
    3a46:	34 2f       	mov	r19, r20
    3a48:	44 27       	eor	r20, r20
    3a4a:	58 5f       	subi	r21, 0xF8	; 248
    3a4c:	f3 cf       	rjmp	.-26     	; 0x3a34 <__addsf3x+0x38>
    3a4e:	46 95       	lsr	r20
    3a50:	37 95       	ror	r19
    3a52:	27 95       	ror	r18
    3a54:	a7 95       	ror	r26
    3a56:	f0 40       	sbci	r31, 0x00	; 0
    3a58:	53 95       	inc	r21
    3a5a:	c9 f7       	brne	.-14     	; 0x3a4e <__addsf3x+0x52>
    3a5c:	7e f4       	brtc	.+30     	; 0x3a7c <__addsf3x+0x80>
    3a5e:	1f 16       	cp	r1, r31
    3a60:	ba 0b       	sbc	r27, r26
    3a62:	62 0b       	sbc	r22, r18
    3a64:	73 0b       	sbc	r23, r19
    3a66:	84 0b       	sbc	r24, r20
    3a68:	ba f0       	brmi	.+46     	; 0x3a98 <__addsf3x+0x9c>
    3a6a:	91 50       	subi	r25, 0x01	; 1
    3a6c:	a1 f0       	breq	.+40     	; 0x3a96 <__addsf3x+0x9a>
    3a6e:	ff 0f       	add	r31, r31
    3a70:	bb 1f       	adc	r27, r27
    3a72:	66 1f       	adc	r22, r22
    3a74:	77 1f       	adc	r23, r23
    3a76:	88 1f       	adc	r24, r24
    3a78:	c2 f7       	brpl	.-16     	; 0x3a6a <__addsf3x+0x6e>
    3a7a:	0e c0       	rjmp	.+28     	; 0x3a98 <__addsf3x+0x9c>
    3a7c:	ba 0f       	add	r27, r26
    3a7e:	62 1f       	adc	r22, r18
    3a80:	73 1f       	adc	r23, r19
    3a82:	84 1f       	adc	r24, r20
    3a84:	48 f4       	brcc	.+18     	; 0x3a98 <__addsf3x+0x9c>
    3a86:	87 95       	ror	r24
    3a88:	77 95       	ror	r23
    3a8a:	67 95       	ror	r22
    3a8c:	b7 95       	ror	r27
    3a8e:	f7 95       	ror	r31
    3a90:	9e 3f       	cpi	r25, 0xFE	; 254
    3a92:	08 f0       	brcs	.+2      	; 0x3a96 <__addsf3x+0x9a>
    3a94:	b0 cf       	rjmp	.-160    	; 0x39f6 <__addsf3+0x28>
    3a96:	93 95       	inc	r25
    3a98:	88 0f       	add	r24, r24
    3a9a:	08 f0       	brcs	.+2      	; 0x3a9e <__addsf3x+0xa2>
    3a9c:	99 27       	eor	r25, r25
    3a9e:	ee 0f       	add	r30, r30
    3aa0:	97 95       	ror	r25
    3aa2:	87 95       	ror	r24
    3aa4:	08 95       	ret

00003aa6 <__cmpsf2>:
    3aa6:	0e 94 3d 1e 	call	0x3c7a	; 0x3c7a <__fp_cmp>
    3aaa:	08 f4       	brcc	.+2      	; 0x3aae <__cmpsf2+0x8>
    3aac:	81 e0       	ldi	r24, 0x01	; 1
    3aae:	08 95       	ret

00003ab0 <__divsf3>:
    3ab0:	0e 94 6c 1d 	call	0x3ad8	; 0x3ad8 <__divsf3x>
    3ab4:	0c 94 78 1e 	jmp	0x3cf0	; 0x3cf0 <__fp_round>
    3ab8:	0e 94 71 1e 	call	0x3ce2	; 0x3ce2 <__fp_pscB>
    3abc:	58 f0       	brcs	.+22     	; 0x3ad4 <__divsf3+0x24>
    3abe:	0e 94 6a 1e 	call	0x3cd4	; 0x3cd4 <__fp_pscA>
    3ac2:	40 f0       	brcs	.+16     	; 0x3ad4 <__divsf3+0x24>
    3ac4:	29 f4       	brne	.+10     	; 0x3ad0 <__divsf3+0x20>
    3ac6:	5f 3f       	cpi	r21, 0xFF	; 255
    3ac8:	29 f0       	breq	.+10     	; 0x3ad4 <__divsf3+0x24>
    3aca:	0c 94 61 1e 	jmp	0x3cc2	; 0x3cc2 <__fp_inf>
    3ace:	51 11       	cpse	r21, r1
    3ad0:	0c 94 ac 1e 	jmp	0x3d58	; 0x3d58 <__fp_szero>
    3ad4:	0c 94 67 1e 	jmp	0x3cce	; 0x3cce <__fp_nan>

00003ad8 <__divsf3x>:
    3ad8:	0e 94 89 1e 	call	0x3d12	; 0x3d12 <__fp_split3>
    3adc:	68 f3       	brcs	.-38     	; 0x3ab8 <__divsf3+0x8>

00003ade <__divsf3_pse>:
    3ade:	99 23       	and	r25, r25
    3ae0:	b1 f3       	breq	.-20     	; 0x3ace <__divsf3+0x1e>
    3ae2:	55 23       	and	r21, r21
    3ae4:	91 f3       	breq	.-28     	; 0x3aca <__divsf3+0x1a>
    3ae6:	95 1b       	sub	r25, r21
    3ae8:	55 0b       	sbc	r21, r21
    3aea:	bb 27       	eor	r27, r27
    3aec:	aa 27       	eor	r26, r26
    3aee:	62 17       	cp	r22, r18
    3af0:	73 07       	cpc	r23, r19
    3af2:	84 07       	cpc	r24, r20
    3af4:	38 f0       	brcs	.+14     	; 0x3b04 <__divsf3_pse+0x26>
    3af6:	9f 5f       	subi	r25, 0xFF	; 255
    3af8:	5f 4f       	sbci	r21, 0xFF	; 255
    3afa:	22 0f       	add	r18, r18
    3afc:	33 1f       	adc	r19, r19
    3afe:	44 1f       	adc	r20, r20
    3b00:	aa 1f       	adc	r26, r26
    3b02:	a9 f3       	breq	.-22     	; 0x3aee <__divsf3_pse+0x10>
    3b04:	35 d0       	rcall	.+106    	; 0x3b70 <__divsf3_pse+0x92>
    3b06:	0e 2e       	mov	r0, r30
    3b08:	3a f0       	brmi	.+14     	; 0x3b18 <__divsf3_pse+0x3a>
    3b0a:	e0 e8       	ldi	r30, 0x80	; 128
    3b0c:	32 d0       	rcall	.+100    	; 0x3b72 <__divsf3_pse+0x94>
    3b0e:	91 50       	subi	r25, 0x01	; 1
    3b10:	50 40       	sbci	r21, 0x00	; 0
    3b12:	e6 95       	lsr	r30
    3b14:	00 1c       	adc	r0, r0
    3b16:	ca f7       	brpl	.-14     	; 0x3b0a <__divsf3_pse+0x2c>
    3b18:	2b d0       	rcall	.+86     	; 0x3b70 <__divsf3_pse+0x92>
    3b1a:	fe 2f       	mov	r31, r30
    3b1c:	29 d0       	rcall	.+82     	; 0x3b70 <__divsf3_pse+0x92>
    3b1e:	66 0f       	add	r22, r22
    3b20:	77 1f       	adc	r23, r23
    3b22:	88 1f       	adc	r24, r24
    3b24:	bb 1f       	adc	r27, r27
    3b26:	26 17       	cp	r18, r22
    3b28:	37 07       	cpc	r19, r23
    3b2a:	48 07       	cpc	r20, r24
    3b2c:	ab 07       	cpc	r26, r27
    3b2e:	b0 e8       	ldi	r27, 0x80	; 128
    3b30:	09 f0       	breq	.+2      	; 0x3b34 <__divsf3_pse+0x56>
    3b32:	bb 0b       	sbc	r27, r27
    3b34:	80 2d       	mov	r24, r0
    3b36:	bf 01       	movw	r22, r30
    3b38:	ff 27       	eor	r31, r31
    3b3a:	93 58       	subi	r25, 0x83	; 131
    3b3c:	5f 4f       	sbci	r21, 0xFF	; 255
    3b3e:	3a f0       	brmi	.+14     	; 0x3b4e <__divsf3_pse+0x70>
    3b40:	9e 3f       	cpi	r25, 0xFE	; 254
    3b42:	51 05       	cpc	r21, r1
    3b44:	78 f0       	brcs	.+30     	; 0x3b64 <__divsf3_pse+0x86>
    3b46:	0c 94 61 1e 	jmp	0x3cc2	; 0x3cc2 <__fp_inf>
    3b4a:	0c 94 ac 1e 	jmp	0x3d58	; 0x3d58 <__fp_szero>
    3b4e:	5f 3f       	cpi	r21, 0xFF	; 255
    3b50:	e4 f3       	brlt	.-8      	; 0x3b4a <__divsf3_pse+0x6c>
    3b52:	98 3e       	cpi	r25, 0xE8	; 232
    3b54:	d4 f3       	brlt	.-12     	; 0x3b4a <__divsf3_pse+0x6c>
    3b56:	86 95       	lsr	r24
    3b58:	77 95       	ror	r23
    3b5a:	67 95       	ror	r22
    3b5c:	b7 95       	ror	r27
    3b5e:	f7 95       	ror	r31
    3b60:	9f 5f       	subi	r25, 0xFF	; 255
    3b62:	c9 f7       	brne	.-14     	; 0x3b56 <__divsf3_pse+0x78>
    3b64:	88 0f       	add	r24, r24
    3b66:	91 1d       	adc	r25, r1
    3b68:	96 95       	lsr	r25
    3b6a:	87 95       	ror	r24
    3b6c:	97 f9       	bld	r25, 7
    3b6e:	08 95       	ret
    3b70:	e1 e0       	ldi	r30, 0x01	; 1
    3b72:	66 0f       	add	r22, r22
    3b74:	77 1f       	adc	r23, r23
    3b76:	88 1f       	adc	r24, r24
    3b78:	bb 1f       	adc	r27, r27
    3b7a:	62 17       	cp	r22, r18
    3b7c:	73 07       	cpc	r23, r19
    3b7e:	84 07       	cpc	r24, r20
    3b80:	ba 07       	cpc	r27, r26
    3b82:	20 f0       	brcs	.+8      	; 0x3b8c <__divsf3_pse+0xae>
    3b84:	62 1b       	sub	r22, r18
    3b86:	73 0b       	sbc	r23, r19
    3b88:	84 0b       	sbc	r24, r20
    3b8a:	ba 0b       	sbc	r27, r26
    3b8c:	ee 1f       	adc	r30, r30
    3b8e:	88 f7       	brcc	.-30     	; 0x3b72 <__divsf3_pse+0x94>
    3b90:	e0 95       	com	r30
    3b92:	08 95       	ret

00003b94 <__fixsfsi>:
    3b94:	0e 94 d1 1d 	call	0x3ba2	; 0x3ba2 <__fixunssfsi>
    3b98:	68 94       	set
    3b9a:	b1 11       	cpse	r27, r1
    3b9c:	0c 94 ac 1e 	jmp	0x3d58	; 0x3d58 <__fp_szero>
    3ba0:	08 95       	ret

00003ba2 <__fixunssfsi>:
    3ba2:	0e 94 91 1e 	call	0x3d22	; 0x3d22 <__fp_splitA>
    3ba6:	88 f0       	brcs	.+34     	; 0x3bca <__fixunssfsi+0x28>
    3ba8:	9f 57       	subi	r25, 0x7F	; 127
    3baa:	98 f0       	brcs	.+38     	; 0x3bd2 <__fixunssfsi+0x30>
    3bac:	b9 2f       	mov	r27, r25
    3bae:	99 27       	eor	r25, r25
    3bb0:	b7 51       	subi	r27, 0x17	; 23
    3bb2:	b0 f0       	brcs	.+44     	; 0x3be0 <__fixunssfsi+0x3e>
    3bb4:	e1 f0       	breq	.+56     	; 0x3bee <__fixunssfsi+0x4c>
    3bb6:	66 0f       	add	r22, r22
    3bb8:	77 1f       	adc	r23, r23
    3bba:	88 1f       	adc	r24, r24
    3bbc:	99 1f       	adc	r25, r25
    3bbe:	1a f0       	brmi	.+6      	; 0x3bc6 <__fixunssfsi+0x24>
    3bc0:	ba 95       	dec	r27
    3bc2:	c9 f7       	brne	.-14     	; 0x3bb6 <__fixunssfsi+0x14>
    3bc4:	14 c0       	rjmp	.+40     	; 0x3bee <__fixunssfsi+0x4c>
    3bc6:	b1 30       	cpi	r27, 0x01	; 1
    3bc8:	91 f0       	breq	.+36     	; 0x3bee <__fixunssfsi+0x4c>
    3bca:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__fp_zero>
    3bce:	b1 e0       	ldi	r27, 0x01	; 1
    3bd0:	08 95       	ret
    3bd2:	0c 94 ab 1e 	jmp	0x3d56	; 0x3d56 <__fp_zero>
    3bd6:	67 2f       	mov	r22, r23
    3bd8:	78 2f       	mov	r23, r24
    3bda:	88 27       	eor	r24, r24
    3bdc:	b8 5f       	subi	r27, 0xF8	; 248
    3bde:	39 f0       	breq	.+14     	; 0x3bee <__fixunssfsi+0x4c>
    3be0:	b9 3f       	cpi	r27, 0xF9	; 249
    3be2:	cc f3       	brlt	.-14     	; 0x3bd6 <__fixunssfsi+0x34>
    3be4:	86 95       	lsr	r24
    3be6:	77 95       	ror	r23
    3be8:	67 95       	ror	r22
    3bea:	b3 95       	inc	r27
    3bec:	d9 f7       	brne	.-10     	; 0x3be4 <__fixunssfsi+0x42>
    3bee:	3e f4       	brtc	.+14     	; 0x3bfe <__fixunssfsi+0x5c>
    3bf0:	90 95       	com	r25
    3bf2:	80 95       	com	r24
    3bf4:	70 95       	com	r23
    3bf6:	61 95       	neg	r22
    3bf8:	7f 4f       	sbci	r23, 0xFF	; 255
    3bfa:	8f 4f       	sbci	r24, 0xFF	; 255
    3bfc:	9f 4f       	sbci	r25, 0xFF	; 255
    3bfe:	08 95       	ret

00003c00 <__floatunsisf>:
    3c00:	e8 94       	clt
    3c02:	09 c0       	rjmp	.+18     	; 0x3c16 <__floatsisf+0x12>

00003c04 <__floatsisf>:
    3c04:	97 fb       	bst	r25, 7
    3c06:	3e f4       	brtc	.+14     	; 0x3c16 <__floatsisf+0x12>
    3c08:	90 95       	com	r25
    3c0a:	80 95       	com	r24
    3c0c:	70 95       	com	r23
    3c0e:	61 95       	neg	r22
    3c10:	7f 4f       	sbci	r23, 0xFF	; 255
    3c12:	8f 4f       	sbci	r24, 0xFF	; 255
    3c14:	9f 4f       	sbci	r25, 0xFF	; 255
    3c16:	99 23       	and	r25, r25
    3c18:	a9 f0       	breq	.+42     	; 0x3c44 <__floatsisf+0x40>
    3c1a:	f9 2f       	mov	r31, r25
    3c1c:	96 e9       	ldi	r25, 0x96	; 150
    3c1e:	bb 27       	eor	r27, r27
    3c20:	93 95       	inc	r25
    3c22:	f6 95       	lsr	r31
    3c24:	87 95       	ror	r24
    3c26:	77 95       	ror	r23
    3c28:	67 95       	ror	r22
    3c2a:	b7 95       	ror	r27
    3c2c:	f1 11       	cpse	r31, r1
    3c2e:	f8 cf       	rjmp	.-16     	; 0x3c20 <__floatsisf+0x1c>
    3c30:	fa f4       	brpl	.+62     	; 0x3c70 <__floatsisf+0x6c>
    3c32:	bb 0f       	add	r27, r27
    3c34:	11 f4       	brne	.+4      	; 0x3c3a <__floatsisf+0x36>
    3c36:	60 ff       	sbrs	r22, 0
    3c38:	1b c0       	rjmp	.+54     	; 0x3c70 <__floatsisf+0x6c>
    3c3a:	6f 5f       	subi	r22, 0xFF	; 255
    3c3c:	7f 4f       	sbci	r23, 0xFF	; 255
    3c3e:	8f 4f       	sbci	r24, 0xFF	; 255
    3c40:	9f 4f       	sbci	r25, 0xFF	; 255
    3c42:	16 c0       	rjmp	.+44     	; 0x3c70 <__floatsisf+0x6c>
    3c44:	88 23       	and	r24, r24
    3c46:	11 f0       	breq	.+4      	; 0x3c4c <__floatsisf+0x48>
    3c48:	96 e9       	ldi	r25, 0x96	; 150
    3c4a:	11 c0       	rjmp	.+34     	; 0x3c6e <__floatsisf+0x6a>
    3c4c:	77 23       	and	r23, r23
    3c4e:	21 f0       	breq	.+8      	; 0x3c58 <__floatsisf+0x54>
    3c50:	9e e8       	ldi	r25, 0x8E	; 142
    3c52:	87 2f       	mov	r24, r23
    3c54:	76 2f       	mov	r23, r22
    3c56:	05 c0       	rjmp	.+10     	; 0x3c62 <__floatsisf+0x5e>
    3c58:	66 23       	and	r22, r22
    3c5a:	71 f0       	breq	.+28     	; 0x3c78 <__floatsisf+0x74>
    3c5c:	96 e8       	ldi	r25, 0x86	; 134
    3c5e:	86 2f       	mov	r24, r22
    3c60:	70 e0       	ldi	r23, 0x00	; 0
    3c62:	60 e0       	ldi	r22, 0x00	; 0
    3c64:	2a f0       	brmi	.+10     	; 0x3c70 <__floatsisf+0x6c>
    3c66:	9a 95       	dec	r25
    3c68:	66 0f       	add	r22, r22
    3c6a:	77 1f       	adc	r23, r23
    3c6c:	88 1f       	adc	r24, r24
    3c6e:	da f7       	brpl	.-10     	; 0x3c66 <__floatsisf+0x62>
    3c70:	88 0f       	add	r24, r24
    3c72:	96 95       	lsr	r25
    3c74:	87 95       	ror	r24
    3c76:	97 f9       	bld	r25, 7
    3c78:	08 95       	ret

00003c7a <__fp_cmp>:
    3c7a:	99 0f       	add	r25, r25
    3c7c:	00 08       	sbc	r0, r0
    3c7e:	55 0f       	add	r21, r21
    3c80:	aa 0b       	sbc	r26, r26
    3c82:	e0 e8       	ldi	r30, 0x80	; 128
    3c84:	fe ef       	ldi	r31, 0xFE	; 254
    3c86:	16 16       	cp	r1, r22
    3c88:	17 06       	cpc	r1, r23
    3c8a:	e8 07       	cpc	r30, r24
    3c8c:	f9 07       	cpc	r31, r25
    3c8e:	c0 f0       	brcs	.+48     	; 0x3cc0 <__fp_cmp+0x46>
    3c90:	12 16       	cp	r1, r18
    3c92:	13 06       	cpc	r1, r19
    3c94:	e4 07       	cpc	r30, r20
    3c96:	f5 07       	cpc	r31, r21
    3c98:	98 f0       	brcs	.+38     	; 0x3cc0 <__fp_cmp+0x46>
    3c9a:	62 1b       	sub	r22, r18
    3c9c:	73 0b       	sbc	r23, r19
    3c9e:	84 0b       	sbc	r24, r20
    3ca0:	95 0b       	sbc	r25, r21
    3ca2:	39 f4       	brne	.+14     	; 0x3cb2 <__fp_cmp+0x38>
    3ca4:	0a 26       	eor	r0, r26
    3ca6:	61 f0       	breq	.+24     	; 0x3cc0 <__fp_cmp+0x46>
    3ca8:	23 2b       	or	r18, r19
    3caa:	24 2b       	or	r18, r20
    3cac:	25 2b       	or	r18, r21
    3cae:	21 f4       	brne	.+8      	; 0x3cb8 <__fp_cmp+0x3e>
    3cb0:	08 95       	ret
    3cb2:	0a 26       	eor	r0, r26
    3cb4:	09 f4       	brne	.+2      	; 0x3cb8 <__fp_cmp+0x3e>
    3cb6:	a1 40       	sbci	r26, 0x01	; 1
    3cb8:	a6 95       	lsr	r26
    3cba:	8f ef       	ldi	r24, 0xFF	; 255
    3cbc:	81 1d       	adc	r24, r1
    3cbe:	81 1d       	adc	r24, r1
    3cc0:	08 95       	ret

00003cc2 <__fp_inf>:
    3cc2:	97 f9       	bld	r25, 7
    3cc4:	9f 67       	ori	r25, 0x7F	; 127
    3cc6:	80 e8       	ldi	r24, 0x80	; 128
    3cc8:	70 e0       	ldi	r23, 0x00	; 0
    3cca:	60 e0       	ldi	r22, 0x00	; 0
    3ccc:	08 95       	ret

00003cce <__fp_nan>:
    3cce:	9f ef       	ldi	r25, 0xFF	; 255
    3cd0:	80 ec       	ldi	r24, 0xC0	; 192
    3cd2:	08 95       	ret

00003cd4 <__fp_pscA>:
    3cd4:	00 24       	eor	r0, r0
    3cd6:	0a 94       	dec	r0
    3cd8:	16 16       	cp	r1, r22
    3cda:	17 06       	cpc	r1, r23
    3cdc:	18 06       	cpc	r1, r24
    3cde:	09 06       	cpc	r0, r25
    3ce0:	08 95       	ret

00003ce2 <__fp_pscB>:
    3ce2:	00 24       	eor	r0, r0
    3ce4:	0a 94       	dec	r0
    3ce6:	12 16       	cp	r1, r18
    3ce8:	13 06       	cpc	r1, r19
    3cea:	14 06       	cpc	r1, r20
    3cec:	05 06       	cpc	r0, r21
    3cee:	08 95       	ret

00003cf0 <__fp_round>:
    3cf0:	09 2e       	mov	r0, r25
    3cf2:	03 94       	inc	r0
    3cf4:	00 0c       	add	r0, r0
    3cf6:	11 f4       	brne	.+4      	; 0x3cfc <__fp_round+0xc>
    3cf8:	88 23       	and	r24, r24
    3cfa:	52 f0       	brmi	.+20     	; 0x3d10 <__fp_round+0x20>
    3cfc:	bb 0f       	add	r27, r27
    3cfe:	40 f4       	brcc	.+16     	; 0x3d10 <__fp_round+0x20>
    3d00:	bf 2b       	or	r27, r31
    3d02:	11 f4       	brne	.+4      	; 0x3d08 <__fp_round+0x18>
    3d04:	60 ff       	sbrs	r22, 0
    3d06:	04 c0       	rjmp	.+8      	; 0x3d10 <__fp_round+0x20>
    3d08:	6f 5f       	subi	r22, 0xFF	; 255
    3d0a:	7f 4f       	sbci	r23, 0xFF	; 255
    3d0c:	8f 4f       	sbci	r24, 0xFF	; 255
    3d0e:	9f 4f       	sbci	r25, 0xFF	; 255
    3d10:	08 95       	ret

00003d12 <__fp_split3>:
    3d12:	57 fd       	sbrc	r21, 7
    3d14:	90 58       	subi	r25, 0x80	; 128
    3d16:	44 0f       	add	r20, r20
    3d18:	55 1f       	adc	r21, r21
    3d1a:	59 f0       	breq	.+22     	; 0x3d32 <__fp_splitA+0x10>
    3d1c:	5f 3f       	cpi	r21, 0xFF	; 255
    3d1e:	71 f0       	breq	.+28     	; 0x3d3c <__fp_splitA+0x1a>
    3d20:	47 95       	ror	r20

00003d22 <__fp_splitA>:
    3d22:	88 0f       	add	r24, r24
    3d24:	97 fb       	bst	r25, 7
    3d26:	99 1f       	adc	r25, r25
    3d28:	61 f0       	breq	.+24     	; 0x3d42 <__fp_splitA+0x20>
    3d2a:	9f 3f       	cpi	r25, 0xFF	; 255
    3d2c:	79 f0       	breq	.+30     	; 0x3d4c <__fp_splitA+0x2a>
    3d2e:	87 95       	ror	r24
    3d30:	08 95       	ret
    3d32:	12 16       	cp	r1, r18
    3d34:	13 06       	cpc	r1, r19
    3d36:	14 06       	cpc	r1, r20
    3d38:	55 1f       	adc	r21, r21
    3d3a:	f2 cf       	rjmp	.-28     	; 0x3d20 <__fp_split3+0xe>
    3d3c:	46 95       	lsr	r20
    3d3e:	f1 df       	rcall	.-30     	; 0x3d22 <__fp_splitA>
    3d40:	08 c0       	rjmp	.+16     	; 0x3d52 <__fp_splitA+0x30>
    3d42:	16 16       	cp	r1, r22
    3d44:	17 06       	cpc	r1, r23
    3d46:	18 06       	cpc	r1, r24
    3d48:	99 1f       	adc	r25, r25
    3d4a:	f1 cf       	rjmp	.-30     	; 0x3d2e <__fp_splitA+0xc>
    3d4c:	86 95       	lsr	r24
    3d4e:	71 05       	cpc	r23, r1
    3d50:	61 05       	cpc	r22, r1
    3d52:	08 94       	sec
    3d54:	08 95       	ret

00003d56 <__fp_zero>:
    3d56:	e8 94       	clt

00003d58 <__fp_szero>:
    3d58:	bb 27       	eor	r27, r27
    3d5a:	66 27       	eor	r22, r22
    3d5c:	77 27       	eor	r23, r23
    3d5e:	cb 01       	movw	r24, r22
    3d60:	97 f9       	bld	r25, 7
    3d62:	08 95       	ret

00003d64 <__gesf2>:
    3d64:	0e 94 3d 1e 	call	0x3c7a	; 0x3c7a <__fp_cmp>
    3d68:	08 f4       	brcc	.+2      	; 0x3d6c <__gesf2+0x8>
    3d6a:	8f ef       	ldi	r24, 0xFF	; 255
    3d6c:	08 95       	ret

00003d6e <__mulsf3>:
    3d6e:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__mulsf3x>
    3d72:	0c 94 78 1e 	jmp	0x3cf0	; 0x3cf0 <__fp_round>
    3d76:	0e 94 6a 1e 	call	0x3cd4	; 0x3cd4 <__fp_pscA>
    3d7a:	38 f0       	brcs	.+14     	; 0x3d8a <__mulsf3+0x1c>
    3d7c:	0e 94 71 1e 	call	0x3ce2	; 0x3ce2 <__fp_pscB>
    3d80:	20 f0       	brcs	.+8      	; 0x3d8a <__mulsf3+0x1c>
    3d82:	95 23       	and	r25, r21
    3d84:	11 f0       	breq	.+4      	; 0x3d8a <__mulsf3+0x1c>
    3d86:	0c 94 61 1e 	jmp	0x3cc2	; 0x3cc2 <__fp_inf>
    3d8a:	0c 94 67 1e 	jmp	0x3cce	; 0x3cce <__fp_nan>
    3d8e:	11 24       	eor	r1, r1
    3d90:	0c 94 ac 1e 	jmp	0x3d58	; 0x3d58 <__fp_szero>

00003d94 <__mulsf3x>:
    3d94:	0e 94 89 1e 	call	0x3d12	; 0x3d12 <__fp_split3>
    3d98:	70 f3       	brcs	.-36     	; 0x3d76 <__mulsf3+0x8>

00003d9a <__mulsf3_pse>:
    3d9a:	95 9f       	mul	r25, r21
    3d9c:	c1 f3       	breq	.-16     	; 0x3d8e <__mulsf3+0x20>
    3d9e:	95 0f       	add	r25, r21
    3da0:	50 e0       	ldi	r21, 0x00	; 0
    3da2:	55 1f       	adc	r21, r21
    3da4:	62 9f       	mul	r22, r18
    3da6:	f0 01       	movw	r30, r0
    3da8:	72 9f       	mul	r23, r18
    3daa:	bb 27       	eor	r27, r27
    3dac:	f0 0d       	add	r31, r0
    3dae:	b1 1d       	adc	r27, r1
    3db0:	63 9f       	mul	r22, r19
    3db2:	aa 27       	eor	r26, r26
    3db4:	f0 0d       	add	r31, r0
    3db6:	b1 1d       	adc	r27, r1
    3db8:	aa 1f       	adc	r26, r26
    3dba:	64 9f       	mul	r22, r20
    3dbc:	66 27       	eor	r22, r22
    3dbe:	b0 0d       	add	r27, r0
    3dc0:	a1 1d       	adc	r26, r1
    3dc2:	66 1f       	adc	r22, r22
    3dc4:	82 9f       	mul	r24, r18
    3dc6:	22 27       	eor	r18, r18
    3dc8:	b0 0d       	add	r27, r0
    3dca:	a1 1d       	adc	r26, r1
    3dcc:	62 1f       	adc	r22, r18
    3dce:	73 9f       	mul	r23, r19
    3dd0:	b0 0d       	add	r27, r0
    3dd2:	a1 1d       	adc	r26, r1
    3dd4:	62 1f       	adc	r22, r18
    3dd6:	83 9f       	mul	r24, r19
    3dd8:	a0 0d       	add	r26, r0
    3dda:	61 1d       	adc	r22, r1
    3ddc:	22 1f       	adc	r18, r18
    3dde:	74 9f       	mul	r23, r20
    3de0:	33 27       	eor	r19, r19
    3de2:	a0 0d       	add	r26, r0
    3de4:	61 1d       	adc	r22, r1
    3de6:	23 1f       	adc	r18, r19
    3de8:	84 9f       	mul	r24, r20
    3dea:	60 0d       	add	r22, r0
    3dec:	21 1d       	adc	r18, r1
    3dee:	82 2f       	mov	r24, r18
    3df0:	76 2f       	mov	r23, r22
    3df2:	6a 2f       	mov	r22, r26
    3df4:	11 24       	eor	r1, r1
    3df6:	9f 57       	subi	r25, 0x7F	; 127
    3df8:	50 40       	sbci	r21, 0x00	; 0
    3dfa:	9a f0       	brmi	.+38     	; 0x3e22 <__mulsf3_pse+0x88>
    3dfc:	f1 f0       	breq	.+60     	; 0x3e3a <__mulsf3_pse+0xa0>
    3dfe:	88 23       	and	r24, r24
    3e00:	4a f0       	brmi	.+18     	; 0x3e14 <__mulsf3_pse+0x7a>
    3e02:	ee 0f       	add	r30, r30
    3e04:	ff 1f       	adc	r31, r31
    3e06:	bb 1f       	adc	r27, r27
    3e08:	66 1f       	adc	r22, r22
    3e0a:	77 1f       	adc	r23, r23
    3e0c:	88 1f       	adc	r24, r24
    3e0e:	91 50       	subi	r25, 0x01	; 1
    3e10:	50 40       	sbci	r21, 0x00	; 0
    3e12:	a9 f7       	brne	.-22     	; 0x3dfe <__mulsf3_pse+0x64>
    3e14:	9e 3f       	cpi	r25, 0xFE	; 254
    3e16:	51 05       	cpc	r21, r1
    3e18:	80 f0       	brcs	.+32     	; 0x3e3a <__mulsf3_pse+0xa0>
    3e1a:	0c 94 61 1e 	jmp	0x3cc2	; 0x3cc2 <__fp_inf>
    3e1e:	0c 94 ac 1e 	jmp	0x3d58	; 0x3d58 <__fp_szero>
    3e22:	5f 3f       	cpi	r21, 0xFF	; 255
    3e24:	e4 f3       	brlt	.-8      	; 0x3e1e <__mulsf3_pse+0x84>
    3e26:	98 3e       	cpi	r25, 0xE8	; 232
    3e28:	d4 f3       	brlt	.-12     	; 0x3e1e <__mulsf3_pse+0x84>
    3e2a:	86 95       	lsr	r24
    3e2c:	77 95       	ror	r23
    3e2e:	67 95       	ror	r22
    3e30:	b7 95       	ror	r27
    3e32:	f7 95       	ror	r31
    3e34:	e7 95       	ror	r30
    3e36:	9f 5f       	subi	r25, 0xFF	; 255
    3e38:	c1 f7       	brne	.-16     	; 0x3e2a <__mulsf3_pse+0x90>
    3e3a:	fe 2b       	or	r31, r30
    3e3c:	88 0f       	add	r24, r24
    3e3e:	91 1d       	adc	r25, r1
    3e40:	96 95       	lsr	r25
    3e42:	87 95       	ror	r24
    3e44:	97 f9       	bld	r25, 7
    3e46:	08 95       	ret

00003e48 <vfprintf>:
    3e48:	a0 e1       	ldi	r26, 0x10	; 16
    3e4a:	b0 e0       	ldi	r27, 0x00	; 0
    3e4c:	ea e2       	ldi	r30, 0x2A	; 42
    3e4e:	ff e1       	ldi	r31, 0x1F	; 31
    3e50:	0c 94 a7 22 	jmp	0x454e	; 0x454e <__prologue_saves__>
    3e54:	7c 01       	movw	r14, r24
    3e56:	1b 01       	movw	r2, r22
    3e58:	6a 01       	movw	r12, r20
    3e5a:	fc 01       	movw	r30, r24
    3e5c:	17 82       	std	Z+7, r1	; 0x07
    3e5e:	16 82       	std	Z+6, r1	; 0x06
    3e60:	83 81       	ldd	r24, Z+3	; 0x03
    3e62:	81 ff       	sbrs	r24, 1
    3e64:	44 c3       	rjmp	.+1672   	; 0x44ee <vfprintf+0x6a6>
    3e66:	9e 01       	movw	r18, r28
    3e68:	2f 5f       	subi	r18, 0xFF	; 255
    3e6a:	3f 4f       	sbci	r19, 0xFF	; 255
    3e6c:	39 01       	movw	r6, r18
    3e6e:	f7 01       	movw	r30, r14
    3e70:	93 81       	ldd	r25, Z+3	; 0x03
    3e72:	f1 01       	movw	r30, r2
    3e74:	93 fd       	sbrc	r25, 3
    3e76:	85 91       	lpm	r24, Z+
    3e78:	93 ff       	sbrs	r25, 3
    3e7a:	81 91       	ld	r24, Z+
    3e7c:	1f 01       	movw	r2, r30
    3e7e:	88 23       	and	r24, r24
    3e80:	09 f4       	brne	.+2      	; 0x3e84 <vfprintf+0x3c>
    3e82:	31 c3       	rjmp	.+1634   	; 0x44e6 <vfprintf+0x69e>
    3e84:	85 32       	cpi	r24, 0x25	; 37
    3e86:	39 f4       	brne	.+14     	; 0x3e96 <vfprintf+0x4e>
    3e88:	93 fd       	sbrc	r25, 3
    3e8a:	85 91       	lpm	r24, Z+
    3e8c:	93 ff       	sbrs	r25, 3
    3e8e:	81 91       	ld	r24, Z+
    3e90:	1f 01       	movw	r2, r30
    3e92:	85 32       	cpi	r24, 0x25	; 37
    3e94:	39 f4       	brne	.+14     	; 0x3ea4 <vfprintf+0x5c>
    3e96:	b7 01       	movw	r22, r14
    3e98:	90 e0       	ldi	r25, 0x00	; 0
    3e9a:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    3e9e:	56 01       	movw	r10, r12
    3ea0:	65 01       	movw	r12, r10
    3ea2:	e5 cf       	rjmp	.-54     	; 0x3e6e <vfprintf+0x26>
    3ea4:	10 e0       	ldi	r17, 0x00	; 0
    3ea6:	51 2c       	mov	r5, r1
    3ea8:	91 2c       	mov	r9, r1
    3eaa:	ff e1       	ldi	r31, 0x1F	; 31
    3eac:	f9 15       	cp	r31, r9
    3eae:	d8 f0       	brcs	.+54     	; 0x3ee6 <vfprintf+0x9e>
    3eb0:	8b 32       	cpi	r24, 0x2B	; 43
    3eb2:	79 f0       	breq	.+30     	; 0x3ed2 <vfprintf+0x8a>
    3eb4:	38 f4       	brcc	.+14     	; 0x3ec4 <vfprintf+0x7c>
    3eb6:	80 32       	cpi	r24, 0x20	; 32
    3eb8:	79 f0       	breq	.+30     	; 0x3ed8 <vfprintf+0x90>
    3eba:	83 32       	cpi	r24, 0x23	; 35
    3ebc:	a1 f4       	brne	.+40     	; 0x3ee6 <vfprintf+0x9e>
    3ebe:	f9 2d       	mov	r31, r9
    3ec0:	f0 61       	ori	r31, 0x10	; 16
    3ec2:	2e c0       	rjmp	.+92     	; 0x3f20 <vfprintf+0xd8>
    3ec4:	8d 32       	cpi	r24, 0x2D	; 45
    3ec6:	61 f0       	breq	.+24     	; 0x3ee0 <vfprintf+0x98>
    3ec8:	80 33       	cpi	r24, 0x30	; 48
    3eca:	69 f4       	brne	.+26     	; 0x3ee6 <vfprintf+0x9e>
    3ecc:	29 2d       	mov	r18, r9
    3ece:	21 60       	ori	r18, 0x01	; 1
    3ed0:	2d c0       	rjmp	.+90     	; 0x3f2c <vfprintf+0xe4>
    3ed2:	39 2d       	mov	r19, r9
    3ed4:	32 60       	ori	r19, 0x02	; 2
    3ed6:	93 2e       	mov	r9, r19
    3ed8:	89 2d       	mov	r24, r9
    3eda:	84 60       	ori	r24, 0x04	; 4
    3edc:	98 2e       	mov	r9, r24
    3ede:	2a c0       	rjmp	.+84     	; 0x3f34 <vfprintf+0xec>
    3ee0:	e9 2d       	mov	r30, r9
    3ee2:	e8 60       	ori	r30, 0x08	; 8
    3ee4:	15 c0       	rjmp	.+42     	; 0x3f10 <vfprintf+0xc8>
    3ee6:	97 fc       	sbrc	r9, 7
    3ee8:	2d c0       	rjmp	.+90     	; 0x3f44 <vfprintf+0xfc>
    3eea:	20 ed       	ldi	r18, 0xD0	; 208
    3eec:	28 0f       	add	r18, r24
    3eee:	2a 30       	cpi	r18, 0x0A	; 10
    3ef0:	88 f4       	brcc	.+34     	; 0x3f14 <vfprintf+0xcc>
    3ef2:	96 fe       	sbrs	r9, 6
    3ef4:	06 c0       	rjmp	.+12     	; 0x3f02 <vfprintf+0xba>
    3ef6:	3a e0       	ldi	r19, 0x0A	; 10
    3ef8:	13 9f       	mul	r17, r19
    3efa:	20 0d       	add	r18, r0
    3efc:	11 24       	eor	r1, r1
    3efe:	12 2f       	mov	r17, r18
    3f00:	19 c0       	rjmp	.+50     	; 0x3f34 <vfprintf+0xec>
    3f02:	8a e0       	ldi	r24, 0x0A	; 10
    3f04:	58 9e       	mul	r5, r24
    3f06:	20 0d       	add	r18, r0
    3f08:	11 24       	eor	r1, r1
    3f0a:	52 2e       	mov	r5, r18
    3f0c:	e9 2d       	mov	r30, r9
    3f0e:	e0 62       	ori	r30, 0x20	; 32
    3f10:	9e 2e       	mov	r9, r30
    3f12:	10 c0       	rjmp	.+32     	; 0x3f34 <vfprintf+0xec>
    3f14:	8e 32       	cpi	r24, 0x2E	; 46
    3f16:	31 f4       	brne	.+12     	; 0x3f24 <vfprintf+0xdc>
    3f18:	96 fc       	sbrc	r9, 6
    3f1a:	e5 c2       	rjmp	.+1482   	; 0x44e6 <vfprintf+0x69e>
    3f1c:	f9 2d       	mov	r31, r9
    3f1e:	f0 64       	ori	r31, 0x40	; 64
    3f20:	9f 2e       	mov	r9, r31
    3f22:	08 c0       	rjmp	.+16     	; 0x3f34 <vfprintf+0xec>
    3f24:	8c 36       	cpi	r24, 0x6C	; 108
    3f26:	21 f4       	brne	.+8      	; 0x3f30 <vfprintf+0xe8>
    3f28:	29 2d       	mov	r18, r9
    3f2a:	20 68       	ori	r18, 0x80	; 128
    3f2c:	92 2e       	mov	r9, r18
    3f2e:	02 c0       	rjmp	.+4      	; 0x3f34 <vfprintf+0xec>
    3f30:	88 36       	cpi	r24, 0x68	; 104
    3f32:	41 f4       	brne	.+16     	; 0x3f44 <vfprintf+0xfc>
    3f34:	f1 01       	movw	r30, r2
    3f36:	93 fd       	sbrc	r25, 3
    3f38:	85 91       	lpm	r24, Z+
    3f3a:	93 ff       	sbrs	r25, 3
    3f3c:	81 91       	ld	r24, Z+
    3f3e:	1f 01       	movw	r2, r30
    3f40:	81 11       	cpse	r24, r1
    3f42:	b3 cf       	rjmp	.-154    	; 0x3eaa <vfprintf+0x62>
    3f44:	9b eb       	ldi	r25, 0xBB	; 187
    3f46:	98 0f       	add	r25, r24
    3f48:	93 30       	cpi	r25, 0x03	; 3
    3f4a:	20 f4       	brcc	.+8      	; 0x3f54 <vfprintf+0x10c>
    3f4c:	99 2d       	mov	r25, r9
    3f4e:	90 61       	ori	r25, 0x10	; 16
    3f50:	80 5e       	subi	r24, 0xE0	; 224
    3f52:	07 c0       	rjmp	.+14     	; 0x3f62 <vfprintf+0x11a>
    3f54:	9b e9       	ldi	r25, 0x9B	; 155
    3f56:	98 0f       	add	r25, r24
    3f58:	93 30       	cpi	r25, 0x03	; 3
    3f5a:	08 f0       	brcs	.+2      	; 0x3f5e <vfprintf+0x116>
    3f5c:	66 c1       	rjmp	.+716    	; 0x422a <vfprintf+0x3e2>
    3f5e:	99 2d       	mov	r25, r9
    3f60:	9f 7e       	andi	r25, 0xEF	; 239
    3f62:	96 ff       	sbrs	r25, 6
    3f64:	16 e0       	ldi	r17, 0x06	; 6
    3f66:	9f 73       	andi	r25, 0x3F	; 63
    3f68:	99 2e       	mov	r9, r25
    3f6a:	85 36       	cpi	r24, 0x65	; 101
    3f6c:	19 f4       	brne	.+6      	; 0x3f74 <vfprintf+0x12c>
    3f6e:	90 64       	ori	r25, 0x40	; 64
    3f70:	99 2e       	mov	r9, r25
    3f72:	08 c0       	rjmp	.+16     	; 0x3f84 <vfprintf+0x13c>
    3f74:	86 36       	cpi	r24, 0x66	; 102
    3f76:	21 f4       	brne	.+8      	; 0x3f80 <vfprintf+0x138>
    3f78:	39 2f       	mov	r19, r25
    3f7a:	30 68       	ori	r19, 0x80	; 128
    3f7c:	93 2e       	mov	r9, r19
    3f7e:	02 c0       	rjmp	.+4      	; 0x3f84 <vfprintf+0x13c>
    3f80:	11 11       	cpse	r17, r1
    3f82:	11 50       	subi	r17, 0x01	; 1
    3f84:	97 fe       	sbrs	r9, 7
    3f86:	07 c0       	rjmp	.+14     	; 0x3f96 <vfprintf+0x14e>
    3f88:	1c 33       	cpi	r17, 0x3C	; 60
    3f8a:	50 f4       	brcc	.+20     	; 0x3fa0 <vfprintf+0x158>
    3f8c:	44 24       	eor	r4, r4
    3f8e:	43 94       	inc	r4
    3f90:	41 0e       	add	r4, r17
    3f92:	27 e0       	ldi	r18, 0x07	; 7
    3f94:	0b c0       	rjmp	.+22     	; 0x3fac <vfprintf+0x164>
    3f96:	18 30       	cpi	r17, 0x08	; 8
    3f98:	38 f0       	brcs	.+14     	; 0x3fa8 <vfprintf+0x160>
    3f9a:	27 e0       	ldi	r18, 0x07	; 7
    3f9c:	17 e0       	ldi	r17, 0x07	; 7
    3f9e:	05 c0       	rjmp	.+10     	; 0x3faa <vfprintf+0x162>
    3fa0:	27 e0       	ldi	r18, 0x07	; 7
    3fa2:	9c e3       	ldi	r25, 0x3C	; 60
    3fa4:	49 2e       	mov	r4, r25
    3fa6:	02 c0       	rjmp	.+4      	; 0x3fac <vfprintf+0x164>
    3fa8:	21 2f       	mov	r18, r17
    3faa:	41 2c       	mov	r4, r1
    3fac:	56 01       	movw	r10, r12
    3fae:	84 e0       	ldi	r24, 0x04	; 4
    3fb0:	a8 0e       	add	r10, r24
    3fb2:	b1 1c       	adc	r11, r1
    3fb4:	f6 01       	movw	r30, r12
    3fb6:	60 81       	ld	r22, Z
    3fb8:	71 81       	ldd	r23, Z+1	; 0x01
    3fba:	82 81       	ldd	r24, Z+2	; 0x02
    3fbc:	93 81       	ldd	r25, Z+3	; 0x03
    3fbe:	04 2d       	mov	r16, r4
    3fc0:	a3 01       	movw	r20, r6
    3fc2:	0e 94 de 22 	call	0x45bc	; 0x45bc <__ftoa_engine>
    3fc6:	6c 01       	movw	r12, r24
    3fc8:	f9 81       	ldd	r31, Y+1	; 0x01
    3fca:	fc 87       	std	Y+12, r31	; 0x0c
    3fcc:	f0 ff       	sbrs	r31, 0
    3fce:	02 c0       	rjmp	.+4      	; 0x3fd4 <vfprintf+0x18c>
    3fd0:	f3 ff       	sbrs	r31, 3
    3fd2:	06 c0       	rjmp	.+12     	; 0x3fe0 <vfprintf+0x198>
    3fd4:	91 fc       	sbrc	r9, 1
    3fd6:	06 c0       	rjmp	.+12     	; 0x3fe4 <vfprintf+0x19c>
    3fd8:	92 fe       	sbrs	r9, 2
    3fda:	06 c0       	rjmp	.+12     	; 0x3fe8 <vfprintf+0x1a0>
    3fdc:	00 e2       	ldi	r16, 0x20	; 32
    3fde:	05 c0       	rjmp	.+10     	; 0x3fea <vfprintf+0x1a2>
    3fe0:	0d e2       	ldi	r16, 0x2D	; 45
    3fe2:	03 c0       	rjmp	.+6      	; 0x3fea <vfprintf+0x1a2>
    3fe4:	0b e2       	ldi	r16, 0x2B	; 43
    3fe6:	01 c0       	rjmp	.+2      	; 0x3fea <vfprintf+0x1a2>
    3fe8:	00 e0       	ldi	r16, 0x00	; 0
    3fea:	8c 85       	ldd	r24, Y+12	; 0x0c
    3fec:	8c 70       	andi	r24, 0x0C	; 12
    3fee:	19 f0       	breq	.+6      	; 0x3ff6 <vfprintf+0x1ae>
    3ff0:	01 11       	cpse	r16, r1
    3ff2:	5a c2       	rjmp	.+1204   	; 0x44a8 <vfprintf+0x660>
    3ff4:	9b c2       	rjmp	.+1334   	; 0x452c <vfprintf+0x6e4>
    3ff6:	97 fe       	sbrs	r9, 7
    3ff8:	10 c0       	rjmp	.+32     	; 0x401a <vfprintf+0x1d2>
    3ffa:	4c 0c       	add	r4, r12
    3ffc:	fc 85       	ldd	r31, Y+12	; 0x0c
    3ffe:	f4 ff       	sbrs	r31, 4
    4000:	04 c0       	rjmp	.+8      	; 0x400a <vfprintf+0x1c2>
    4002:	8a 81       	ldd	r24, Y+2	; 0x02
    4004:	81 33       	cpi	r24, 0x31	; 49
    4006:	09 f4       	brne	.+2      	; 0x400a <vfprintf+0x1c2>
    4008:	4a 94       	dec	r4
    400a:	14 14       	cp	r1, r4
    400c:	74 f5       	brge	.+92     	; 0x406a <vfprintf+0x222>
    400e:	28 e0       	ldi	r18, 0x08	; 8
    4010:	24 15       	cp	r18, r4
    4012:	78 f5       	brcc	.+94     	; 0x4072 <vfprintf+0x22a>
    4014:	88 e0       	ldi	r24, 0x08	; 8
    4016:	48 2e       	mov	r4, r24
    4018:	2c c0       	rjmp	.+88     	; 0x4072 <vfprintf+0x22a>
    401a:	96 fc       	sbrc	r9, 6
    401c:	2a c0       	rjmp	.+84     	; 0x4072 <vfprintf+0x22a>
    401e:	81 2f       	mov	r24, r17
    4020:	90 e0       	ldi	r25, 0x00	; 0
    4022:	8c 15       	cp	r24, r12
    4024:	9d 05       	cpc	r25, r13
    4026:	9c f0       	brlt	.+38     	; 0x404e <vfprintf+0x206>
    4028:	3c ef       	ldi	r19, 0xFC	; 252
    402a:	c3 16       	cp	r12, r19
    402c:	3f ef       	ldi	r19, 0xFF	; 255
    402e:	d3 06       	cpc	r13, r19
    4030:	74 f0       	brlt	.+28     	; 0x404e <vfprintf+0x206>
    4032:	89 2d       	mov	r24, r9
    4034:	80 68       	ori	r24, 0x80	; 128
    4036:	98 2e       	mov	r9, r24
    4038:	0a c0       	rjmp	.+20     	; 0x404e <vfprintf+0x206>
    403a:	e2 e0       	ldi	r30, 0x02	; 2
    403c:	f0 e0       	ldi	r31, 0x00	; 0
    403e:	ec 0f       	add	r30, r28
    4040:	fd 1f       	adc	r31, r29
    4042:	e1 0f       	add	r30, r17
    4044:	f1 1d       	adc	r31, r1
    4046:	80 81       	ld	r24, Z
    4048:	80 33       	cpi	r24, 0x30	; 48
    404a:	19 f4       	brne	.+6      	; 0x4052 <vfprintf+0x20a>
    404c:	11 50       	subi	r17, 0x01	; 1
    404e:	11 11       	cpse	r17, r1
    4050:	f4 cf       	rjmp	.-24     	; 0x403a <vfprintf+0x1f2>
    4052:	97 fe       	sbrs	r9, 7
    4054:	0e c0       	rjmp	.+28     	; 0x4072 <vfprintf+0x22a>
    4056:	44 24       	eor	r4, r4
    4058:	43 94       	inc	r4
    405a:	41 0e       	add	r4, r17
    405c:	81 2f       	mov	r24, r17
    405e:	90 e0       	ldi	r25, 0x00	; 0
    4060:	c8 16       	cp	r12, r24
    4062:	d9 06       	cpc	r13, r25
    4064:	2c f4       	brge	.+10     	; 0x4070 <vfprintf+0x228>
    4066:	1c 19       	sub	r17, r12
    4068:	04 c0       	rjmp	.+8      	; 0x4072 <vfprintf+0x22a>
    406a:	44 24       	eor	r4, r4
    406c:	43 94       	inc	r4
    406e:	01 c0       	rjmp	.+2      	; 0x4072 <vfprintf+0x22a>
    4070:	10 e0       	ldi	r17, 0x00	; 0
    4072:	97 fe       	sbrs	r9, 7
    4074:	06 c0       	rjmp	.+12     	; 0x4082 <vfprintf+0x23a>
    4076:	1c 14       	cp	r1, r12
    4078:	1d 04       	cpc	r1, r13
    407a:	34 f4       	brge	.+12     	; 0x4088 <vfprintf+0x240>
    407c:	c6 01       	movw	r24, r12
    407e:	01 96       	adiw	r24, 0x01	; 1
    4080:	05 c0       	rjmp	.+10     	; 0x408c <vfprintf+0x244>
    4082:	85 e0       	ldi	r24, 0x05	; 5
    4084:	90 e0       	ldi	r25, 0x00	; 0
    4086:	02 c0       	rjmp	.+4      	; 0x408c <vfprintf+0x244>
    4088:	81 e0       	ldi	r24, 0x01	; 1
    408a:	90 e0       	ldi	r25, 0x00	; 0
    408c:	01 11       	cpse	r16, r1
    408e:	01 96       	adiw	r24, 0x01	; 1
    4090:	11 23       	and	r17, r17
    4092:	31 f0       	breq	.+12     	; 0x40a0 <vfprintf+0x258>
    4094:	21 2f       	mov	r18, r17
    4096:	30 e0       	ldi	r19, 0x00	; 0
    4098:	2f 5f       	subi	r18, 0xFF	; 255
    409a:	3f 4f       	sbci	r19, 0xFF	; 255
    409c:	82 0f       	add	r24, r18
    409e:	93 1f       	adc	r25, r19
    40a0:	25 2d       	mov	r18, r5
    40a2:	30 e0       	ldi	r19, 0x00	; 0
    40a4:	82 17       	cp	r24, r18
    40a6:	93 07       	cpc	r25, r19
    40a8:	14 f4       	brge	.+4      	; 0x40ae <vfprintf+0x266>
    40aa:	58 1a       	sub	r5, r24
    40ac:	01 c0       	rjmp	.+2      	; 0x40b0 <vfprintf+0x268>
    40ae:	51 2c       	mov	r5, r1
    40b0:	89 2d       	mov	r24, r9
    40b2:	89 70       	andi	r24, 0x09	; 9
    40b4:	49 f4       	brne	.+18     	; 0x40c8 <vfprintf+0x280>
    40b6:	55 20       	and	r5, r5
    40b8:	39 f0       	breq	.+14     	; 0x40c8 <vfprintf+0x280>
    40ba:	b7 01       	movw	r22, r14
    40bc:	80 e2       	ldi	r24, 0x20	; 32
    40be:	90 e0       	ldi	r25, 0x00	; 0
    40c0:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    40c4:	5a 94       	dec	r5
    40c6:	f7 cf       	rjmp	.-18     	; 0x40b6 <vfprintf+0x26e>
    40c8:	00 23       	and	r16, r16
    40ca:	29 f0       	breq	.+10     	; 0x40d6 <vfprintf+0x28e>
    40cc:	b7 01       	movw	r22, r14
    40ce:	80 2f       	mov	r24, r16
    40d0:	90 e0       	ldi	r25, 0x00	; 0
    40d2:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    40d6:	93 fc       	sbrc	r9, 3
    40d8:	09 c0       	rjmp	.+18     	; 0x40ec <vfprintf+0x2a4>
    40da:	55 20       	and	r5, r5
    40dc:	39 f0       	breq	.+14     	; 0x40ec <vfprintf+0x2a4>
    40de:	b7 01       	movw	r22, r14
    40e0:	80 e3       	ldi	r24, 0x30	; 48
    40e2:	90 e0       	ldi	r25, 0x00	; 0
    40e4:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    40e8:	5a 94       	dec	r5
    40ea:	f7 cf       	rjmp	.-18     	; 0x40da <vfprintf+0x292>
    40ec:	97 fe       	sbrs	r9, 7
    40ee:	4c c0       	rjmp	.+152    	; 0x4188 <vfprintf+0x340>
    40f0:	46 01       	movw	r8, r12
    40f2:	d7 fe       	sbrs	r13, 7
    40f4:	02 c0       	rjmp	.+4      	; 0x40fa <vfprintf+0x2b2>
    40f6:	81 2c       	mov	r8, r1
    40f8:	91 2c       	mov	r9, r1
    40fa:	c6 01       	movw	r24, r12
    40fc:	88 19       	sub	r24, r8
    40fe:	99 09       	sbc	r25, r9
    4100:	f3 01       	movw	r30, r6
    4102:	e8 0f       	add	r30, r24
    4104:	f9 1f       	adc	r31, r25
    4106:	fe 87       	std	Y+14, r31	; 0x0e
    4108:	ed 87       	std	Y+13, r30	; 0x0d
    410a:	96 01       	movw	r18, r12
    410c:	24 19       	sub	r18, r4
    410e:	31 09       	sbc	r19, r1
    4110:	38 8b       	std	Y+16, r19	; 0x10
    4112:	2f 87       	std	Y+15, r18	; 0x0f
    4114:	01 2f       	mov	r16, r17
    4116:	10 e0       	ldi	r17, 0x00	; 0
    4118:	11 95       	neg	r17
    411a:	01 95       	neg	r16
    411c:	11 09       	sbc	r17, r1
    411e:	3f ef       	ldi	r19, 0xFF	; 255
    4120:	83 16       	cp	r8, r19
    4122:	93 06       	cpc	r9, r19
    4124:	29 f4       	brne	.+10     	; 0x4130 <vfprintf+0x2e8>
    4126:	b7 01       	movw	r22, r14
    4128:	8e e2       	ldi	r24, 0x2E	; 46
    412a:	90 e0       	ldi	r25, 0x00	; 0
    412c:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    4130:	c8 14       	cp	r12, r8
    4132:	d9 04       	cpc	r13, r9
    4134:	4c f0       	brlt	.+18     	; 0x4148 <vfprintf+0x300>
    4136:	8f 85       	ldd	r24, Y+15	; 0x0f
    4138:	98 89       	ldd	r25, Y+16	; 0x10
    413a:	88 15       	cp	r24, r8
    413c:	99 05       	cpc	r25, r9
    413e:	24 f4       	brge	.+8      	; 0x4148 <vfprintf+0x300>
    4140:	ed 85       	ldd	r30, Y+13	; 0x0d
    4142:	fe 85       	ldd	r31, Y+14	; 0x0e
    4144:	81 81       	ldd	r24, Z+1	; 0x01
    4146:	01 c0       	rjmp	.+2      	; 0x414a <vfprintf+0x302>
    4148:	80 e3       	ldi	r24, 0x30	; 48
    414a:	f1 e0       	ldi	r31, 0x01	; 1
    414c:	8f 1a       	sub	r8, r31
    414e:	91 08       	sbc	r9, r1
    4150:	2d 85       	ldd	r18, Y+13	; 0x0d
    4152:	3e 85       	ldd	r19, Y+14	; 0x0e
    4154:	2f 5f       	subi	r18, 0xFF	; 255
    4156:	3f 4f       	sbci	r19, 0xFF	; 255
    4158:	3e 87       	std	Y+14, r19	; 0x0e
    415a:	2d 87       	std	Y+13, r18	; 0x0d
    415c:	80 16       	cp	r8, r16
    415e:	91 06       	cpc	r9, r17
    4160:	2c f0       	brlt	.+10     	; 0x416c <vfprintf+0x324>
    4162:	b7 01       	movw	r22, r14
    4164:	90 e0       	ldi	r25, 0x00	; 0
    4166:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    416a:	d9 cf       	rjmp	.-78     	; 0x411e <vfprintf+0x2d6>
    416c:	c8 14       	cp	r12, r8
    416e:	d9 04       	cpc	r13, r9
    4170:	41 f4       	brne	.+16     	; 0x4182 <vfprintf+0x33a>
    4172:	9a 81       	ldd	r25, Y+2	; 0x02
    4174:	96 33       	cpi	r25, 0x36	; 54
    4176:	20 f4       	brcc	.+8      	; 0x4180 <vfprintf+0x338>
    4178:	95 33       	cpi	r25, 0x35	; 53
    417a:	19 f4       	brne	.+6      	; 0x4182 <vfprintf+0x33a>
    417c:	3c 85       	ldd	r19, Y+12	; 0x0c
    417e:	34 ff       	sbrs	r19, 4
    4180:	81 e3       	ldi	r24, 0x31	; 49
    4182:	b7 01       	movw	r22, r14
    4184:	90 e0       	ldi	r25, 0x00	; 0
    4186:	4e c0       	rjmp	.+156    	; 0x4224 <vfprintf+0x3dc>
    4188:	8a 81       	ldd	r24, Y+2	; 0x02
    418a:	81 33       	cpi	r24, 0x31	; 49
    418c:	19 f0       	breq	.+6      	; 0x4194 <vfprintf+0x34c>
    418e:	9c 85       	ldd	r25, Y+12	; 0x0c
    4190:	9f 7e       	andi	r25, 0xEF	; 239
    4192:	9c 87       	std	Y+12, r25	; 0x0c
    4194:	b7 01       	movw	r22, r14
    4196:	90 e0       	ldi	r25, 0x00	; 0
    4198:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    419c:	11 11       	cpse	r17, r1
    419e:	05 c0       	rjmp	.+10     	; 0x41aa <vfprintf+0x362>
    41a0:	94 fc       	sbrc	r9, 4
    41a2:	18 c0       	rjmp	.+48     	; 0x41d4 <vfprintf+0x38c>
    41a4:	85 e6       	ldi	r24, 0x65	; 101
    41a6:	90 e0       	ldi	r25, 0x00	; 0
    41a8:	17 c0       	rjmp	.+46     	; 0x41d8 <vfprintf+0x390>
    41aa:	b7 01       	movw	r22, r14
    41ac:	8e e2       	ldi	r24, 0x2E	; 46
    41ae:	90 e0       	ldi	r25, 0x00	; 0
    41b0:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    41b4:	1e 5f       	subi	r17, 0xFE	; 254
    41b6:	82 e0       	ldi	r24, 0x02	; 2
    41b8:	01 e0       	ldi	r16, 0x01	; 1
    41ba:	08 0f       	add	r16, r24
    41bc:	f3 01       	movw	r30, r6
    41be:	e8 0f       	add	r30, r24
    41c0:	f1 1d       	adc	r31, r1
    41c2:	80 81       	ld	r24, Z
    41c4:	b7 01       	movw	r22, r14
    41c6:	90 e0       	ldi	r25, 0x00	; 0
    41c8:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    41cc:	80 2f       	mov	r24, r16
    41ce:	01 13       	cpse	r16, r17
    41d0:	f3 cf       	rjmp	.-26     	; 0x41b8 <vfprintf+0x370>
    41d2:	e6 cf       	rjmp	.-52     	; 0x41a0 <vfprintf+0x358>
    41d4:	85 e4       	ldi	r24, 0x45	; 69
    41d6:	90 e0       	ldi	r25, 0x00	; 0
    41d8:	b7 01       	movw	r22, r14
    41da:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    41de:	d7 fc       	sbrc	r13, 7
    41e0:	06 c0       	rjmp	.+12     	; 0x41ee <vfprintf+0x3a6>
    41e2:	c1 14       	cp	r12, r1
    41e4:	d1 04       	cpc	r13, r1
    41e6:	41 f4       	brne	.+16     	; 0x41f8 <vfprintf+0x3b0>
    41e8:	ec 85       	ldd	r30, Y+12	; 0x0c
    41ea:	e4 ff       	sbrs	r30, 4
    41ec:	05 c0       	rjmp	.+10     	; 0x41f8 <vfprintf+0x3b0>
    41ee:	d1 94       	neg	r13
    41f0:	c1 94       	neg	r12
    41f2:	d1 08       	sbc	r13, r1
    41f4:	8d e2       	ldi	r24, 0x2D	; 45
    41f6:	01 c0       	rjmp	.+2      	; 0x41fa <vfprintf+0x3b2>
    41f8:	8b e2       	ldi	r24, 0x2B	; 43
    41fa:	b7 01       	movw	r22, r14
    41fc:	90 e0       	ldi	r25, 0x00	; 0
    41fe:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    4202:	80 e3       	ldi	r24, 0x30	; 48
    4204:	2a e0       	ldi	r18, 0x0A	; 10
    4206:	c2 16       	cp	r12, r18
    4208:	d1 04       	cpc	r13, r1
    420a:	2c f0       	brlt	.+10     	; 0x4216 <vfprintf+0x3ce>
    420c:	8f 5f       	subi	r24, 0xFF	; 255
    420e:	fa e0       	ldi	r31, 0x0A	; 10
    4210:	cf 1a       	sub	r12, r31
    4212:	d1 08       	sbc	r13, r1
    4214:	f7 cf       	rjmp	.-18     	; 0x4204 <vfprintf+0x3bc>
    4216:	b7 01       	movw	r22, r14
    4218:	90 e0       	ldi	r25, 0x00	; 0
    421a:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    421e:	b7 01       	movw	r22, r14
    4220:	c6 01       	movw	r24, r12
    4222:	c0 96       	adiw	r24, 0x30	; 48
    4224:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    4228:	54 c1       	rjmp	.+680    	; 0x44d2 <vfprintf+0x68a>
    422a:	83 36       	cpi	r24, 0x63	; 99
    422c:	31 f0       	breq	.+12     	; 0x423a <vfprintf+0x3f2>
    422e:	83 37       	cpi	r24, 0x73	; 115
    4230:	79 f0       	breq	.+30     	; 0x4250 <vfprintf+0x408>
    4232:	83 35       	cpi	r24, 0x53	; 83
    4234:	09 f0       	breq	.+2      	; 0x4238 <vfprintf+0x3f0>
    4236:	56 c0       	rjmp	.+172    	; 0x42e4 <vfprintf+0x49c>
    4238:	20 c0       	rjmp	.+64     	; 0x427a <vfprintf+0x432>
    423a:	56 01       	movw	r10, r12
    423c:	32 e0       	ldi	r19, 0x02	; 2
    423e:	a3 0e       	add	r10, r19
    4240:	b1 1c       	adc	r11, r1
    4242:	f6 01       	movw	r30, r12
    4244:	80 81       	ld	r24, Z
    4246:	89 83       	std	Y+1, r24	; 0x01
    4248:	01 e0       	ldi	r16, 0x01	; 1
    424a:	10 e0       	ldi	r17, 0x00	; 0
    424c:	63 01       	movw	r12, r6
    424e:	12 c0       	rjmp	.+36     	; 0x4274 <vfprintf+0x42c>
    4250:	56 01       	movw	r10, r12
    4252:	f2 e0       	ldi	r31, 0x02	; 2
    4254:	af 0e       	add	r10, r31
    4256:	b1 1c       	adc	r11, r1
    4258:	f6 01       	movw	r30, r12
    425a:	c0 80       	ld	r12, Z
    425c:	d1 80       	ldd	r13, Z+1	; 0x01
    425e:	96 fe       	sbrs	r9, 6
    4260:	03 c0       	rjmp	.+6      	; 0x4268 <vfprintf+0x420>
    4262:	61 2f       	mov	r22, r17
    4264:	70 e0       	ldi	r23, 0x00	; 0
    4266:	02 c0       	rjmp	.+4      	; 0x426c <vfprintf+0x424>
    4268:	6f ef       	ldi	r22, 0xFF	; 255
    426a:	7f ef       	ldi	r23, 0xFF	; 255
    426c:	c6 01       	movw	r24, r12
    426e:	0e 94 c1 23 	call	0x4782	; 0x4782 <strnlen>
    4272:	8c 01       	movw	r16, r24
    4274:	f9 2d       	mov	r31, r9
    4276:	ff 77       	andi	r31, 0x7F	; 127
    4278:	14 c0       	rjmp	.+40     	; 0x42a2 <vfprintf+0x45a>
    427a:	56 01       	movw	r10, r12
    427c:	22 e0       	ldi	r18, 0x02	; 2
    427e:	a2 0e       	add	r10, r18
    4280:	b1 1c       	adc	r11, r1
    4282:	f6 01       	movw	r30, r12
    4284:	c0 80       	ld	r12, Z
    4286:	d1 80       	ldd	r13, Z+1	; 0x01
    4288:	96 fe       	sbrs	r9, 6
    428a:	03 c0       	rjmp	.+6      	; 0x4292 <vfprintf+0x44a>
    428c:	61 2f       	mov	r22, r17
    428e:	70 e0       	ldi	r23, 0x00	; 0
    4290:	02 c0       	rjmp	.+4      	; 0x4296 <vfprintf+0x44e>
    4292:	6f ef       	ldi	r22, 0xFF	; 255
    4294:	7f ef       	ldi	r23, 0xFF	; 255
    4296:	c6 01       	movw	r24, r12
    4298:	0e 94 b6 23 	call	0x476c	; 0x476c <strnlen_P>
    429c:	8c 01       	movw	r16, r24
    429e:	f9 2d       	mov	r31, r9
    42a0:	f0 68       	ori	r31, 0x80	; 128
    42a2:	9f 2e       	mov	r9, r31
    42a4:	f3 fd       	sbrc	r31, 3
    42a6:	1a c0       	rjmp	.+52     	; 0x42dc <vfprintf+0x494>
    42a8:	85 2d       	mov	r24, r5
    42aa:	90 e0       	ldi	r25, 0x00	; 0
    42ac:	08 17       	cp	r16, r24
    42ae:	19 07       	cpc	r17, r25
    42b0:	a8 f4       	brcc	.+42     	; 0x42dc <vfprintf+0x494>
    42b2:	b7 01       	movw	r22, r14
    42b4:	80 e2       	ldi	r24, 0x20	; 32
    42b6:	90 e0       	ldi	r25, 0x00	; 0
    42b8:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    42bc:	5a 94       	dec	r5
    42be:	f4 cf       	rjmp	.-24     	; 0x42a8 <vfprintf+0x460>
    42c0:	f6 01       	movw	r30, r12
    42c2:	97 fc       	sbrc	r9, 7
    42c4:	85 91       	lpm	r24, Z+
    42c6:	97 fe       	sbrs	r9, 7
    42c8:	81 91       	ld	r24, Z+
    42ca:	6f 01       	movw	r12, r30
    42cc:	b7 01       	movw	r22, r14
    42ce:	90 e0       	ldi	r25, 0x00	; 0
    42d0:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    42d4:	51 10       	cpse	r5, r1
    42d6:	5a 94       	dec	r5
    42d8:	01 50       	subi	r16, 0x01	; 1
    42da:	11 09       	sbc	r17, r1
    42dc:	01 15       	cp	r16, r1
    42de:	11 05       	cpc	r17, r1
    42e0:	79 f7       	brne	.-34     	; 0x42c0 <vfprintf+0x478>
    42e2:	f7 c0       	rjmp	.+494    	; 0x44d2 <vfprintf+0x68a>
    42e4:	84 36       	cpi	r24, 0x64	; 100
    42e6:	11 f0       	breq	.+4      	; 0x42ec <vfprintf+0x4a4>
    42e8:	89 36       	cpi	r24, 0x69	; 105
    42ea:	61 f5       	brne	.+88     	; 0x4344 <vfprintf+0x4fc>
    42ec:	56 01       	movw	r10, r12
    42ee:	97 fe       	sbrs	r9, 7
    42f0:	09 c0       	rjmp	.+18     	; 0x4304 <vfprintf+0x4bc>
    42f2:	24 e0       	ldi	r18, 0x04	; 4
    42f4:	a2 0e       	add	r10, r18
    42f6:	b1 1c       	adc	r11, r1
    42f8:	f6 01       	movw	r30, r12
    42fa:	60 81       	ld	r22, Z
    42fc:	71 81       	ldd	r23, Z+1	; 0x01
    42fe:	82 81       	ldd	r24, Z+2	; 0x02
    4300:	93 81       	ldd	r25, Z+3	; 0x03
    4302:	0a c0       	rjmp	.+20     	; 0x4318 <vfprintf+0x4d0>
    4304:	f2 e0       	ldi	r31, 0x02	; 2
    4306:	af 0e       	add	r10, r31
    4308:	b1 1c       	adc	r11, r1
    430a:	f6 01       	movw	r30, r12
    430c:	60 81       	ld	r22, Z
    430e:	71 81       	ldd	r23, Z+1	; 0x01
    4310:	07 2e       	mov	r0, r23
    4312:	00 0c       	add	r0, r0
    4314:	88 0b       	sbc	r24, r24
    4316:	99 0b       	sbc	r25, r25
    4318:	f9 2d       	mov	r31, r9
    431a:	ff 76       	andi	r31, 0x6F	; 111
    431c:	9f 2e       	mov	r9, r31
    431e:	97 ff       	sbrs	r25, 7
    4320:	09 c0       	rjmp	.+18     	; 0x4334 <vfprintf+0x4ec>
    4322:	90 95       	com	r25
    4324:	80 95       	com	r24
    4326:	70 95       	com	r23
    4328:	61 95       	neg	r22
    432a:	7f 4f       	sbci	r23, 0xFF	; 255
    432c:	8f 4f       	sbci	r24, 0xFF	; 255
    432e:	9f 4f       	sbci	r25, 0xFF	; 255
    4330:	f0 68       	ori	r31, 0x80	; 128
    4332:	9f 2e       	mov	r9, r31
    4334:	2a e0       	ldi	r18, 0x0A	; 10
    4336:	30 e0       	ldi	r19, 0x00	; 0
    4338:	a3 01       	movw	r20, r6
    433a:	0e 94 2a 24 	call	0x4854	; 0x4854 <__ultoa_invert>
    433e:	c8 2e       	mov	r12, r24
    4340:	c6 18       	sub	r12, r6
    4342:	3f c0       	rjmp	.+126    	; 0x43c2 <vfprintf+0x57a>
    4344:	09 2d       	mov	r16, r9
    4346:	85 37       	cpi	r24, 0x75	; 117
    4348:	21 f4       	brne	.+8      	; 0x4352 <vfprintf+0x50a>
    434a:	0f 7e       	andi	r16, 0xEF	; 239
    434c:	2a e0       	ldi	r18, 0x0A	; 10
    434e:	30 e0       	ldi	r19, 0x00	; 0
    4350:	1d c0       	rjmp	.+58     	; 0x438c <vfprintf+0x544>
    4352:	09 7f       	andi	r16, 0xF9	; 249
    4354:	8f 36       	cpi	r24, 0x6F	; 111
    4356:	91 f0       	breq	.+36     	; 0x437c <vfprintf+0x534>
    4358:	18 f4       	brcc	.+6      	; 0x4360 <vfprintf+0x518>
    435a:	88 35       	cpi	r24, 0x58	; 88
    435c:	59 f0       	breq	.+22     	; 0x4374 <vfprintf+0x52c>
    435e:	c3 c0       	rjmp	.+390    	; 0x44e6 <vfprintf+0x69e>
    4360:	80 37       	cpi	r24, 0x70	; 112
    4362:	19 f0       	breq	.+6      	; 0x436a <vfprintf+0x522>
    4364:	88 37       	cpi	r24, 0x78	; 120
    4366:	11 f0       	breq	.+4      	; 0x436c <vfprintf+0x524>
    4368:	be c0       	rjmp	.+380    	; 0x44e6 <vfprintf+0x69e>
    436a:	00 61       	ori	r16, 0x10	; 16
    436c:	04 ff       	sbrs	r16, 4
    436e:	09 c0       	rjmp	.+18     	; 0x4382 <vfprintf+0x53a>
    4370:	04 60       	ori	r16, 0x04	; 4
    4372:	07 c0       	rjmp	.+14     	; 0x4382 <vfprintf+0x53a>
    4374:	94 fe       	sbrs	r9, 4
    4376:	08 c0       	rjmp	.+16     	; 0x4388 <vfprintf+0x540>
    4378:	06 60       	ori	r16, 0x06	; 6
    437a:	06 c0       	rjmp	.+12     	; 0x4388 <vfprintf+0x540>
    437c:	28 e0       	ldi	r18, 0x08	; 8
    437e:	30 e0       	ldi	r19, 0x00	; 0
    4380:	05 c0       	rjmp	.+10     	; 0x438c <vfprintf+0x544>
    4382:	20 e1       	ldi	r18, 0x10	; 16
    4384:	30 e0       	ldi	r19, 0x00	; 0
    4386:	02 c0       	rjmp	.+4      	; 0x438c <vfprintf+0x544>
    4388:	20 e1       	ldi	r18, 0x10	; 16
    438a:	32 e0       	ldi	r19, 0x02	; 2
    438c:	56 01       	movw	r10, r12
    438e:	07 ff       	sbrs	r16, 7
    4390:	09 c0       	rjmp	.+18     	; 0x43a4 <vfprintf+0x55c>
    4392:	84 e0       	ldi	r24, 0x04	; 4
    4394:	a8 0e       	add	r10, r24
    4396:	b1 1c       	adc	r11, r1
    4398:	f6 01       	movw	r30, r12
    439a:	60 81       	ld	r22, Z
    439c:	71 81       	ldd	r23, Z+1	; 0x01
    439e:	82 81       	ldd	r24, Z+2	; 0x02
    43a0:	93 81       	ldd	r25, Z+3	; 0x03
    43a2:	08 c0       	rjmp	.+16     	; 0x43b4 <vfprintf+0x56c>
    43a4:	f2 e0       	ldi	r31, 0x02	; 2
    43a6:	af 0e       	add	r10, r31
    43a8:	b1 1c       	adc	r11, r1
    43aa:	f6 01       	movw	r30, r12
    43ac:	60 81       	ld	r22, Z
    43ae:	71 81       	ldd	r23, Z+1	; 0x01
    43b0:	80 e0       	ldi	r24, 0x00	; 0
    43b2:	90 e0       	ldi	r25, 0x00	; 0
    43b4:	a3 01       	movw	r20, r6
    43b6:	0e 94 2a 24 	call	0x4854	; 0x4854 <__ultoa_invert>
    43ba:	c8 2e       	mov	r12, r24
    43bc:	c6 18       	sub	r12, r6
    43be:	0f 77       	andi	r16, 0x7F	; 127
    43c0:	90 2e       	mov	r9, r16
    43c2:	96 fe       	sbrs	r9, 6
    43c4:	0b c0       	rjmp	.+22     	; 0x43dc <vfprintf+0x594>
    43c6:	09 2d       	mov	r16, r9
    43c8:	0e 7f       	andi	r16, 0xFE	; 254
    43ca:	c1 16       	cp	r12, r17
    43cc:	50 f4       	brcc	.+20     	; 0x43e2 <vfprintf+0x59a>
    43ce:	94 fe       	sbrs	r9, 4
    43d0:	0a c0       	rjmp	.+20     	; 0x43e6 <vfprintf+0x59e>
    43d2:	92 fc       	sbrc	r9, 2
    43d4:	08 c0       	rjmp	.+16     	; 0x43e6 <vfprintf+0x59e>
    43d6:	09 2d       	mov	r16, r9
    43d8:	0e 7e       	andi	r16, 0xEE	; 238
    43da:	05 c0       	rjmp	.+10     	; 0x43e6 <vfprintf+0x59e>
    43dc:	dc 2c       	mov	r13, r12
    43de:	09 2d       	mov	r16, r9
    43e0:	03 c0       	rjmp	.+6      	; 0x43e8 <vfprintf+0x5a0>
    43e2:	dc 2c       	mov	r13, r12
    43e4:	01 c0       	rjmp	.+2      	; 0x43e8 <vfprintf+0x5a0>
    43e6:	d1 2e       	mov	r13, r17
    43e8:	04 ff       	sbrs	r16, 4
    43ea:	0d c0       	rjmp	.+26     	; 0x4406 <vfprintf+0x5be>
    43ec:	fe 01       	movw	r30, r28
    43ee:	ec 0d       	add	r30, r12
    43f0:	f1 1d       	adc	r31, r1
    43f2:	80 81       	ld	r24, Z
    43f4:	80 33       	cpi	r24, 0x30	; 48
    43f6:	11 f4       	brne	.+4      	; 0x43fc <vfprintf+0x5b4>
    43f8:	09 7e       	andi	r16, 0xE9	; 233
    43fa:	09 c0       	rjmp	.+18     	; 0x440e <vfprintf+0x5c6>
    43fc:	02 ff       	sbrs	r16, 2
    43fe:	06 c0       	rjmp	.+12     	; 0x440c <vfprintf+0x5c4>
    4400:	d3 94       	inc	r13
    4402:	d3 94       	inc	r13
    4404:	04 c0       	rjmp	.+8      	; 0x440e <vfprintf+0x5c6>
    4406:	80 2f       	mov	r24, r16
    4408:	86 78       	andi	r24, 0x86	; 134
    440a:	09 f0       	breq	.+2      	; 0x440e <vfprintf+0x5c6>
    440c:	d3 94       	inc	r13
    440e:	03 fd       	sbrc	r16, 3
    4410:	11 c0       	rjmp	.+34     	; 0x4434 <vfprintf+0x5ec>
    4412:	00 ff       	sbrs	r16, 0
    4414:	06 c0       	rjmp	.+12     	; 0x4422 <vfprintf+0x5da>
    4416:	1c 2d       	mov	r17, r12
    4418:	d5 14       	cp	r13, r5
    441a:	80 f4       	brcc	.+32     	; 0x443c <vfprintf+0x5f4>
    441c:	15 0d       	add	r17, r5
    441e:	1d 19       	sub	r17, r13
    4420:	0d c0       	rjmp	.+26     	; 0x443c <vfprintf+0x5f4>
    4422:	d5 14       	cp	r13, r5
    4424:	58 f4       	brcc	.+22     	; 0x443c <vfprintf+0x5f4>
    4426:	b7 01       	movw	r22, r14
    4428:	80 e2       	ldi	r24, 0x20	; 32
    442a:	90 e0       	ldi	r25, 0x00	; 0
    442c:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    4430:	d3 94       	inc	r13
    4432:	f7 cf       	rjmp	.-18     	; 0x4422 <vfprintf+0x5da>
    4434:	d5 14       	cp	r13, r5
    4436:	10 f4       	brcc	.+4      	; 0x443c <vfprintf+0x5f4>
    4438:	5d 18       	sub	r5, r13
    443a:	01 c0       	rjmp	.+2      	; 0x443e <vfprintf+0x5f6>
    443c:	51 2c       	mov	r5, r1
    443e:	04 ff       	sbrs	r16, 4
    4440:	10 c0       	rjmp	.+32     	; 0x4462 <vfprintf+0x61a>
    4442:	b7 01       	movw	r22, r14
    4444:	80 e3       	ldi	r24, 0x30	; 48
    4446:	90 e0       	ldi	r25, 0x00	; 0
    4448:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    444c:	02 ff       	sbrs	r16, 2
    444e:	17 c0       	rjmp	.+46     	; 0x447e <vfprintf+0x636>
    4450:	01 fd       	sbrc	r16, 1
    4452:	03 c0       	rjmp	.+6      	; 0x445a <vfprintf+0x612>
    4454:	88 e7       	ldi	r24, 0x78	; 120
    4456:	90 e0       	ldi	r25, 0x00	; 0
    4458:	02 c0       	rjmp	.+4      	; 0x445e <vfprintf+0x616>
    445a:	88 e5       	ldi	r24, 0x58	; 88
    445c:	90 e0       	ldi	r25, 0x00	; 0
    445e:	b7 01       	movw	r22, r14
    4460:	0c c0       	rjmp	.+24     	; 0x447a <vfprintf+0x632>
    4462:	80 2f       	mov	r24, r16
    4464:	86 78       	andi	r24, 0x86	; 134
    4466:	59 f0       	breq	.+22     	; 0x447e <vfprintf+0x636>
    4468:	01 ff       	sbrs	r16, 1
    446a:	02 c0       	rjmp	.+4      	; 0x4470 <vfprintf+0x628>
    446c:	8b e2       	ldi	r24, 0x2B	; 43
    446e:	01 c0       	rjmp	.+2      	; 0x4472 <vfprintf+0x62a>
    4470:	80 e2       	ldi	r24, 0x20	; 32
    4472:	07 fd       	sbrc	r16, 7
    4474:	8d e2       	ldi	r24, 0x2D	; 45
    4476:	b7 01       	movw	r22, r14
    4478:	90 e0       	ldi	r25, 0x00	; 0
    447a:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    447e:	c1 16       	cp	r12, r17
    4480:	38 f4       	brcc	.+14     	; 0x4490 <vfprintf+0x648>
    4482:	b7 01       	movw	r22, r14
    4484:	80 e3       	ldi	r24, 0x30	; 48
    4486:	90 e0       	ldi	r25, 0x00	; 0
    4488:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    448c:	11 50       	subi	r17, 0x01	; 1
    448e:	f7 cf       	rjmp	.-18     	; 0x447e <vfprintf+0x636>
    4490:	ca 94       	dec	r12
    4492:	f3 01       	movw	r30, r6
    4494:	ec 0d       	add	r30, r12
    4496:	f1 1d       	adc	r31, r1
    4498:	80 81       	ld	r24, Z
    449a:	b7 01       	movw	r22, r14
    449c:	90 e0       	ldi	r25, 0x00	; 0
    449e:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    44a2:	c1 10       	cpse	r12, r1
    44a4:	f5 cf       	rjmp	.-22     	; 0x4490 <vfprintf+0x648>
    44a6:	15 c0       	rjmp	.+42     	; 0x44d2 <vfprintf+0x68a>
    44a8:	f4 e0       	ldi	r31, 0x04	; 4
    44aa:	f5 15       	cp	r31, r5
    44ac:	60 f5       	brcc	.+88     	; 0x4506 <vfprintf+0x6be>
    44ae:	84 e0       	ldi	r24, 0x04	; 4
    44b0:	58 1a       	sub	r5, r24
    44b2:	93 fe       	sbrs	r9, 3
    44b4:	1f c0       	rjmp	.+62     	; 0x44f4 <vfprintf+0x6ac>
    44b6:	01 11       	cpse	r16, r1
    44b8:	27 c0       	rjmp	.+78     	; 0x4508 <vfprintf+0x6c0>
    44ba:	2c 85       	ldd	r18, Y+12	; 0x0c
    44bc:	23 ff       	sbrs	r18, 3
    44be:	2a c0       	rjmp	.+84     	; 0x4514 <vfprintf+0x6cc>
    44c0:	02 ec       	ldi	r16, 0xC2	; 194
    44c2:	10 e0       	ldi	r17, 0x00	; 0
    44c4:	39 2d       	mov	r19, r9
    44c6:	30 71       	andi	r19, 0x10	; 16
    44c8:	93 2e       	mov	r9, r19
    44ca:	f8 01       	movw	r30, r16
    44cc:	84 91       	lpm	r24, Z
    44ce:	81 11       	cpse	r24, r1
    44d0:	24 c0       	rjmp	.+72     	; 0x451a <vfprintf+0x6d2>
    44d2:	55 20       	and	r5, r5
    44d4:	09 f4       	brne	.+2      	; 0x44d8 <vfprintf+0x690>
    44d6:	e4 cc       	rjmp	.-1592   	; 0x3ea0 <vfprintf+0x58>
    44d8:	b7 01       	movw	r22, r14
    44da:	80 e2       	ldi	r24, 0x20	; 32
    44dc:	90 e0       	ldi	r25, 0x00	; 0
    44de:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    44e2:	5a 94       	dec	r5
    44e4:	f6 cf       	rjmp	.-20     	; 0x44d2 <vfprintf+0x68a>
    44e6:	f7 01       	movw	r30, r14
    44e8:	86 81       	ldd	r24, Z+6	; 0x06
    44ea:	97 81       	ldd	r25, Z+7	; 0x07
    44ec:	26 c0       	rjmp	.+76     	; 0x453a <vfprintf+0x6f2>
    44ee:	8f ef       	ldi	r24, 0xFF	; 255
    44f0:	9f ef       	ldi	r25, 0xFF	; 255
    44f2:	23 c0       	rjmp	.+70     	; 0x453a <vfprintf+0x6f2>
    44f4:	b7 01       	movw	r22, r14
    44f6:	80 e2       	ldi	r24, 0x20	; 32
    44f8:	90 e0       	ldi	r25, 0x00	; 0
    44fa:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    44fe:	5a 94       	dec	r5
    4500:	51 10       	cpse	r5, r1
    4502:	f8 cf       	rjmp	.-16     	; 0x44f4 <vfprintf+0x6ac>
    4504:	d8 cf       	rjmp	.-80     	; 0x44b6 <vfprintf+0x66e>
    4506:	51 2c       	mov	r5, r1
    4508:	b7 01       	movw	r22, r14
    450a:	80 2f       	mov	r24, r16
    450c:	90 e0       	ldi	r25, 0x00	; 0
    450e:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    4512:	d3 cf       	rjmp	.-90     	; 0x44ba <vfprintf+0x672>
    4514:	06 ec       	ldi	r16, 0xC6	; 198
    4516:	10 e0       	ldi	r17, 0x00	; 0
    4518:	d5 cf       	rjmp	.-86     	; 0x44c4 <vfprintf+0x67c>
    451a:	91 10       	cpse	r9, r1
    451c:	80 52       	subi	r24, 0x20	; 32
    451e:	b7 01       	movw	r22, r14
    4520:	90 e0       	ldi	r25, 0x00	; 0
    4522:	0e 94 cc 23 	call	0x4798	; 0x4798 <fputc>
    4526:	0f 5f       	subi	r16, 0xFF	; 255
    4528:	1f 4f       	sbci	r17, 0xFF	; 255
    452a:	cf cf       	rjmp	.-98     	; 0x44ca <vfprintf+0x682>
    452c:	23 e0       	ldi	r18, 0x03	; 3
    452e:	25 15       	cp	r18, r5
    4530:	10 f4       	brcc	.+4      	; 0x4536 <vfprintf+0x6ee>
    4532:	83 e0       	ldi	r24, 0x03	; 3
    4534:	bd cf       	rjmp	.-134    	; 0x44b0 <vfprintf+0x668>
    4536:	51 2c       	mov	r5, r1
    4538:	c0 cf       	rjmp	.-128    	; 0x44ba <vfprintf+0x672>
    453a:	60 96       	adiw	r28, 0x10	; 16
    453c:	e2 e1       	ldi	r30, 0x12	; 18
    453e:	0c 94 c3 22 	jmp	0x4586	; 0x4586 <__epilogue_restores__>

00004542 <__tablejump2__>:
    4542:	ee 0f       	add	r30, r30
    4544:	ff 1f       	adc	r31, r31
    4546:	05 90       	lpm	r0, Z+
    4548:	f4 91       	lpm	r31, Z
    454a:	e0 2d       	mov	r30, r0
    454c:	09 94       	ijmp

0000454e <__prologue_saves__>:
    454e:	2f 92       	push	r2
    4550:	3f 92       	push	r3
    4552:	4f 92       	push	r4
    4554:	5f 92       	push	r5
    4556:	6f 92       	push	r6
    4558:	7f 92       	push	r7
    455a:	8f 92       	push	r8
    455c:	9f 92       	push	r9
    455e:	af 92       	push	r10
    4560:	bf 92       	push	r11
    4562:	cf 92       	push	r12
    4564:	df 92       	push	r13
    4566:	ef 92       	push	r14
    4568:	ff 92       	push	r15
    456a:	0f 93       	push	r16
    456c:	1f 93       	push	r17
    456e:	cf 93       	push	r28
    4570:	df 93       	push	r29
    4572:	cd b7       	in	r28, 0x3d	; 61
    4574:	de b7       	in	r29, 0x3e	; 62
    4576:	ca 1b       	sub	r28, r26
    4578:	db 0b       	sbc	r29, r27
    457a:	0f b6       	in	r0, 0x3f	; 63
    457c:	f8 94       	cli
    457e:	de bf       	out	0x3e, r29	; 62
    4580:	0f be       	out	0x3f, r0	; 63
    4582:	cd bf       	out	0x3d, r28	; 61
    4584:	09 94       	ijmp

00004586 <__epilogue_restores__>:
    4586:	2a 88       	ldd	r2, Y+18	; 0x12
    4588:	39 88       	ldd	r3, Y+17	; 0x11
    458a:	48 88       	ldd	r4, Y+16	; 0x10
    458c:	5f 84       	ldd	r5, Y+15	; 0x0f
    458e:	6e 84       	ldd	r6, Y+14	; 0x0e
    4590:	7d 84       	ldd	r7, Y+13	; 0x0d
    4592:	8c 84       	ldd	r8, Y+12	; 0x0c
    4594:	9b 84       	ldd	r9, Y+11	; 0x0b
    4596:	aa 84       	ldd	r10, Y+10	; 0x0a
    4598:	b9 84       	ldd	r11, Y+9	; 0x09
    459a:	c8 84       	ldd	r12, Y+8	; 0x08
    459c:	df 80       	ldd	r13, Y+7	; 0x07
    459e:	ee 80       	ldd	r14, Y+6	; 0x06
    45a0:	fd 80       	ldd	r15, Y+5	; 0x05
    45a2:	0c 81       	ldd	r16, Y+4	; 0x04
    45a4:	1b 81       	ldd	r17, Y+3	; 0x03
    45a6:	aa 81       	ldd	r26, Y+2	; 0x02
    45a8:	b9 81       	ldd	r27, Y+1	; 0x01
    45aa:	ce 0f       	add	r28, r30
    45ac:	d1 1d       	adc	r29, r1
    45ae:	0f b6       	in	r0, 0x3f	; 63
    45b0:	f8 94       	cli
    45b2:	de bf       	out	0x3e, r29	; 62
    45b4:	0f be       	out	0x3f, r0	; 63
    45b6:	cd bf       	out	0x3d, r28	; 61
    45b8:	ed 01       	movw	r28, r26
    45ba:	08 95       	ret

000045bc <__ftoa_engine>:
    45bc:	28 30       	cpi	r18, 0x08	; 8
    45be:	08 f0       	brcs	.+2      	; 0x45c2 <__ftoa_engine+0x6>
    45c0:	27 e0       	ldi	r18, 0x07	; 7
    45c2:	33 27       	eor	r19, r19
    45c4:	da 01       	movw	r26, r20
    45c6:	99 0f       	add	r25, r25
    45c8:	31 1d       	adc	r19, r1
    45ca:	87 fd       	sbrc	r24, 7
    45cc:	91 60       	ori	r25, 0x01	; 1
    45ce:	00 96       	adiw	r24, 0x00	; 0
    45d0:	61 05       	cpc	r22, r1
    45d2:	71 05       	cpc	r23, r1
    45d4:	39 f4       	brne	.+14     	; 0x45e4 <__ftoa_engine+0x28>
    45d6:	32 60       	ori	r19, 0x02	; 2
    45d8:	2e 5f       	subi	r18, 0xFE	; 254
    45da:	3d 93       	st	X+, r19
    45dc:	30 e3       	ldi	r19, 0x30	; 48
    45de:	2a 95       	dec	r18
    45e0:	e1 f7       	brne	.-8      	; 0x45da <__ftoa_engine+0x1e>
    45e2:	08 95       	ret
    45e4:	9f 3f       	cpi	r25, 0xFF	; 255
    45e6:	30 f0       	brcs	.+12     	; 0x45f4 <__ftoa_engine+0x38>
    45e8:	80 38       	cpi	r24, 0x80	; 128
    45ea:	71 05       	cpc	r23, r1
    45ec:	61 05       	cpc	r22, r1
    45ee:	09 f0       	breq	.+2      	; 0x45f2 <__ftoa_engine+0x36>
    45f0:	3c 5f       	subi	r19, 0xFC	; 252
    45f2:	3c 5f       	subi	r19, 0xFC	; 252
    45f4:	3d 93       	st	X+, r19
    45f6:	91 30       	cpi	r25, 0x01	; 1
    45f8:	08 f0       	brcs	.+2      	; 0x45fc <__ftoa_engine+0x40>
    45fa:	80 68       	ori	r24, 0x80	; 128
    45fc:	91 1d       	adc	r25, r1
    45fe:	df 93       	push	r29
    4600:	cf 93       	push	r28
    4602:	1f 93       	push	r17
    4604:	0f 93       	push	r16
    4606:	ff 92       	push	r15
    4608:	ef 92       	push	r14
    460a:	19 2f       	mov	r17, r25
    460c:	98 7f       	andi	r25, 0xF8	; 248
    460e:	96 95       	lsr	r25
    4610:	e9 2f       	mov	r30, r25
    4612:	96 95       	lsr	r25
    4614:	96 95       	lsr	r25
    4616:	e9 0f       	add	r30, r25
    4618:	ff 27       	eor	r31, r31
    461a:	ec 5d       	subi	r30, 0xDC	; 220
    461c:	fe 4f       	sbci	r31, 0xFE	; 254
    461e:	99 27       	eor	r25, r25
    4620:	33 27       	eor	r19, r19
    4622:	ee 24       	eor	r14, r14
    4624:	ff 24       	eor	r15, r15
    4626:	a7 01       	movw	r20, r14
    4628:	e7 01       	movw	r28, r14
    462a:	05 90       	lpm	r0, Z+
    462c:	08 94       	sec
    462e:	07 94       	ror	r0
    4630:	28 f4       	brcc	.+10     	; 0x463c <__ftoa_engine+0x80>
    4632:	36 0f       	add	r19, r22
    4634:	e7 1e       	adc	r14, r23
    4636:	f8 1e       	adc	r15, r24
    4638:	49 1f       	adc	r20, r25
    463a:	51 1d       	adc	r21, r1
    463c:	66 0f       	add	r22, r22
    463e:	77 1f       	adc	r23, r23
    4640:	88 1f       	adc	r24, r24
    4642:	99 1f       	adc	r25, r25
    4644:	06 94       	lsr	r0
    4646:	a1 f7       	brne	.-24     	; 0x4630 <__ftoa_engine+0x74>
    4648:	05 90       	lpm	r0, Z+
    464a:	07 94       	ror	r0
    464c:	28 f4       	brcc	.+10     	; 0x4658 <__ftoa_engine+0x9c>
    464e:	e7 0e       	add	r14, r23
    4650:	f8 1e       	adc	r15, r24
    4652:	49 1f       	adc	r20, r25
    4654:	56 1f       	adc	r21, r22
    4656:	c1 1d       	adc	r28, r1
    4658:	77 0f       	add	r23, r23
    465a:	88 1f       	adc	r24, r24
    465c:	99 1f       	adc	r25, r25
    465e:	66 1f       	adc	r22, r22
    4660:	06 94       	lsr	r0
    4662:	a1 f7       	brne	.-24     	; 0x464c <__ftoa_engine+0x90>
    4664:	05 90       	lpm	r0, Z+
    4666:	07 94       	ror	r0
    4668:	28 f4       	brcc	.+10     	; 0x4674 <__ftoa_engine+0xb8>
    466a:	f8 0e       	add	r15, r24
    466c:	49 1f       	adc	r20, r25
    466e:	56 1f       	adc	r21, r22
    4670:	c7 1f       	adc	r28, r23
    4672:	d1 1d       	adc	r29, r1
    4674:	88 0f       	add	r24, r24
    4676:	99 1f       	adc	r25, r25
    4678:	66 1f       	adc	r22, r22
    467a:	77 1f       	adc	r23, r23
    467c:	06 94       	lsr	r0
    467e:	a1 f7       	brne	.-24     	; 0x4668 <__ftoa_engine+0xac>
    4680:	05 90       	lpm	r0, Z+
    4682:	07 94       	ror	r0
    4684:	20 f4       	brcc	.+8      	; 0x468e <__ftoa_engine+0xd2>
    4686:	49 0f       	add	r20, r25
    4688:	56 1f       	adc	r21, r22
    468a:	c7 1f       	adc	r28, r23
    468c:	d8 1f       	adc	r29, r24
    468e:	99 0f       	add	r25, r25
    4690:	66 1f       	adc	r22, r22
    4692:	77 1f       	adc	r23, r23
    4694:	88 1f       	adc	r24, r24
    4696:	06 94       	lsr	r0
    4698:	a9 f7       	brne	.-22     	; 0x4684 <__ftoa_engine+0xc8>
    469a:	84 91       	lpm	r24, Z
    469c:	10 95       	com	r17
    469e:	17 70       	andi	r17, 0x07	; 7
    46a0:	41 f0       	breq	.+16     	; 0x46b2 <__ftoa_engine+0xf6>
    46a2:	d6 95       	lsr	r29
    46a4:	c7 95       	ror	r28
    46a6:	57 95       	ror	r21
    46a8:	47 95       	ror	r20
    46aa:	f7 94       	ror	r15
    46ac:	e7 94       	ror	r14
    46ae:	1a 95       	dec	r17
    46b0:	c1 f7       	brne	.-16     	; 0x46a2 <__ftoa_engine+0xe6>
    46b2:	ea ec       	ldi	r30, 0xCA	; 202
    46b4:	f0 e0       	ldi	r31, 0x00	; 0
    46b6:	68 94       	set
    46b8:	15 90       	lpm	r1, Z+
    46ba:	15 91       	lpm	r17, Z+
    46bc:	35 91       	lpm	r19, Z+
    46be:	65 91       	lpm	r22, Z+
    46c0:	95 91       	lpm	r25, Z+
    46c2:	05 90       	lpm	r0, Z+
    46c4:	7f e2       	ldi	r23, 0x2F	; 47
    46c6:	73 95       	inc	r23
    46c8:	e1 18       	sub	r14, r1
    46ca:	f1 0a       	sbc	r15, r17
    46cc:	43 0b       	sbc	r20, r19
    46ce:	56 0b       	sbc	r21, r22
    46d0:	c9 0b       	sbc	r28, r25
    46d2:	d0 09       	sbc	r29, r0
    46d4:	c0 f7       	brcc	.-16     	; 0x46c6 <__ftoa_engine+0x10a>
    46d6:	e1 0c       	add	r14, r1
    46d8:	f1 1e       	adc	r15, r17
    46da:	43 1f       	adc	r20, r19
    46dc:	56 1f       	adc	r21, r22
    46de:	c9 1f       	adc	r28, r25
    46e0:	d0 1d       	adc	r29, r0
    46e2:	7e f4       	brtc	.+30     	; 0x4702 <__ftoa_engine+0x146>
    46e4:	70 33       	cpi	r23, 0x30	; 48
    46e6:	11 f4       	brne	.+4      	; 0x46ec <__ftoa_engine+0x130>
    46e8:	8a 95       	dec	r24
    46ea:	e6 cf       	rjmp	.-52     	; 0x46b8 <__ftoa_engine+0xfc>
    46ec:	e8 94       	clt
    46ee:	01 50       	subi	r16, 0x01	; 1
    46f0:	30 f0       	brcs	.+12     	; 0x46fe <__ftoa_engine+0x142>
    46f2:	08 0f       	add	r16, r24
    46f4:	0a f4       	brpl	.+2      	; 0x46f8 <__ftoa_engine+0x13c>
    46f6:	00 27       	eor	r16, r16
    46f8:	02 17       	cp	r16, r18
    46fa:	08 f4       	brcc	.+2      	; 0x46fe <__ftoa_engine+0x142>
    46fc:	20 2f       	mov	r18, r16
    46fe:	23 95       	inc	r18
    4700:	02 2f       	mov	r16, r18
    4702:	7a 33       	cpi	r23, 0x3A	; 58
    4704:	28 f0       	brcs	.+10     	; 0x4710 <__ftoa_engine+0x154>
    4706:	79 e3       	ldi	r23, 0x39	; 57
    4708:	7d 93       	st	X+, r23
    470a:	2a 95       	dec	r18
    470c:	e9 f7       	brne	.-6      	; 0x4708 <__ftoa_engine+0x14c>
    470e:	10 c0       	rjmp	.+32     	; 0x4730 <__ftoa_engine+0x174>
    4710:	7d 93       	st	X+, r23
    4712:	2a 95       	dec	r18
    4714:	89 f6       	brne	.-94     	; 0x46b8 <__ftoa_engine+0xfc>
    4716:	06 94       	lsr	r0
    4718:	97 95       	ror	r25
    471a:	67 95       	ror	r22
    471c:	37 95       	ror	r19
    471e:	17 95       	ror	r17
    4720:	17 94       	ror	r1
    4722:	e1 18       	sub	r14, r1
    4724:	f1 0a       	sbc	r15, r17
    4726:	43 0b       	sbc	r20, r19
    4728:	56 0b       	sbc	r21, r22
    472a:	c9 0b       	sbc	r28, r25
    472c:	d0 09       	sbc	r29, r0
    472e:	98 f0       	brcs	.+38     	; 0x4756 <__ftoa_engine+0x19a>
    4730:	23 95       	inc	r18
    4732:	7e 91       	ld	r23, -X
    4734:	73 95       	inc	r23
    4736:	7a 33       	cpi	r23, 0x3A	; 58
    4738:	08 f0       	brcs	.+2      	; 0x473c <__ftoa_engine+0x180>
    473a:	70 e3       	ldi	r23, 0x30	; 48
    473c:	7c 93       	st	X, r23
    473e:	20 13       	cpse	r18, r16
    4740:	b8 f7       	brcc	.-18     	; 0x4730 <__ftoa_engine+0x174>
    4742:	7e 91       	ld	r23, -X
    4744:	70 61       	ori	r23, 0x10	; 16
    4746:	7d 93       	st	X+, r23
    4748:	30 f0       	brcs	.+12     	; 0x4756 <__ftoa_engine+0x19a>
    474a:	83 95       	inc	r24
    474c:	71 e3       	ldi	r23, 0x31	; 49
    474e:	7d 93       	st	X+, r23
    4750:	70 e3       	ldi	r23, 0x30	; 48
    4752:	2a 95       	dec	r18
    4754:	e1 f7       	brne	.-8      	; 0x474e <__ftoa_engine+0x192>
    4756:	11 24       	eor	r1, r1
    4758:	ef 90       	pop	r14
    475a:	ff 90       	pop	r15
    475c:	0f 91       	pop	r16
    475e:	1f 91       	pop	r17
    4760:	cf 91       	pop	r28
    4762:	df 91       	pop	r29
    4764:	99 27       	eor	r25, r25
    4766:	87 fd       	sbrc	r24, 7
    4768:	90 95       	com	r25
    476a:	08 95       	ret

0000476c <strnlen_P>:
    476c:	fc 01       	movw	r30, r24
    476e:	05 90       	lpm	r0, Z+
    4770:	61 50       	subi	r22, 0x01	; 1
    4772:	70 40       	sbci	r23, 0x00	; 0
    4774:	01 10       	cpse	r0, r1
    4776:	d8 f7       	brcc	.-10     	; 0x476e <strnlen_P+0x2>
    4778:	80 95       	com	r24
    477a:	90 95       	com	r25
    477c:	8e 0f       	add	r24, r30
    477e:	9f 1f       	adc	r25, r31
    4780:	08 95       	ret

00004782 <strnlen>:
    4782:	fc 01       	movw	r30, r24
    4784:	61 50       	subi	r22, 0x01	; 1
    4786:	70 40       	sbci	r23, 0x00	; 0
    4788:	01 90       	ld	r0, Z+
    478a:	01 10       	cpse	r0, r1
    478c:	d8 f7       	brcc	.-10     	; 0x4784 <strnlen+0x2>
    478e:	80 95       	com	r24
    4790:	90 95       	com	r25
    4792:	8e 0f       	add	r24, r30
    4794:	9f 1f       	adc	r25, r31
    4796:	08 95       	ret

00004798 <fputc>:
    4798:	0f 93       	push	r16
    479a:	1f 93       	push	r17
    479c:	cf 93       	push	r28
    479e:	df 93       	push	r29
    47a0:	fb 01       	movw	r30, r22
    47a2:	23 81       	ldd	r18, Z+3	; 0x03
    47a4:	21 fd       	sbrc	r18, 1
    47a6:	03 c0       	rjmp	.+6      	; 0x47ae <fputc+0x16>
    47a8:	8f ef       	ldi	r24, 0xFF	; 255
    47aa:	9f ef       	ldi	r25, 0xFF	; 255
    47ac:	2c c0       	rjmp	.+88     	; 0x4806 <fputc+0x6e>
    47ae:	22 ff       	sbrs	r18, 2
    47b0:	16 c0       	rjmp	.+44     	; 0x47de <fputc+0x46>
    47b2:	46 81       	ldd	r20, Z+6	; 0x06
    47b4:	57 81       	ldd	r21, Z+7	; 0x07
    47b6:	24 81       	ldd	r18, Z+4	; 0x04
    47b8:	35 81       	ldd	r19, Z+5	; 0x05
    47ba:	42 17       	cp	r20, r18
    47bc:	53 07       	cpc	r21, r19
    47be:	44 f4       	brge	.+16     	; 0x47d0 <fputc+0x38>
    47c0:	a0 81       	ld	r26, Z
    47c2:	b1 81       	ldd	r27, Z+1	; 0x01
    47c4:	9d 01       	movw	r18, r26
    47c6:	2f 5f       	subi	r18, 0xFF	; 255
    47c8:	3f 4f       	sbci	r19, 0xFF	; 255
    47ca:	31 83       	std	Z+1, r19	; 0x01
    47cc:	20 83       	st	Z, r18
    47ce:	8c 93       	st	X, r24
    47d0:	26 81       	ldd	r18, Z+6	; 0x06
    47d2:	37 81       	ldd	r19, Z+7	; 0x07
    47d4:	2f 5f       	subi	r18, 0xFF	; 255
    47d6:	3f 4f       	sbci	r19, 0xFF	; 255
    47d8:	37 83       	std	Z+7, r19	; 0x07
    47da:	26 83       	std	Z+6, r18	; 0x06
    47dc:	14 c0       	rjmp	.+40     	; 0x4806 <fputc+0x6e>
    47de:	8b 01       	movw	r16, r22
    47e0:	ec 01       	movw	r28, r24
    47e2:	fb 01       	movw	r30, r22
    47e4:	00 84       	ldd	r0, Z+8	; 0x08
    47e6:	f1 85       	ldd	r31, Z+9	; 0x09
    47e8:	e0 2d       	mov	r30, r0
    47ea:	09 95       	icall
    47ec:	89 2b       	or	r24, r25
    47ee:	e1 f6       	brne	.-72     	; 0x47a8 <fputc+0x10>
    47f0:	d8 01       	movw	r26, r16
    47f2:	16 96       	adiw	r26, 0x06	; 6
    47f4:	8d 91       	ld	r24, X+
    47f6:	9c 91       	ld	r25, X
    47f8:	17 97       	sbiw	r26, 0x07	; 7
    47fa:	01 96       	adiw	r24, 0x01	; 1
    47fc:	17 96       	adiw	r26, 0x07	; 7
    47fe:	9c 93       	st	X, r25
    4800:	8e 93       	st	-X, r24
    4802:	16 97       	sbiw	r26, 0x06	; 6
    4804:	ce 01       	movw	r24, r28
    4806:	df 91       	pop	r29
    4808:	cf 91       	pop	r28
    480a:	1f 91       	pop	r17
    480c:	0f 91       	pop	r16
    480e:	08 95       	ret

00004810 <sprintf>:
    4810:	ae e0       	ldi	r26, 0x0E	; 14
    4812:	b0 e0       	ldi	r27, 0x00	; 0
    4814:	ee e0       	ldi	r30, 0x0E	; 14
    4816:	f4 e2       	ldi	r31, 0x24	; 36
    4818:	0c 94 b5 22 	jmp	0x456a	; 0x456a <__prologue_saves__+0x1c>
    481c:	0d 89       	ldd	r16, Y+21	; 0x15
    481e:	1e 89       	ldd	r17, Y+22	; 0x16
    4820:	86 e0       	ldi	r24, 0x06	; 6
    4822:	8c 83       	std	Y+4, r24	; 0x04
    4824:	1a 83       	std	Y+2, r17	; 0x02
    4826:	09 83       	std	Y+1, r16	; 0x01
    4828:	8f ef       	ldi	r24, 0xFF	; 255
    482a:	9f e7       	ldi	r25, 0x7F	; 127
    482c:	9e 83       	std	Y+6, r25	; 0x06
    482e:	8d 83       	std	Y+5, r24	; 0x05
    4830:	ae 01       	movw	r20, r28
    4832:	47 5e       	subi	r20, 0xE7	; 231
    4834:	5f 4f       	sbci	r21, 0xFF	; 255
    4836:	6f 89       	ldd	r22, Y+23	; 0x17
    4838:	78 8d       	ldd	r23, Y+24	; 0x18
    483a:	ce 01       	movw	r24, r28
    483c:	01 96       	adiw	r24, 0x01	; 1
    483e:	0e 94 24 1f 	call	0x3e48	; 0x3e48 <vfprintf>
    4842:	ef 81       	ldd	r30, Y+7	; 0x07
    4844:	f8 85       	ldd	r31, Y+8	; 0x08
    4846:	e0 0f       	add	r30, r16
    4848:	f1 1f       	adc	r31, r17
    484a:	10 82       	st	Z, r1
    484c:	2e 96       	adiw	r28, 0x0e	; 14
    484e:	e4 e0       	ldi	r30, 0x04	; 4
    4850:	0c 94 d1 22 	jmp	0x45a2	; 0x45a2 <__epilogue_restores__+0x1c>

00004854 <__ultoa_invert>:
    4854:	fa 01       	movw	r30, r20
    4856:	aa 27       	eor	r26, r26
    4858:	28 30       	cpi	r18, 0x08	; 8
    485a:	51 f1       	breq	.+84     	; 0x48b0 <__ultoa_invert+0x5c>
    485c:	20 31       	cpi	r18, 0x10	; 16
    485e:	81 f1       	breq	.+96     	; 0x48c0 <__ultoa_invert+0x6c>
    4860:	e8 94       	clt
    4862:	6f 93       	push	r22
    4864:	6e 7f       	andi	r22, 0xFE	; 254
    4866:	6e 5f       	subi	r22, 0xFE	; 254
    4868:	7f 4f       	sbci	r23, 0xFF	; 255
    486a:	8f 4f       	sbci	r24, 0xFF	; 255
    486c:	9f 4f       	sbci	r25, 0xFF	; 255
    486e:	af 4f       	sbci	r26, 0xFF	; 255
    4870:	b1 e0       	ldi	r27, 0x01	; 1
    4872:	3e d0       	rcall	.+124    	; 0x48f0 <__ultoa_invert+0x9c>
    4874:	b4 e0       	ldi	r27, 0x04	; 4
    4876:	3c d0       	rcall	.+120    	; 0x48f0 <__ultoa_invert+0x9c>
    4878:	67 0f       	add	r22, r23
    487a:	78 1f       	adc	r23, r24
    487c:	89 1f       	adc	r24, r25
    487e:	9a 1f       	adc	r25, r26
    4880:	a1 1d       	adc	r26, r1
    4882:	68 0f       	add	r22, r24
    4884:	79 1f       	adc	r23, r25
    4886:	8a 1f       	adc	r24, r26
    4888:	91 1d       	adc	r25, r1
    488a:	a1 1d       	adc	r26, r1
    488c:	6a 0f       	add	r22, r26
    488e:	71 1d       	adc	r23, r1
    4890:	81 1d       	adc	r24, r1
    4892:	91 1d       	adc	r25, r1
    4894:	a1 1d       	adc	r26, r1
    4896:	20 d0       	rcall	.+64     	; 0x48d8 <__ultoa_invert+0x84>
    4898:	09 f4       	brne	.+2      	; 0x489c <__ultoa_invert+0x48>
    489a:	68 94       	set
    489c:	3f 91       	pop	r19
    489e:	2a e0       	ldi	r18, 0x0A	; 10
    48a0:	26 9f       	mul	r18, r22
    48a2:	11 24       	eor	r1, r1
    48a4:	30 19       	sub	r19, r0
    48a6:	30 5d       	subi	r19, 0xD0	; 208
    48a8:	31 93       	st	Z+, r19
    48aa:	de f6       	brtc	.-74     	; 0x4862 <__ultoa_invert+0xe>
    48ac:	cf 01       	movw	r24, r30
    48ae:	08 95       	ret
    48b0:	46 2f       	mov	r20, r22
    48b2:	47 70       	andi	r20, 0x07	; 7
    48b4:	40 5d       	subi	r20, 0xD0	; 208
    48b6:	41 93       	st	Z+, r20
    48b8:	b3 e0       	ldi	r27, 0x03	; 3
    48ba:	0f d0       	rcall	.+30     	; 0x48da <__ultoa_invert+0x86>
    48bc:	c9 f7       	brne	.-14     	; 0x48b0 <__ultoa_invert+0x5c>
    48be:	f6 cf       	rjmp	.-20     	; 0x48ac <__ultoa_invert+0x58>
    48c0:	46 2f       	mov	r20, r22
    48c2:	4f 70       	andi	r20, 0x0F	; 15
    48c4:	40 5d       	subi	r20, 0xD0	; 208
    48c6:	4a 33       	cpi	r20, 0x3A	; 58
    48c8:	18 f0       	brcs	.+6      	; 0x48d0 <__ultoa_invert+0x7c>
    48ca:	49 5d       	subi	r20, 0xD9	; 217
    48cc:	31 fd       	sbrc	r19, 1
    48ce:	40 52       	subi	r20, 0x20	; 32
    48d0:	41 93       	st	Z+, r20
    48d2:	02 d0       	rcall	.+4      	; 0x48d8 <__ultoa_invert+0x84>
    48d4:	a9 f7       	brne	.-22     	; 0x48c0 <__ultoa_invert+0x6c>
    48d6:	ea cf       	rjmp	.-44     	; 0x48ac <__ultoa_invert+0x58>
    48d8:	b4 e0       	ldi	r27, 0x04	; 4
    48da:	a6 95       	lsr	r26
    48dc:	97 95       	ror	r25
    48de:	87 95       	ror	r24
    48e0:	77 95       	ror	r23
    48e2:	67 95       	ror	r22
    48e4:	ba 95       	dec	r27
    48e6:	c9 f7       	brne	.-14     	; 0x48da <__ultoa_invert+0x86>
    48e8:	00 97       	sbiw	r24, 0x00	; 0
    48ea:	61 05       	cpc	r22, r1
    48ec:	71 05       	cpc	r23, r1
    48ee:	08 95       	ret
    48f0:	9b 01       	movw	r18, r22
    48f2:	ac 01       	movw	r20, r24
    48f4:	0a 2e       	mov	r0, r26
    48f6:	06 94       	lsr	r0
    48f8:	57 95       	ror	r21
    48fa:	47 95       	ror	r20
    48fc:	37 95       	ror	r19
    48fe:	27 95       	ror	r18
    4900:	ba 95       	dec	r27
    4902:	c9 f7       	brne	.-14     	; 0x48f6 <__ultoa_invert+0xa2>
    4904:	62 0f       	add	r22, r18
    4906:	73 1f       	adc	r23, r19
    4908:	84 1f       	adc	r24, r20
    490a:	95 1f       	adc	r25, r21
    490c:	a0 1d       	adc	r26, r0
    490e:	08 95       	ret

00004910 <_exit>:
    4910:	f8 94       	cli

00004912 <__stop_program>:
    4912:	ff cf       	rjmp	.-2      	; 0x4912 <__stop_program>
